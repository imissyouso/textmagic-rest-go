---
swagger: "2.0"
info:
  version: "2"
  title: "TextMagic API Documentation"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "API Support"
    url: "http://docs.textmagictesting.com/"
    email: "support@textmagi.biz"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    url: "https://www.textmagic.com/wp-content/themes/textmagic-genesis/assets/vendor/textmagic/marketing/css/../images/logo/logo.svg"
    altText: "TextMagic"
host: "my.textmagic.com"
tags:
- name: "Outbound Messages"
  description: "## How to send a single text message\n\nTo send a simple text message\
    \ to one recipient, you should set only the `text` and the `phones` parameters.\
    \ `text` should\ncontain that desired text and `phones` should be set to the recipient’\
    s international phone number.\n\nFor example, to send an SMS message with the\
    \ text “I love TextMagic” to the phone number +44 (0) 7 860021130, use the command:\n\
    \n> POST https://rest.textmagic.com/api/v2/messages\n\nwith the following parameters:\n\
    \n| Parameter | Value |\n| --------- | ----- |\n| text |I love TextMagic (don’\
    t forget to urlencode your string!) |\n| phones | 447860021130 |\n\nYou will receive\
    \ a result like this:\n\n| Parameter | Example |\n| --------- | ------- |\n| id\
    \ | 49576009 |\n| href | /api/v2/messages/49576009 |\n| type | message |\n| sessionId\
    \ | 34436600 |\n| bulkId | null |\n| messageId | 49576009 |\n| scheduleId | null\
    \ |\n\nAs long as you have sent a message to at least one recipient, the TextMagic\
    \ API will return not only the session ID,\nbut also the single message ID. Also,\
    \ you can watch for the delivery status changes using this ID without\nfetching\
    \ session messages first. Since this is not a bulk session or scheduled message,\n\
    `bulkId` and `scheduleId` are null.\n\n## How to send bulk text messages\nTODO\n\
    \n## Sending more than 1,000 messages in one session\nTODO\n\n## How to send a\
    \ text message with an attachment\nTODO\n\n## Delivery status callback\n\n## Delivery\
    \ status codes\n\nBelow you’ll find several delivery statuses for sent messages,\
    \ which are divided into two types:\n*   **Intermediate** – temporary statuses\
    \ that can change as the messages are processed.\n*   **Final** – these statuses\
    \ are final and will not change.\n\n| Delivery status | Type | Description |\n\
    |-----------------|------|-------------|\n| **a** | intermediate | The mobile\
    \ operator has acknowledged the message. |\n| **b** | intermediate |The mobile\
    \ operator has queued the message. |\n|**d** | final | The message has been successfully\
    \ delivered to the handset. |\n| **e** | final | An error occurred while sending\
    \ the message. |\n| **f** | final | An error occurred while delivering the message.\
    \ |\n| **j** | final | The mobile operator has rejected the message. |\n| **q**\
    \ | intermediate | The message is queued on the TextMagic server. |\n| **r** |\
    \ intermediate | The message has been sent to the mobile operator. | \n| **s**\
    \ | intermediate |This message is scheduled to be sent later. |\n| **u** | final\
    \ | The status is unknown. |"
  x-displayName: "Outgoing messages\n"
- name: "Inbound Messages"
  description: "With the TextMagic API, you can establish a full two-way communication\
    \ pipeline for sending and receiving text messages within your application.\n\n\
    ## Incoming messages callback\n\nA callback is a mechanism that posts the JSON\
    \ body of a received message to the URL on a server that you specify. The server\
    \ application which receives the callback\ncan save the message data into a database,\
    \ send user notifications, etc.\n\nHere is how to set up the incoming messages\
    \ callback URL:\n\n1.  [Log in](https://my.textmagic.com/) to TextMagic (or [start\
    \ a free trial](https://my.textmagic.com/register/) if you haven’t registered\
    \ yet).\n2.  Go to the\_[API](https://my.textmagic.com/online/api/settings) page.\n\
    3.  Enter your callback URL into the\_**Callback URL for incoming messages** field.\n\
    4.  Click the\_**Test** button to test your URL.\n5.  If it’s successful, click\
    \ **Save changes**.\n\nYour server should reply with a **200 OK** response at\
    \ this URL. If it does not, your callback URL will be treated as invalid and the\
    \ inbound messages will not be passed to\nyour application.\n\n### Call parameters\n\
    \nYour callback URL will be triggered immediately after a message reaches the\
    \ TextMagic server. The parameters are passed by the **POST** method and contain\
    \ the following\ninformation (i.e. exact copy of the **reply** resource). The\_\
    Resource format is basically the format of the reply when making the request to\
    \ the specific API resource.\n\n| Parameter | Example | Description |\n| ---------\
    \ | ------- | ----------- |\n| **id**    | `1782832`| Inbound message ID. |\n\
    | **sender** | `447860021130` | Sender phone number. |\n| **receiver** | `447624800500`\
    \ | Receiver phone number (i.e. **your** dedicated or shared reply number). |\n\
    | **messageTime** | `2012-11-28T18:38:28+0000` | The time when the message reached\
    \ the TextMagic server. |\n| **text** | `Test reply` | Inbound message text. |\n"
  x-displayName: "Incoming messages"
- name: "Scheduled Messages"
  description: "You can schedule text messages to be sent at a later date or time,\
    \ or can create recurring text message sessions with TextMagic API. Below is a\
    \ detailed overview of how to do both.\n"
  x-displayName: "Messages scheduling"
- name: "Two Factor auth"
  description: "You can easily verify your customers using their phone numbers with\
    \ the help of 2FA (better known as two-factor authentication) and protect against\
    \ fraud, build trust, and increase conversions. There is a simple way to do this\
    \ with an API call to a TextMagic endpoint. With the help of TextMagic API you\
    \ can:\n\n*   Send two-factor authentication messages (2FA)\n*   Send one-time\
    \ passwords (OTP)\n*   Integrate passwordless login into your app\n*   Protect\
    \ your app from fraud\n\n## How does it work?\n\n* **Step 1:** Your server makes\
    \ an API call to the TextMagic endpoint, and we send a text message (and later,\
    \ as a fallback, a generate a text-to-speech voice call) with a verification code\
    \ to the phone number supplied in the initial request.\n\n* **Step 2:** Once the\
    \ code is received, the user enters it into the relevant input field in your app.\
    \ This code needs to be passed to TextMagic in the second API call; if it is correct,\
    \ the server will respond with the correct response code. This way, you can ensure\
    \ that the recipient really owns the phone number entered into your app or form.\n\
    \n## Verification workflow\n\nTextMagic verification API sends a PIN code by text\
    \ message and follows up with two subsequent voice calls if the request wasn’\
    t completed or canceled. Below you will find the description of the default workflow.\n\
    \n1.  Send **a text message** with a verification code.\n2.  _Wait for 60 seconds._\n\
    3.  If the correct code was not supplied, send **the first text-to-speech**\_\
    voice call.\n4.  _Wait for 60 seconds._\n5.  If the code was not supplied, send\
    \ **the second text-to-speech**\_voice call.\n6.  _Wait for the verification._\
    \ The verification code is **valid for 5 minutes** since the initial request.\n\
    \n> **Please note:**\_Submitting another verification request for the same phone\
    \ number before the original code has expired will result in a 409 error code.\
    \ The new verification request can be submitted only once the previous code has\
    \ expired (after 5 minutes) or canceled.\n"
  x-displayName: "Two-factor authentication"
- name: "Chats"
  description: "In TextMagic, an SMS chat is a convenient grouping of inbound and\
    \ outbound messages, addressed to specified recipients and arranged as a sorted\
    \ list. Take a look at the [SMS Chat](https://my.textmagic.com/online/messages/conversation)\
    \ feature in TextMagic Online. Under the hood, this feature is represented by\
    \ the **chat** resource.\n"
  x-displayName: "Chats"
- name: "Outbound Message Sessions"
  description: "When you send an SMS to more than one recipient, it is collected as\
    \ one **message session**. However, the text in your messages (in one session)\
    \ \nmay vary and you can send personalized texts using [Templates](/docs/api/sms-templates/).\
    \ But first, let’s learn how to manage SMS sessions \nvia the TextMagic API."
  x-displayName: "Sessions"
- name: "Templates"
  description: "Templates can save time and effort when the same message format is\
    \ required. Furthermore, \nyour customers will receive personalized messages even\
    \ when you’ve applied templates. \nAll you have to do is use the embed **tags**\
    \ into the template text."
  x-displayName: "Templates"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- BasicAuth: []
paths:
  /api/v2/auth:
    post:
      tags:
      - "TextMagic"
      summary: "Authenticate user by given username and password."
      description: "Returning a username and token that you should pass to the all\
        \ requests (in X-TM-Username and X-TM-Key, respectively)"
      operationId: "doAuth"
      parameters:
      - in: "body"
        name: "DoAuthInputObject"
        required: true
        schema:
          $ref: "#/definitions/DoAuthInputObject"
        x-exportParamName: "DoAuthInputObject"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/DoAuthResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
      security: []
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DoAuthInputObject();\n\
          \n// Required parameters\n$input->setUsername(\"test@test.com\");\n$input->setPassword(\"\
          test\");\n\n// Optional parameters, you can skip these setters calls\n$input->setAppName(\"\
          My application\");\n$input->setAppVersion(\"1.0.0 beta\");\n$input->setDeviceId(\"\
          03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\");\n$input->setPushServiceType(\"\
          a\");\n$input->setTfaCode(\"12345\");\n$input->setTfaId(\"12345\");\n\n\
          try {\n    // DoAuthResponse class object\n    $result = $api->doAuth($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->doAuth: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DoAuthInputObject input = new DoAuthInputObject();\n\n       \
          \ // Required parameters\n        input.setUsername(\"test@test.com\");\n\
          \        input.setPassword(\"test\");\n\n        // Optional parameters,\
          \ you can skip these setters calls\n        input.setAppName(\"My application\"\
          );\n        input.setAppVersion(\"1.0.0 beta\");\n        input.setDeviceId(\"\
          03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\");\n  \
          \      input.setPushServiceType(\"a\");\n        input.setTfaCode(\"12345\"\
          );\n        input.setTfaId(\"12345\");\n\n        try {\n            //\
          \ DoAuthResponse class object\n            DoAuthResponse obj = apiInstance.doAuth(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling doAuth\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    username: \"test@test.com\",\n    password: \"test\",\n\
          \    // Optional parameters\n    appName: \"My application\",\n    appVersion:\
          \ \"1.0.0 beta\",\n    deviceId: \"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\"\
          ,\n    pushServiceType: \"a\",\n    tfaCode: \"12345\",\n    tfaId: \"12345\"\
          ,\n}\n\napi.doAuth(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DoAuthInputObject.new\n\
          \n# Required parameters\nobj.username = \"test@test.com\"\nobj.password\
          \ = \"test\"\n# Optional parameters, you can skip them\nobj.app_name = \"\
          My application\"\nobj.app_version = \"1.0.0 beta\"\nobj.device_id = \"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\"\
          \nobj.push_service_type = \"a\"\nobj.tfa_code = \"12345\"\nobj.tfa_id =\
          \ \"12345\"\n\nbegin\n    # DoAuthResponse object\n    result = api.do_auth(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->do_auth: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DoAuthInputObject();\n\n            // Required parameters\n   \
          \         obj.Username = \"test@test.com\";\n            obj.Password =\
          \ \"test\";\n\n            // Optional parameters, you can skip these setters\
          \ calls\n            obj.AppName = \"My application\";\n            obj.AppVersion\
          \ = \"1.0.0 beta\";\n            obj.DeviceId = \"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\"\
          ;\n            obj.PushServiceType = \"a\";\n            obj.TfaCode = \"\
          12345\";\n            obj.TfaId = \"12345\";\n\n            try {\n    \
          \            // DoAuthResponse class object\n                var result\
          \ = apiInstance.DoAuth(obj);\n                // ...\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ doAuth: \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DoAuthInputObject With {\n            .Username = \"test@test.com\",\n\
          \            .Password = \"test\",\n            .AppName = \"My application\"\
          ,\n            .AppVersion = \"1.0.0 beta\",\n            .DeviceId = \"\
          03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\",\n   \
          \         .PushServiceType = \"a\",\n            .TfaCode = \"12345\",\n\
          \            .TfaId = \"12345\"\n        }\n\n        Try\n            '\
          \ DoAuthResponse class object\n            Dim result = apiInstance.DoAuth(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling doAuth: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Username: \"test@test.com\",\n\
          \        Password: \"test\",\n        // Optional parameters, you can skip\
          \ them\n        AppName: \"My application\",\n        AppVersion: \"1.0.0\
          \ beta\",\n        DeviceId: \"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\"\
          ,\n        PushServiceType: \"a\",\n        TfaCode: \"12345\",\n      \
          \  TfaId: \"12345\",\n    }\n\n    // tm.DoAuthResponse struct\n    result,\
          \ _, err := client.TextMagicApi.DoAuth(auth, input)\n\n    if err != nil\
          \ {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\"\
          , result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DoAuthInputObject>\
          \ input(new DoAuthInputObject);\n    // Required parameters\n    input->setUsername(\"\
          test@test.com\");\n    input->setPassword(\"test\");\n    // Optional parameters,\
          \ you can skip them\n    input->setAppName(\"My application\");\n    input->setAppVersion(\"\
          1.0.0 beta\");\n    input->setDeviceId(\"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\"\
          );\n    input->setPushServiceType(\"a\");\n    input->setTfaCode(\"12345\"\
          );\n    input->setTfaId(\"12345\");\n\n    try {\n        pplx::task<std::shared_ptr<DoAuthResponse>>\
          \ result = api.doAuth(input);\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"doAuth() exception: \" << e.what() << '\\n';\n    }\n\n    return\
          \ 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DoAuthInputObject()\n\n# Required parameters\ninput.username\
          \ = \"test@test.com\"\ninput.password = \"test\"\n# Optional parameters,\
          \ you can skip them\ninput.app_name = \"My application\"\ninput.app_version\
          \ = \"1.0.0 beta\"\ninput.device_id = \"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2\"\
          \ninput.push_service_type = \"a\"\ninput.tfa_code = \"12345\"\ninput.tfa_id\
          \ = \"12345\"\n\ntry:\n    # DoAuthResponse object\n    result = api_instance.do_auth(do_auth_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->do_auth: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DoAuthInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DoAuthInputObject->new(\n\
          \    # Required parameters\n    username => 'test@test.com',\n    password\
          \ => 'test',\n    # Optional parameters, you can skip them\n    appName\
          \ => 'My application',\n    appVersion => '1.0.0 beta',\n    deviceId =>\
          \ '03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2',\n \
          \   pushServiceType => 'a',\n    tfaCode => '12345',\n    tfaId => '12345',\n\
          );\n\neval {\n    # DoAuthResponse object\n    my $result = $api_instance->do_auth(do_auth_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->do_auth: $@\\n\";\n}"
  /api/v2/timezones:
    get:
      tags:
      - "TextMagic"
      summary: "Return all available timezone IDs."
      description: ""
      operationId: "getTimezones"
      parameters:
      - name: "full"
        in: "query"
        description: "Return full info about timezones in array (0 or 1). Default\
          \ is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Full"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetTimezonesResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getTimezones method\
          \ below, default values will be used\n$full = 0;\n\ntry {\n    // GetTimezonesResponse\
          \ class object\n    $result = $api->getTimezones($full);\n    // ...\n}\
          \ catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getTimezones:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getTimezones\
          \ method below, default values will be used\n        int full = 0;\n\n \
          \       try {\n            // GetTimezonesResponse class object\n      \
          \      GetTimezonesResponse obj = apiInstance.getTimezones(full);\n    \
          \        // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getTimezones\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    full: 0,\n}\n\napi.getTimezones().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  full: 0,\n}\n\nbegin\n    # GetTimezonesResponse object\n    result =\
          \ api.get_timezones(params)\n    # ...\nrescue TextMagic::ApiError => e\n\
          \    puts \"Exception when calling TextMagicApi->get_timezones: #{e}\"\n\
          end"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getTimezones method below, default\
          \ values will be used\n            int full = 0;\n\n            try {\n\
          \                // GetTimezonesResponse class object\n                var\
          \ result = apiInstance.GetTimezones(full);\n                // ...\n   \
          \         } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getTimezones: \"+e.Message);\n            }\n   \
          \     }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getTimezones method below, default\
          \ values will be used\n        Dim full As Integer = 0\n\n        Try\n\
          \            ' GetTimezonesResponse class object\n            Dim result\
          \ = apiInstance.GetTimezones(full)\n            ' ...\n        Catch e As\
          \ Exception\n            Console.WriteLine(\"Exception when calling getTimezones:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetTimezonesOpts{\n     \
          \   // Optional parameters\n        Full: optional.NewInt32(0),\n    }\n\
          \n    // tm.GetTimezonesResponse struct\n    result, _, err := client.TextMagicApi.GetTimezones(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ full = 0;\n\n    try {\n        pplx::task<std::shared_ptr<GetTimezonesResponse>>\
          \ result = api.getTimezones(full);\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"getTimezones() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\nfull = 0\n\ntry:\n    # GetTimezonesResponse\
          \ object\n    result = api_instance.get_timezones(full=full)\n    # ...\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_timezones:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $full = 0;\n\neval {\n    # GetTimezonesResponse\
          \ object\n    my $result = $api_instance->get_timezones(full => $full);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_timezones:\
          \ $@\\n\";\n}"
  /api/v2/ping:
    get:
      tags:
      - "TextMagic"
      summary: "Just does a pong."
      description: ""
      operationId: "ping"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/PingResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // PingResponse class object\n    $result = $api->ping();\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->ping: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // PingResponse class object\n          \
          \  PingResponse obj = apiInstance.ping();\n            // ...\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling ping\");\n            e.printStackTrace();\n        }\n    }\n\
          }"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.ping().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # PingResponse\
          \ object\n    result = api.ping()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->ping: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // PingResponse class object\n                var result\
          \ = apiInstance.Ping();\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling ping:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' PingResponse class object\n            Dim result = apiInstance.Ping()\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling ping: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.PingResponse struct\n    result,\
          \ _, err := client.TextMagicApi.Ping(auth, )\n\n    if err != nil {\n  \
          \      log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\", result)\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<PingResponse>>\
          \ result = api.ping();\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"ping() exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n\
          }"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # PingResponse object\n    result = api_instance.ping()\n    # ...\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->ping:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # PingResponse object\n    my $result = $api_instance->ping();\n  \
          \  # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->ping:\
          \ $@\\n\";\n}"
  /api/v2/user/disallowed-rules:
    get:
      tags:
      - "TextMagic"
      summary: "Get an array of all rules that are disallowed to the current account."
      description: ""
      operationId: "getDisallowedRules"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetDisallowedRulesResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetDisallowedRulesResponse class object\n    $result\
          \ = $api->getDisallowedRules();\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getDisallowedRules: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetDisallowedRulesResponse class object\n\
          \            GetDisallowedRulesResponse obj = apiInstance.getDisallowedRules();\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getDisallowedRules\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getDisallowedRules().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetDisallowedRulesResponse\
          \ object\n    result = api.get_disallowed_rules()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_disallowed_rules:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetDisallowedRulesResponse class object\n      \
          \          var result = apiInstance.GetDisallowedRules();\n            \
          \    // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getDisallowedRules: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetDisallowedRulesResponse class object\n            Dim result\
          \ = apiInstance.GetDisallowedRules()\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling getDisallowedRules:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetDisallowedRulesResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetDisallowedRules(auth, )\n\n\
          \    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetDisallowedRulesResponse>>\
          \ result = api.getDisallowedRules();\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getDisallowedRules() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetDisallowedRulesResponse object\n    result = api_instance.get_disallowed_rules()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_disallowed_rules: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetDisallowedRulesResponse object\n    my $result = $api_instance->get_disallowed_rules();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_disallowed_rules:\
          \ $@\\n\";\n}"
  /api/v2/push/tokens:
    get:
      tags:
      - "TextMagic"
      summary: "Get all device tokens assigned to the current account"
      description: ""
      operationId: "getPushTokens"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetPushTokensResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetPushTokensResponse class object\n    $result =\
          \ $api->getPushTokens();\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getPushTokens: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetPushTokensResponse class object\n \
          \           GetPushTokensResponse obj = apiInstance.getPushTokens();\n \
          \           // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getPushTokens\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getPushTokens().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetPushTokensResponse\
          \ object\n    result = api.get_push_tokens()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_push_tokens:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetPushTokensResponse class object\n           \
          \     var result = apiInstance.GetPushTokens();\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getPushTokens: \"+e.Message);\n            }\n  \
          \      }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetPushTokensResponse class object\n            Dim result =\
          \ apiInstance.GetPushTokens()\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling getPushTokens: \"\
          \ + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetPushTokensResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetPushTokens(auth, )\n\n   \
          \ if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetPushTokensResponse>>\
          \ result = api.getPushTokens();\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"getPushTokens() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetPushTokensResponse object\n    result = api_instance.get_push_tokens()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_push_tokens: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetPushTokensResponse object\n    my $result = $api_instance->get_push_tokens();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_push_tokens:\
          \ $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Add or update a device token."
      description: ""
      operationId: "createPushToken"
      parameters:
      - in: "body"
        name: "CreatePushTokenInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreatePushTokenInputObject"
        x-exportParamName: "CreatePushTokenInputObject"
      responses:
        201:
          description: "Returned when created with success."
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreatePushTokenInputObject();\n\
          \n// Required parameters\n$input->setDeviceId(\"123\");\n$input->setPushServiceType(\"\
          a\");\n\ntry {\n    $api->createPushToken($input);\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->createPushToken: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreatePushTokenInputObject input = new CreatePushTokenInputObject();\n\
          \n        // Required parameters\n        input.setDeviceId(\"123\");\n\
          \        input.setPushServiceType(\"a\");\n\n        try {\n           \
          \ apiInstance.createPushToken(input);\n        } catch (ApiException e)\
          \ {\n            System.err.println(\"Exception when calling createPushToken\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    deviceId: \"123\",\n    pushServiceType: \"a\",\n}\n\n\
          api.createPushToken(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreatePushTokenInputObject.new\n\
          \n# Required parameters\nobj.device_id = \"123\"\nobj.push_service_type\
          \ = \"a\"\n\nbegin\n    api.create_push_token(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->create_push_token:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreatePushTokenInputObject();\n\n            // Required parameters\n\
          \            obj.DeviceId = \"123\";\n            obj.PushServiceType =\
          \ \"a\";\n\n            try {\n                apiInstance.CreatePushToken(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling createPushToken: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreatePushTokenInputObject With {\n            .DeviceId = \"123\",\n\
          \            .PushServiceType = \"a\"\n        }\n\n        Try\n      \
          \      apiInstance.CreatePushToken(obj)\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ createPushToken: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        DeviceId: \"123\",\n        PushServiceType:\
          \ \"a\",\n    }\n\n    client.TextMagicApi.CreatePushToken(auth, input)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        //\
          \ ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreatePushTokenInputObject>\
          \ input(new CreatePushTokenInputObject);\n    // Required parameters\n \
          \   input->setDeviceId(\"123\");\n    input->setPushServiceType(\"a\");\n\
          \n    try {\n        pplx::task result = api.createPushToken(input);\n \
          \       result.wait();\n    } catch(const std::exception& e) {\n       \
          \ std::cout << \"createPushToken() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreatePushTokenInputObject()\n\n# Required parameters\ninput.device_id\
          \ = \"123\"\ninput.push_service_type = \"a\"\n\ntry:\n    api_instance.create_push_token(create_push_token_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->create_push_token:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreatePushTokenInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreatePushTokenInputObject->new(\n\
          \    # Required parameters\n    deviceId => '123',\n    pushServiceType\
          \ => 'a',\n);\n\neval {\n    $api_instance->create_push_token(create_push_token_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->create_push_token:\
          \ $@\\n\";\n}"
  /api/v2/push/tokens/{type}/{deviceId}:
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a push notification device token."
      description: ""
      operationId: "deletePushToken"
      produces: []
      parameters:
      - name: "type"
        in: "path"
        required: true
        type: "string"
        default: "a"
        x-exportParamName: "Type_"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        default: 123
        x-exportParamName: "DeviceId"
      responses:
        204:
          description: "Returned when deleted with success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$type = \"a\";\n$deviceId = 123;\n\ntry {\n    $api->deletePushToken($type,\
          \ $deviceId);\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->deletePushToken: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String type = \"a\";\n        int deviceId = 123;\n\n        try\
          \ {\n            apiInstance.deletePushToken(type, deviceId);\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling deletePushToken\");\n            e.printStackTrace();\n      \
          \  }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ type = \"a\";\nconst deviceId = 123;\n\napi.deletePushToken(type, deviceId).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\ntype = 'a'\ndevice_id = 123\n\
          \nbegin\n    api.delete_push_token(type, deviceId)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_push_token:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ type = \"a\";\n            int deviceId = 123;\n\n            try {\n\
          \                apiInstance.DeletePushToken(type, deviceId);\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling deletePushToken: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim type As\
          \ String = \"a\"\n        Dim deviceId As Integer = 123\n\n        Try\n\
          \            apiInstance.DeletePushToken(type, deviceId)\n            '\
          \ ...\n        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling deletePushToken: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var type string = \"\
          a\"\n    var deviceId int32 = 123\n\n    client.TextMagicApi.DeletePushToken(auth,\
          \ type, deviceId)\n\n    if err != nil {\n        log.Fatal(err)\n    }\
          \ else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string type = \"a\";\n   \
          \ int deviceId = 123;\n\n    try {\n        pplx::task result = api.deletePushToken(type,\
          \ deviceId);\n        result.wait();\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"deletePushToken() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ntype =\
          \ \"a\"\ndevice_id = 123\n\ntry:\n    api_instance.delete_push_token(type=type,\
          \ device_id=device_id)\nexcept ApiException as e:\n    print(\"Exception\
          \ when calling TextMagicApi->delete_push_token: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $type =\
          \ 'a';\nmy $deviceId = 123;\n\neval {\n    $api_instance->delete_push_token(type\
          \ => $type, deviceId => $deviceId);\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->delete_push_token: $@\\n\";\n}"
  /api/v2/state:
    get:
      tags:
      - "TextMagic"
      summary: "Get current entities state"
      description: ""
      operationId: "getState"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetStateResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetStateResponse class object\n    $result = $api->getState();\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getState: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetStateResponse class object\n      \
          \      GetStateResponse obj = apiInstance.getState();\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getState\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getState().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetStateResponse\
          \ object\n    result = api.get_state()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_state: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetStateResponse class object\n                var\
          \ result = apiInstance.GetState();\n                // ...\n           \
          \ } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling getState: \"+e.Message);\n            }\n        }\n    }\n\
          }"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetStateResponse class object\n            Dim result = apiInstance.GetState()\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getState: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetStateResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetState(auth, )\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\", result)\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetStateResponse>>\
          \ result = api.getState();\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"getState() exception: \" << e.what() << '\\n';\n    }\n\n    return\
          \ 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetStateResponse object\n    result = api_instance.get_state()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_state: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetStateResponse object\n    my $result = $api_instance->get_state();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_state:\
          \ $@\\n\";\n}"
  /api/v2/versions:
    get:
      tags:
      - "TextMagic"
      summary: "Get minimal valid apps versions"
      description: ""
      operationId: "getVersions"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetVersionsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetVersionsResponse class object\n    $result = $api->getVersions();\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getVersions: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetVersionsResponse class object\n   \
          \         GetVersionsResponse obj = apiInstance.getVersions();\n       \
          \     // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getVersions\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getVersions().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetVersionsResponse\
          \ object\n    result = api.get_versions()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_versions: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetVersionsResponse class object\n             \
          \   var result = apiInstance.GetVersions();\n                // ...\n  \
          \          } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getVersions: \"+e.Message);\n            }\n    \
          \    }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetVersionsResponse class object\n            Dim result = apiInstance.GetVersions()\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getVersions: \" + e.Message)\n        End Try\n \
          \   End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetVersionsResponse struct\n \
          \   result, _, err := client.TextMagicApi.GetVersions(auth, )\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetVersionsResponse>>\
          \ result = api.getVersions();\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"getVersions() exception: \" << e.what() << '\\n';\n    }\n\n    return\
          \ 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetVersionsResponse object\n    result = api_instance.get_versions()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_versions: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetVersionsResponse object\n    my $result = $api_instance->get_versions();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_versions:\
          \ $@\\n\";\n}"
  /api/v2/lookups/{phone}:
    get:
      tags:
      - "TextMagic"
      summary: "Carrier Lookup"
      description: ""
      operationId: "doCarrierLookup"
      parameters:
      - name: "phone"
        in: "path"
        required: true
        type: "string"
        x-example: "1-541-754-3010"
        x-exportParamName: "Phone"
      - name: "country"
        in: "query"
        description: "Country code for local formatted numbers"
        required: false
        type: "string"
        default: "US"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/DoCarrierLookupResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        429:
          description: "Returned when number of queries per second too much"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$phone = \"1-541-754-3010\";\n// Optional, you can pass them as null\
          \ values to doCarrierLookup method below, default values will be used\n\
          $country = \"US\";\n\ntry {\n    // DoCarrierLookupResponse class object\n\
          \    $result = $api->doCarrierLookup($phone, $country);\n    // ...\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->doCarrierLookup:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String phone = \"1-541-754-3010\";\n        // Optional, you can\
          \ pass them as null values to doCarrierLookup method below, default values\
          \ will be used\n        String country = \"US\";\n\n        try {\n    \
          \        // DoCarrierLookupResponse class object\n            DoCarrierLookupResponse\
          \ obj = apiInstance.doCarrierLookup(phone, country);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling doCarrierLookup\");\n            e.printStackTrace();\n \
          \       }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ phone = \"1-541-754-3010\";\nparams = {\n// Optional parameters\n    country:\
          \ \"US\",\n}\n\napi.doCarrierLookup(phone, ).then(function (data) {\n  \
          \  console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nphone = '1-541-754-3010'\nparams\
          \ = {\n  # Optional parameters\n  country: 'US',\n}\n\nbegin\n    # DoCarrierLookupResponse\
          \ object\n    result = api.do_carrier_lookup(phone, params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->do_carrier_lookup:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ phone = \"1-541-754-3010\";\n            // Optional, you can pass them\
          \ as null values to doCarrierLookup method below, default values will be\
          \ used\n            string country = \"US\";\n\n            try {\n    \
          \            // DoCarrierLookupResponse class object\n                var\
          \ result = apiInstance.DoCarrierLookup(phone, country);\n              \
          \  // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling doCarrierLookup: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim phone As\
          \ String = \"1-541-754-3010\"\n        ' Optional, you can pass them as\
          \ null values to doCarrierLookup method below, default values will be used\n\
          \        Dim country As String = \"US\"\n\n        Try\n            ' DoCarrierLookupResponse\
          \ class object\n            Dim result = apiInstance.DoCarrierLookup(phone,\
          \ country)\n            ' ...\n        Catch e As Exception\n          \
          \  Console.WriteLine(\"Exception when calling doCarrierLookup: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var phone string = \"\
          1-541-754-3010\"\n\n    opts := tm.DoCarrierLookupOpts{\n        // Optional\
          \ parameters\n        Country: optional.NewString(\"US\"),\n    }\n\n  \
          \  // tm.DoCarrierLookupResponse struct\n    result, _, err := client.TextMagicApi.DoCarrierLookup(auth,\
          \ phone, &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string phone = \"1-541-754-3010\"\
          ;\n    // Optional parameters. Important: if you want to use default value\
          \ then pass boost::none value\n    std::string country = \"US\";\n\n   \
          \ try {\n        pplx::task<std::shared_ptr<DoCarrierLookupResponse>> result\
          \ = api.doCarrierLookup(phone, country);\n        result.wait();\n     \
          \   // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"doCarrierLookup() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nphone\
          \ = \"1-541-754-3010\"\n# Optional params, you can skip them\ncountry =\
          \ \"US\"\n\ntry:\n    # DoCarrierLookupResponse object\n    result = api_instance.do_carrier_lookup(phone=phone,\
          \ country=country)\n    # ...\nexcept ApiException as e:\n    print(\"Exception\
          \ when calling TextMagicApi->do_carrier_lookup: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $phone\
          \ = '1-541-754-3010';\n# Optional params, you can skip them\nmy $country\
          \ = 'US';\n\neval {\n    # DoCarrierLookupResponse object\n    my $result\
          \ = $api_instance->do_carrier_lookup(phone => $phone, country => $country);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->do_carrier_lookup:\
          \ $@\\n\";\n}"
  /api/v2/countries:
    get:
      tags:
      - "TextMagic"
      summary: "Return list of countries."
      description: ""
      operationId: "getCountries"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetCountriesResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetCountriesResponse class object\n    $result = $api->getCountries();\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getCountries: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetCountriesResponse class object\n  \
          \          GetCountriesResponse obj = apiInstance.getCountries();\n    \
          \        // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getCountries\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getCountries().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetCountriesResponse\
          \ object\n    result = api.get_countries()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_countries: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetCountriesResponse class object\n            \
          \    var result = apiInstance.GetCountries();\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getCountries: \"+e.Message);\n            }\n   \
          \     }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetCountriesResponse class object\n            Dim result = apiInstance.GetCountries()\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getCountries: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetCountriesResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetCountries(auth, )\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetCountriesResponse>>\
          \ result = api.getCountries();\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"getCountries() exception: \" << e.what() << '\\n';\n    }\n\n   \
          \ return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetCountriesResponse object\n    result = api_instance.get_countries()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_countries: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetCountriesResponse object\n    my $result = $api_instance->get_countries();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_countries:\
          \ $@\\n\";\n}"
  /api/v2/user:
    get:
      tags:
      - "TextMagic"
      summary: "Get current user info."
      description: ""
      operationId: "getCurrentUser"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // User class object\n    $result = $api->getCurrentUser();\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getCurrentUser: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // User class object\n            User obj\
          \ = apiInstance.getCurrentUser();\n            // ...\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling getCurrentUser\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getCurrentUser().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # User object\n\
          \    result = api.get_current_user()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_current_user:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // User class object\n                var result =\
          \ apiInstance.GetCurrentUser();\n                // ...\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ getCurrentUser: \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' User class object\n            Dim result = apiInstance.GetCurrentUser()\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getCurrentUser: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.User struct\n    result, _, err\
          \ := client.TextMagicApi.GetCurrentUser(auth, )\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\", result)\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<User>>\
          \ result = api.getCurrentUser();\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"getCurrentUser() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # User object\n    result = api_instance.get_current_user()\n    #\
          \ ...\nexcept ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_current_user:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # User object\n    my $result = $api_instance->get_current_user();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_current_user:\
          \ $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update current user info."
      description: ""
      operationId: "updateCurrentUser"
      parameters:
      - in: "body"
        name: "UpdateCurrentUserInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateCurrentUserInputObject"
        x-exportParamName: "UpdateCurrentUserInputObject"
      responses:
        201:
          description: "Updated with success"
          schema:
            $ref: "#/definitions/UpdateCurrentUserResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateCurrentUserInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setUsername(\"\
          Test\");\n$input->setFirstName(\"Test\");\n$input->setLastName(\"Test\"\
          );\n$input->setEmail(\"test@test.com\");\n$input->setPhone(\"79030011222\"\
          );\n$input->setCompany(\"Dummy company\");\n$input->setTimezone(2);\n\n\
          try {\n    // UpdateCurrentUserResponse class object\n    $result = $api->updateCurrentUser($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->updateCurrentUser: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateCurrentUserInputObject input = new UpdateCurrentUserInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setUsername(\"Test\");\n        input.setFirstName(\"Test\"\
          );\n        input.setLastName(\"Test\");\n        input.setEmail(\"test@test.com\"\
          );\n        input.setPhone(\"79030011222\");\n        input.setCompany(\"\
          Dummy company\");\n        input.setTimezone(2);\n\n        try {\n    \
          \        // UpdateCurrentUserResponse class object\n            UpdateCurrentUserResponse\
          \ obj = apiInstance.updateCurrentUser(input);\n            // ...\n    \
          \    } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling updateCurrentUser\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    username: \"Test\",\n    firstName:\
          \ \"Test\",\n    lastName: \"Test\",\n    email: \"test@test.com\",\n  \
          \  phone: \"79030011222\",\n    company: \"Dummy company\",\n    timezone:\
          \ 2,\n}\n\napi.updateCurrentUser(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateCurrentUserInputObject.new\n\
          # Optional parameters, you can skip them\nobj.username = \"Test\"\nobj.first_name\
          \ = \"Test\"\nobj.last_name = \"Test\"\nobj.email = \"test@test.com\"\n\
          obj.phone = \"79030011222\"\nobj.company = \"Dummy company\"\nobj.timezone\
          \ = 2\n\nbegin\n    # UpdateCurrentUserResponse object\n    result = api.update_current_user(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->update_current_user: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateCurrentUserInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Username = \"Test\"\
          ;\n            obj.FirstName = \"Test\";\n            obj.LastName = \"\
          Test\";\n            obj.Email = \"test@test.com\";\n            obj.Phone\
          \ = \"79030011222\";\n            obj.Company = \"Dummy company\";\n   \
          \         obj.Timezone = 2;\n\n            try {\n                // UpdateCurrentUserResponse\
          \ class object\n                var result = apiInstance.UpdateCurrentUser(obj);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling updateCurrentUser: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateCurrentUserInputObject With {\n            .Username = \"Test\"\
          ,\n            .FirstName = \"Test\",\n            .LastName = \"Test\"\
          ,\n            .Email = \"test@test.com\",\n            .Phone = \"79030011222\"\
          ,\n            .Company = \"Dummy company\",\n            .Timezone = 2\n\
          \        }\n\n        Try\n            ' UpdateCurrentUserResponse class\
          \ object\n            Dim result = apiInstance.UpdateCurrentUser(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateCurrentUser: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Username: \"\
          Test\",\n        FirstName: \"Test\",\n        LastName: \"Test\",\n   \
          \     Email: \"test@test.com\",\n        Phone: \"79030011222\",\n     \
          \   Company: \"Dummy company\",\n        Timezone: 2,\n    }\n\n    // tm.UpdateCurrentUserResponse\
          \ struct\n    result, _, err := client.TextMagicApi.UpdateCurrentUser(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateCurrentUserInputObject>\
          \ input(new UpdateCurrentUserInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setUsername(\"Test\");\n    input->setFirstName(\"\
          Test\");\n    input->setLastName(\"Test\");\n    input->setEmail(\"test@test.com\"\
          );\n    input->setPhone(\"79030011222\");\n    input->setCompany(\"Dummy\
          \ company\");\n    input->setTimezone(2);\n\n    try {\n        pplx::task<std::shared_ptr<UpdateCurrentUserResponse>>\
          \ result = api.updateCurrentUser(input);\n        result.wait();\n     \
          \   // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateCurrentUser() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateCurrentUserInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.username = \"Test\"\ninput.first_name = \"Test\"\n\
          input.last_name = \"Test\"\ninput.email = \"test@test.com\"\ninput.phone\
          \ = \"79030011222\"\ninput.company = \"Dummy company\"\ninput.timezone =\
          \ 2\n\ntry:\n    # UpdateCurrentUserResponse object\n    result = api_instance.update_current_user(update_current_user_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->update_current_user: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateCurrentUserInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateCurrentUserInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    username => 'Test',\n\
          \    firstName => 'Test',\n    lastName => 'Test',\n    email => 'test@test.com',\n\
          \    phone => '79030011222',\n    company => 'Dummy company',\n    timezone\
          \ => 2,\n);\n\neval {\n    # UpdateCurrentUserResponse object\n    my $result\
          \ = $api_instance->update_current_user(update_current_user_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->update_current_user: $@\\n\";\n}"
  /api/v2/user/avatar:
    delete:
      tags:
      - "TextMagic"
      summary: "Delete an avatar for the current user.\\"
      description: ""
      operationId: "deleteAvatar"
      produces: []
      parameters: []
      responses:
        204:
          description: "Avatar has been deleted with success"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    $api->deleteAvatar();\n} catch (Exception $e) {\n   \
          \ echo 'Exception when calling TextMagicApi->deleteAvatar: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            apiInstance.deleteAvatar();\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ deleteAvatar\");\n            e.printStackTrace();\n        }\n    }\n\
          }"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.deleteAvatar().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    api.delete_avatar()\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_avatar:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                apiInstance.DeleteAvatar();\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling deleteAvatar:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        apiInstance.DeleteAvatar()\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling deleteAvatar:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    client.TextMagicApi.DeleteAvatar(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task result\
          \ = api.deleteAvatar();\n        result.wait();\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"deleteAvatar() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    api_instance.delete_avatar()\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->delete_avatar: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    $api_instance->delete_avatar();\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->delete_avatar: $@\\n\";\n}"
  /api/v2/user/phone/verification:
    get:
      tags:
      - "TextMagic"
      summary: "Send user phone verification"
      description: ""
      operationId: "sendPhoneVerificationCode"
      parameters: []
      responses:
        200:
          description: "Verification SMS has been sent"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    $api->sendPhoneVerificationCode();\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->sendPhoneVerificationCode:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            apiInstance.sendPhoneVerificationCode();\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling sendPhoneVerificationCode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.sendPhoneVerificationCode().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    api.send_phone_verification_code()\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->send_phone_verification_code:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                apiInstance.SendPhoneVerificationCode();\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling sendPhoneVerificationCode: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        apiInstance.SendPhoneVerificationCode()\n            ' ...\n  \
          \      Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling sendPhoneVerificationCode: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    client.TextMagicApi.SendPhoneVerificationCode(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task result\
          \ = api.sendPhoneVerificationCode();\n        result.wait();\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"sendPhoneVerificationCode()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    api_instance.send_phone_verification_code()\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->send_phone_verification_code:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    $api_instance->send_phone_verification_code();\n};\n\nif ($@) {\n \
          \   warn \"Exception when calling TextMagicApi->send_phone_verification_code:\
          \ $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Check user phone verification code"
      description: ""
      operationId: "checkPhoneVerificationCode"
      parameters:
      - in: "body"
        name: "CheckPhoneVerificationCodeInputObject"
        required: true
        schema:
          $ref: "#/definitions/CheckPhoneVerificationCodeInputObject"
        x-exportParamName: "CheckPhoneVerificationCodeInputObject"
      responses:
        204:
          description: "Verification code has been approved with success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CheckPhoneVerificationCodeInputObject();\n\
          \n// Required parameters\n$input->setCode(1111);\n\ntry {\n    $api->checkPhoneVerificationCode($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->checkPhoneVerificationCode:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CheckPhoneVerificationCodeInputObject input = new CheckPhoneVerificationCodeInputObject();\n\
          \n        // Required parameters\n        input.setCode(1111);\n\n     \
          \   try {\n            apiInstance.checkPhoneVerificationCode(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling checkPhoneVerificationCode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    code: 1111,\n}\n\napi.checkPhoneVerificationCode(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CheckPhoneVerificationCodeInputObject.new\n\
          \n# Required parameters\nobj.code = 1111\n\nbegin\n    api.check_phone_verification_code(input)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->check_phone_verification_code:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CheckPhoneVerificationCodeInputObject();\n\n            // Required\
          \ parameters\n            obj.Code = 1111;\n\n            try {\n      \
          \          apiInstance.CheckPhoneVerificationCode(obj);\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ checkPhoneVerificationCode: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CheckPhoneVerificationCodeInputObject With {\n            .Code = 1111\n\
          \        }\n\n        Try\n            apiInstance.CheckPhoneVerificationCode(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling checkPhoneVerificationCode: \" + e.Message)\n   \
          \     End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Code: 1111,\n    }\n\n    client.TextMagicApi.CheckPhoneVerificationCode(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CheckPhoneVerificationCodeInputObject>\
          \ input(new CheckPhoneVerificationCodeInputObject);\n    // Required parameters\n\
          \    input->setCode(1111);\n\n    try {\n        pplx::task result = api.checkPhoneVerificationCode(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"checkPhoneVerificationCode() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CheckPhoneVerificationCodeInputObject()\n\n# Required parameters\n\
          input.code = 1111\n\ntry:\n    api_instance.check_phone_verification_code(check_phone_verification_code_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->check_phone_verification_code:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CheckPhoneVerificationCodeInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CheckPhoneVerificationCodeInputObject->new(\n\
          \    # Required parameters\n    code => 1111,\n);\n\neval {\n    $api_instance->check_phone_verification_code(check_phone_verification_code_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->check_phone_verification_code:\
          \ $@\\n\";\n}"
  /api/v2/user/email/verification:
    get:
      tags:
      - "TextMagic"
      summary: "Send user email verification"
      description: ""
      operationId: "sendEmailVerificationCode"
      parameters: []
      responses:
        200:
          description: "Verification Email has been sent"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    $api->sendEmailVerificationCode();\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->sendEmailVerificationCode:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            apiInstance.sendEmailVerificationCode();\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling sendEmailVerificationCode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.sendEmailVerificationCode().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    api.send_email_verification_code()\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->send_email_verification_code:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                apiInstance.SendEmailVerificationCode();\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling sendEmailVerificationCode: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        apiInstance.SendEmailVerificationCode()\n            ' ...\n  \
          \      Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling sendEmailVerificationCode: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    client.TextMagicApi.SendEmailVerificationCode(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task result\
          \ = api.sendEmailVerificationCode();\n        result.wait();\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"sendEmailVerificationCode()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    api_instance.send_email_verification_code()\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->send_email_verification_code:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    $api_instance->send_email_verification_code();\n};\n\nif ($@) {\n \
          \   warn \"Exception when calling TextMagicApi->send_email_verification_code:\
          \ $@\\n\";\n}"
  /api/v2/user/password/change:
    put:
      tags:
      - "TextMagic"
      summary: "Change user password."
      description: ""
      operationId: "updatePassword"
      produces: []
      parameters:
      - in: "body"
        name: "UpdatePasswordInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdatePasswordInputObject"
        x-exportParamName: "UpdatePasswordInputObject"
      responses:
        204:
          description: "Password has been updated with success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdatePasswordInputObject();\n\
          \n// Required parameters\n$input->setOldPassword(\"myOldPassword\");\n$input->setNewPassword(\"\
          myNewPassword\");\n\ntry {\n    $api->updatePassword($input);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->updatePassword:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdatePasswordInputObject input = new UpdatePasswordInputObject();\n\
          \n        // Required parameters\n        input.setOldPassword(\"myOldPassword\"\
          );\n        input.setNewPassword(\"myNewPassword\");\n\n        try {\n\
          \            apiInstance.updatePassword(input);\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling updatePassword\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    oldPassword: \"myOldPassword\",\n    newPassword: \"myNewPassword\"\
          ,\n}\n\napi.updatePassword(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdatePasswordInputObject.new\n\
          \n# Required parameters\nobj.old_password = \"myOldPassword\"\nobj.new_password\
          \ = \"myNewPassword\"\n\nbegin\n    api.update_password(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->update_password:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdatePasswordInputObject();\n\n            // Required parameters\n\
          \            obj.OldPassword = \"myOldPassword\";\n            obj.NewPassword\
          \ = \"myNewPassword\";\n\n            try {\n                apiInstance.UpdatePassword(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling updatePassword: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdatePasswordInputObject With {\n            .OldPassword = \"myOldPassword\"\
          ,\n            .NewPassword = \"myNewPassword\"\n        }\n\n        Try\n\
          \            apiInstance.UpdatePassword(obj)\n            ' ...\n      \
          \  Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling updatePassword: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        OldPassword: \"myOldPassword\"\
          ,\n        NewPassword: \"myNewPassword\",\n    }\n\n    client.TextMagicApi.UpdatePassword(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdatePasswordInputObject>\
          \ input(new UpdatePasswordInputObject);\n    // Required parameters\n  \
          \  input->setOldPassword(\"myOldPassword\");\n    input->setNewPassword(\"\
          myNewPassword\");\n\n    try {\n        pplx::task result = api.updatePassword(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"updatePassword() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdatePasswordInputObject()\n\n# Required parameters\ninput.old_password\
          \ = \"myOldPassword\"\ninput.new_password = \"myNewPassword\"\n\ntry:\n\
          \    api_instance.update_password(update_password_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->update_password:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdatePasswordInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdatePasswordInputObject->new(\n\
          \    # Required parameters\n    oldPassword => 'myOldPassword',\n    newPassword\
          \ => 'myNewPassword',\n);\n\neval {\n    $api_instance->update_password(update_password_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->update_password:\
          \ $@\\n\";\n}"
  /api/v2/sources:
    get:
      tags:
      - "TextMagic"
      summary: "Get all available sender setting options which could be used in \"\
        from\" parameter of POST messages method."
      description: ""
      operationId: "getAvailableSenderSettingOptions"
      parameters:
      - name: "country"
        in: "query"
        description: "Return sender setting options available in specific country\
          \ only. Two upper case characters"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Available sender setting options returned with success"
          schema:
            $ref: "#/definitions/GetAvailableSenderSettingOptionsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAvailableSenderSettingOptions\
          \ method below, default values will be used\n$country = \"sampleValue\"\
          ;\n\ntry {\n    // GetAvailableSenderSettingOptionsResponse class object\n\
          \    $result = $api->getAvailableSenderSettingOptions($country);\n    //\
          \ ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getAvailableSenderSettingOptions:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAvailableSenderSettingOptions\
          \ method below, default values will be used\n        String country = \"\
          sampleValue\";\n\n        try {\n            // GetAvailableSenderSettingOptionsResponse\
          \ class object\n            GetAvailableSenderSettingOptionsResponse obj\
          \ = apiInstance.getAvailableSenderSettingOptions(country);\n           \
          \ // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getAvailableSenderSettingOptions\");\n          \
          \  e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    country: \"sampleValue\",\n}\n\napi.getAvailableSenderSettingOptions().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  country: 'sampleValue',\n}\n\nbegin\n    # GetAvailableSenderSettingOptionsResponse\
          \ object\n    result = api.get_available_sender_setting_options(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_available_sender_setting_options: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAvailableSenderSettingOptions method\
          \ below, default values will be used\n            string country = \"sampleValue\"\
          ;\n\n            try {\n                // GetAvailableSenderSettingOptionsResponse\
          \ class object\n                var result = apiInstance.GetAvailableSenderSettingOptions(country);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getAvailableSenderSettingOptions:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAvailableSenderSettingOptions method\
          \ below, default values will be used\n        Dim country As String = \"\
          sampleValue\"\n\n        Try\n            ' GetAvailableSenderSettingOptionsResponse\
          \ class object\n            Dim result = apiInstance.GetAvailableSenderSettingOptions(country)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getAvailableSenderSettingOptions: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAvailableSenderSettingOptionsOpts{\n\
          \        // Optional parameters\n        Country: optional.NewString(\"\
          sampleValue\"),\n    }\n\n    // tm.GetAvailableSenderSettingOptionsResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetAvailableSenderSettingOptions(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    std::string\
          \ country = \"sampleValue\";\n\n    try {\n        pplx::task<std::shared_ptr<GetAvailableSenderSettingOptionsResponse>>\
          \ result = api.getAvailableSenderSettingOptions(country);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getAvailableSenderSettingOptions() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\ncountry = \"sampleValue\"\n\ntry:\n    # GetAvailableSenderSettingOptionsResponse\
          \ object\n    result = api_instance.get_available_sender_setting_options(country=country)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_available_sender_setting_options: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $country = 'sampleValue';\n\neval {\n  \
          \  # GetAvailableSenderSettingOptionsResponse object\n    my $result = $api_instance->get_available_sender_setting_options(country\
          \ => $country);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_available_sender_setting_options: $@\\n\";\n}"
  /api/v2/sender/settings:
    get:
      tags:
      - "TextMagic"
      summary: "Get current user sender settings."
      description: ""
      operationId: "getSenderSettings"
      parameters:
      - name: "country"
        in: "query"
        description: "Return sender settings enabled for sending to specified country.\
          \ Two upper case characters"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Sender settings returned with success"
          schema:
            $ref: "#/definitions/GetSenderSettingsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getSenderSettings\
          \ method below, default values will be used\n$country = \"sampleValue\"\
          ;\n\ntry {\n    // GetSenderSettingsResponse class object\n    $result =\
          \ $api->getSenderSettings($country);\n    // ...\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->getSenderSettings: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getSenderSettings\
          \ method below, default values will be used\n        String country = \"\
          sampleValue\";\n\n        try {\n            // GetSenderSettingsResponse\
          \ class object\n            GetSenderSettingsResponse obj = apiInstance.getSenderSettings(country);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getSenderSettings\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    country: \"sampleValue\",\n}\n\napi.getSenderSettings().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  country: 'sampleValue',\n}\n\nbegin\n    # GetSenderSettingsResponse\
          \ object\n    result = api.get_sender_settings(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_sender_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getSenderSettings method below, default\
          \ values will be used\n            string country = \"sampleValue\";\n\n\
          \            try {\n                // GetSenderSettingsResponse class object\n\
          \                var result = apiInstance.GetSenderSettings(country);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getSenderSettings: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getSenderSettings method below, default\
          \ values will be used\n        Dim country As String = \"sampleValue\"\n\
          \n        Try\n            ' GetSenderSettingsResponse class object\n  \
          \          Dim result = apiInstance.GetSenderSettings(country)\n       \
          \     ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getSenderSettings: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetSenderSettingsOpts{\n\
          \        // Optional parameters\n        Country: optional.NewString(\"\
          sampleValue\"),\n    }\n\n    // tm.GetSenderSettingsResponse struct\n \
          \   result, _, err := client.TextMagicApi.GetSenderSettings(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    std::string\
          \ country = \"sampleValue\";\n\n    try {\n        pplx::task<std::shared_ptr<GetSenderSettingsResponse>>\
          \ result = api.getSenderSettings(country);\n        result.wait();\n   \
          \     // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getSenderSettings() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\ncountry = \"sampleValue\"\n\ntry:\n    # GetSenderSettingsResponse\
          \ object\n    result = api_instance.get_sender_settings(country=country)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_sender_settings: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $country = 'sampleValue';\n\neval {\n  \
          \  # GetSenderSettingsResponse object\n    my $result = $api_instance->get_sender_settings(country\
          \ => $country);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_sender_settings: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Change sender settings for specified country."
      description: ""
      operationId: "updateSenderSetting"
      produces: []
      parameters:
      - in: "body"
        name: "UpdateSenderSettingInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateSenderSettingInputObject"
        x-exportParamName: "UpdateSenderSettingInputObject"
      responses:
        204:
          description: "Sender settings have been updated with success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateSenderSettingInputObject();\n\
          \n// Required parameters\n$input->setValue(\"447624800500\");\n$input->setCountry(\"\
          AF\");\n\n// Optional parameters, you can skip these setters calls\n$input->setChatId(344);\n\
          \ntry {\n    $api->updateSenderSetting($input);\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->updateSenderSetting:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateSenderSettingInputObject input = new UpdateSenderSettingInputObject();\n\
          \n        // Required parameters\n        input.setValue(\"447624800500\"\
          );\n        input.setCountry(\"AF\");\n\n        // Optional parameters,\
          \ you can skip these setters calls\n        input.setChatId(344);\n\n  \
          \      try {\n            apiInstance.updateSenderSetting(input);\n    \
          \    } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling updateSenderSetting\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    value: \"447624800500\",\n    country: \"AF\",\n    //\
          \ Optional parameters\n    chatId: 344,\n}\n\napi.updateSenderSetting(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateSenderSettingInputObject.new\n\
          \n# Required parameters\nobj.value = \"447624800500\"\nobj.country = \"\
          AF\"\n# Optional parameters, you can skip them\nobj.chat_id = 344\n\nbegin\n\
          \    api.update_sender_setting(input)\nrescue TextMagic::ApiError => e\n\
          \    puts \"Exception when calling TextMagicApi->update_sender_setting:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateSenderSettingInputObject();\n\n            // Required parameters\n\
          \            obj.Value = \"447624800500\";\n            obj.Country = \"\
          AF\";\n\n            // Optional parameters, you can skip these setters\
          \ calls\n            obj.ChatId = 344;\n\n            try {\n          \
          \      apiInstance.UpdateSenderSetting(obj);\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling updateSenderSetting:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateSenderSettingInputObject With {\n            .Value = \"447624800500\"\
          ,\n            .Country = \"AF\",\n            .ChatId = 344\n        }\n\
          \n        Try\n            apiInstance.UpdateSenderSetting(obj)\n      \
          \      ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateSenderSetting: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Value: \"447624800500\",\n    \
          \    Country: \"AF\",\n        // Optional parameters, you can skip them\n\
          \        ChatId: 344,\n    }\n\n    client.TextMagicApi.UpdateSenderSetting(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateSenderSettingInputObject>\
          \ input(new UpdateSenderSettingInputObject);\n    // Required parameters\n\
          \    input->setValue(\"447624800500\");\n    input->setCountry(\"AF\");\n\
          \    // Optional parameters, you can skip them\n    input->setChatId(344);\n\
          \n    try {\n        pplx::task result = api.updateSenderSetting(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"updateSenderSetting() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateSenderSettingInputObject()\n\n# Required parameters\n\
          input.value = \"447624800500\"\ninput.country = \"AF\"\n# Optional parameters,\
          \ you can skip them\ninput.chat_id = 344\n\ntry:\n    api_instance.update_sender_setting(update_sender_setting_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->update_sender_setting:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateSenderSettingInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateSenderSettingInputObject->new(\n\
          \    # Required parameters\n    value => '447624800500',\n    country =>\
          \ 'AF',\n    # Optional parameters, you can skip them\n    chatId => 344,\n\
          );\n\neval {\n    $api_instance->update_sender_setting(update_sender_setting_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->update_sender_setting:\
          \ $@\\n\";\n}"
  /api/v2/numbers:
    get:
      tags:
      - "TextMagic"
      summary: "Get user's dedicated numbers."
      description: ""
      operationId: "getUserDedicatedNumbers"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "surveyId"
        in: "query"
        description: "Fetch only that numbers which are ready for the survey"
        required: false
        type: "integer"
        x-exportParamName: "SurveyId"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Requested data returned with success"
          schema:
            $ref: "#/definitions/GetUserDedicatedNumbersPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getUserDedicatedNumbers\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $surveyId = 1;\n\ntry {\n    // GetUserDedicatedNumbersPaginatedResponse\
          \ class object\n    $result = $api->getUserDedicatedNumbers($page, $limit,\
          \ $surveyId);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception\
          \ when calling TextMagicApi->getUserDedicatedNumbers: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getUserDedicatedNumbers\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        int surveyId = 1;\n\n        try {\n    \
          \        // GetUserDedicatedNumbersPaginatedResponse class object\n    \
          \        GetUserDedicatedNumbersPaginatedResponse obj = apiInstance.getUserDedicatedNumbers(page,\
          \ limit, surveyId);\n            // ...\n        } catch (ApiException e)\
          \ {\n            System.err.println(\"Exception when calling getUserDedicatedNumbers\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    surveyId:\
          \ 1,\n}\n\napi.getUserDedicatedNumbers().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  survey_id: 1,\n}\n\nbegin\n    # GetUserDedicatedNumbersPaginatedResponse\
          \ object\n    result = api.get_user_dedicated_numbers(params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_user_dedicated_numbers:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getUserDedicatedNumbers method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            int surveyId = 1;\n\n            try {\n    \
          \            // GetUserDedicatedNumbersPaginatedResponse class object\n\
          \                var result = apiInstance.GetUserDedicatedNumbers(page,\
          \ limit, surveyId);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getUserDedicatedNumbers:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getUserDedicatedNumbers method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim surveyId As Integer = 1\n\n   \
          \     Try\n            ' GetUserDedicatedNumbersPaginatedResponse class\
          \ object\n            Dim result = apiInstance.GetUserDedicatedNumbers(page,\
          \ limit, surveyId)\n            ' ...\n        Catch e As Exception\n  \
          \          Console.WriteLine(\"Exception when calling getUserDedicatedNumbers:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetUserDedicatedNumbersOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        SurveyId: optional.NewInt32(1),\n\
          \    }\n\n    // tm.GetUserDedicatedNumbersPaginatedResponse struct\n  \
          \  result, _, err := client.TextMagicApi.GetUserDedicatedNumbers(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    int surveyId = 1;\n\n    try {\n \
          \       pplx::task<std::shared_ptr<GetUserDedicatedNumbersPaginatedResponse>>\
          \ result = api.getUserDedicatedNumbers(page, limit, surveyId);\n       \
          \ result.wait();\n        // put operations with result here...\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"getUserDedicatedNumbers()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nsurvey_id = 1\n\ntry:\n\
          \    # GetUserDedicatedNumbersPaginatedResponse object\n    result = api_instance.get_user_dedicated_numbers(page=page,\
          \ limit=limit, survey_id=survey_id)\n    # ...\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->get_user_dedicated_numbers:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $surveyId\
          \ = 1;\n\neval {\n    # GetUserDedicatedNumbersPaginatedResponse object\n\
          \    my $result = $api_instance->get_user_dedicated_numbers(page => $page,\
          \ limit => $limit, surveyId => $surveyId);\n    # ...\n};\n\nif ($@) {\n\
          \    warn \"Exception when calling TextMagicApi->get_user_dedicated_numbers:\
          \ $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Buy a dedicated number and assign it to the specified account."
      description: ""
      operationId: "buyDedicatedNumber"
      parameters:
      - in: "body"
        name: "BuyDedicatedNumberInputObject"
        required: true
        schema:
          $ref: "#/definitions/BuyDedicatedNumberInputObject"
        x-exportParamName: "BuyDedicatedNumberInputObject"
      responses:
        201:
          description: "Number has been bought with success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new BuyDedicatedNumberInputObject();\n\
          \n// Required parameters\n$input->setPhone(\"123456780\");\n$input->setCountry(\"\
          AU\");\n$input->setUserId();\n\ntry {\n    $api->buyDedicatedNumber($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->buyDedicatedNumber:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        BuyDedicatedNumberInputObject input = new BuyDedicatedNumberInputObject();\n\
          \n        // Required parameters\n        input.setPhone(\"123456780\");\n\
          \        input.setCountry(\"AU\");\n        input.setUserId();\n\n     \
          \   try {\n            apiInstance.buyDedicatedNumber(input);\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling buyDedicatedNumber\");\n            e.printStackTrace();\n   \
          \     }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    phone: \"123456780\",\n    country: \"AU\",\n    userId:\
          \ ,\n}\n\napi.buyDedicatedNumber(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::BuyDedicatedNumberInputObject.new\n\
          \n# Required parameters\nobj.phone = \"123456780\"\nobj.country = \"AU\"\
          \nobj.user_id = \n\nbegin\n    api.buy_dedicated_number(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->buy_dedicated_number:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new BuyDedicatedNumberInputObject();\n\n            // Required parameters\n\
          \            obj.Phone = \"123456780\";\n            obj.Country = \"AU\"\
          ;\n            obj.UserId = ;\n\n            try {\n                apiInstance.BuyDedicatedNumber(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling buyDedicatedNumber: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ BuyDedicatedNumberInputObject With {\n            .Phone = \"123456780\"\
          ,\n            .Country = \"AU\",\n            .UserId = \n        }\n\n\
          \        Try\n            apiInstance.BuyDedicatedNumber(obj)\n        \
          \    ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling buyDedicatedNumber: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Phone: \"123456780\",\n       \
          \ Country: \"AU\",\n        UserId: ,\n    }\n\n    client.TextMagicApi.BuyDedicatedNumber(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<BuyDedicatedNumberInputObject>\
          \ input(new BuyDedicatedNumberInputObject);\n    // Required parameters\n\
          \    input->setPhone(\"123456780\");\n    input->setCountry(\"AU\");\n \
          \   input->setUserId();\n\n    try {\n        pplx::task result = api.buyDedicatedNumber(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"buyDedicatedNumber() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.BuyDedicatedNumberInputObject()\n\n# Required parameters\n\
          input.phone = \"123456780\"\ninput.country = \"AU\"\ninput.user_id = \n\n\
          try:\n    api_instance.buy_dedicated_number(buy_dedicated_number_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->buy_dedicated_number:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::BuyDedicatedNumberInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::BuyDedicatedNumberInputObject->new(\n\
          \    # Required parameters\n    phone => '123456780',\n    country => 'AU',\n\
          \    userId => ,\n);\n\neval {\n    $api_instance->buy_dedicated_number(buy_dedicated_number_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->buy_dedicated_number:\
          \ $@\\n\";\n}"
  /api/v2/numbers/available:
    get:
      tags:
      - "TextMagic"
      summary: "Find available dedicated numbers to buy."
      description: ""
      operationId: "getAvailableDedicatedNumbers"
      parameters:
      - name: "prefix"
        in: "query"
        description: "Desired number prefix. Should include country code (i.e. 447\
          \ for GB). In case provide tollfree = 1 parameter and there are available\
          \ tollfree numbers, this parameter will be ignore."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Prefix"
        x-optionalDataType: "Int32"
      - name: "tollfree"
        in: "query"
        description: "Should we show only tollfree numbers (tollfree available only\
          \ for US). Default is false."
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Tollfree"
        x-optionalDataType: "Int32"
      - name: "country"
        in: "query"
        description: "Dedicated number country. Two letters in upper case"
        required: true
        type: "string"
        x-example: "GB"
        x-exportParamName: "Country"
      responses:
        200:
          description: "The list of available to buy dedicated numbers"
          schema:
            $ref: "#/definitions/GetAvailableDedicatedNumbersResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$country = \"GB\";\n// Optional, you can pass them as null values\
          \ to getAvailableDedicatedNumbers method below, default values will be used\n\
          $prefix = 1;\n$tollfree = 0;\n\ntry {\n    // GetAvailableDedicatedNumbersResponse\
          \ class object\n    $result = $api->getAvailableDedicatedNumbers($country,\
          \ $prefix, $tollfree);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception\
          \ when calling TextMagicApi->getAvailableDedicatedNumbers: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String country = \"GB\";\n        // Optional, you can pass them\
          \ as null values to getAvailableDedicatedNumbers method below, default values\
          \ will be used\n        int prefix = 1;\n        int tollfree = 0;\n\n \
          \       try {\n            // GetAvailableDedicatedNumbersResponse class\
          \ object\n            GetAvailableDedicatedNumbersResponse obj = apiInstance.getAvailableDedicatedNumbers(country,\
          \ prefix, tollfree);\n            // ...\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling getAvailableDedicatedNumbers\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n    country: \"GB\",\n// Optional parameters\n    prefix: 1,\n  \
          \  tollfree: 0,\n}\n\napi.getAvailableDedicatedNumbers().then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  country: 'GB',\n\
          \  # Optional parameters\n  prefix: 1,\n  tollfree: 0,\n}\n\nbegin\n   \
          \ # GetAvailableDedicatedNumbersResponse object\n    result = api.get_available_dedicated_numbers(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_available_dedicated_numbers: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ country = \"GB\";\n            // Optional, you can pass them as null\
          \ values to getAvailableDedicatedNumbers method below, default values will\
          \ be used\n            int prefix = 1;\n            int tollfree = 0;\n\n\
          \            try {\n                // GetAvailableDedicatedNumbersResponse\
          \ class object\n                var result = apiInstance.GetAvailableDedicatedNumbers(country,\
          \ prefix, tollfree);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getAvailableDedicatedNumbers:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim country\
          \ As String = \"GB\"\n        ' Optional, you can pass them as null values\
          \ to getAvailableDedicatedNumbers method below, default values will be used\n\
          \        Dim prefix As Integer = 1\n        Dim tollfree As Integer = 0\n\
          \n        Try\n            ' GetAvailableDedicatedNumbersResponse class\
          \ object\n            Dim result = apiInstance.GetAvailableDedicatedNumbers(country,\
          \ prefix, tollfree)\n            ' ...\n        Catch e As Exception\n \
          \           Console.WriteLine(\"Exception when calling getAvailableDedicatedNumbers:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAvailableDedicatedNumbersOpts{\n\
          \        // Required parameters\n        Country: \"GB\",\n        // Optional\
          \ parameters\n        Prefix: optional.NewInt32(1),\n        Tollfree: optional.NewInt32(0),\n\
          \    }\n\n    // tm.GetAvailableDedicatedNumbersResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetAvailableDedicatedNumbers(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string country = \"GB\";\n\
          \    // Optional parameters. Important: if you want to use default value\
          \ then pass boost::none value\n    int prefix = 1;\n    int tollfree = 0;\n\
          \n    try {\n        pplx::task<std::shared_ptr<GetAvailableDedicatedNumbersResponse>>\
          \ result = api.getAvailableDedicatedNumbers(country, prefix, tollfree);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getAvailableDedicatedNumbers()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ncountry\
          \ = \"GB\"\n# Optional params, you can skip them\nprefix = 1\ntollfree =\
          \ 0\n\ntry:\n    # GetAvailableDedicatedNumbersResponse object\n    result\
          \ = api_instance.get_available_dedicated_numbers(country=country, prefix=prefix,\
          \ tollfree=tollfree)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_available_dedicated_numbers: %s\\\
          n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $country\
          \ = 'GB';\n# Optional params, you can skip them\nmy $prefix = 1;\nmy $tollfree\
          \ = 0;\n\neval {\n    # GetAvailableDedicatedNumbersResponse object\n  \
          \  my $result = $api_instance->get_available_dedicated_numbers(country =>\
          \ $country, prefix => $prefix, tollfree => $tollfree);\n    # ...\n};\n\n\
          if ($@) {\n    warn \"Exception when calling TextMagicApi->get_available_dedicated_numbers:\
          \ $@\\n\";\n}"
  /api/v2/numbers/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single dedicated number."
      description: ""
      operationId: "getDedicatedNumber"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Requested dedicated number data returned with success"
          schema:
            $ref: "#/definitions/UsersInbound"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // UsersInbound class object\n    $result =\
          \ $api->getDedicatedNumber($id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getDedicatedNumber: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // UsersInbound class\
          \ object\n            UsersInbound obj = apiInstance.getDedicatedNumber(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getDedicatedNumber\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getDedicatedNumber(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # UsersInbound\
          \ object\n    result = api.get_dedicated_number(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_dedicated_number:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // UsersInbound class object\n\
          \                var result = apiInstance.GetDedicatedNumber(id);\n    \
          \            // ...\n            } catch (Exception e) {\n             \
          \   Console.WriteLine(\"Exception when calling getDedicatedNumber: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' UsersInbound class object\n        \
          \    Dim result = apiInstance.GetDedicatedNumber(id)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getDedicatedNumber: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.UsersInbound struct\n    result, _, err := client.TextMagicApi.GetDedicatedNumber(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<UsersInbound>> result = api.getDedicatedNumber(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getDedicatedNumber()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # UsersInbound object\n    result = api_instance.get_dedicated_number(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_dedicated_number: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # UsersInbound object\n    my $result = $api_instance->get_dedicated_number(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_dedicated_number: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Cancel dedicated number subscription."
      description: ""
      operationId: "deleteDedicatedNumber"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          description: "Dedicated number has been deleted with success"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteDedicatedNumber($id);\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteDedicatedNumber:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteDedicatedNumber(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteDedicatedNumber\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteDedicatedNumber(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_dedicated_number(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_dedicated_number:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteDedicatedNumber(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteDedicatedNumber: \"+e.Message);\n         \
          \   }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteDedicatedNumber(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteDedicatedNumber: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteDedicatedNumber(auth, id)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteDedicatedNumber(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteDedicatedNumber()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_dedicated_number(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_dedicated_number:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_dedicated_number(id => $id);\n};\n\n\
          if ($@) {\n    warn \"Exception when calling TextMagicApi->delete_dedicated_number:\
          \ $@\\n\";\n}"
  /api/v2/senderids:
    get:
      tags:
      - "TextMagic"
      summary: "Get all sender IDs of current user."
      description: ""
      operationId: "getSenderIds"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Sender ids of current user returned with success"
          schema:
            $ref: "#/definitions/GetSenderIdsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getSenderIds method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n\ntry {\n\
          \    // GetSenderIdsPaginatedResponse class object\n    $result = $api->getSenderIds($page,\
          \ $limit);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception when\
          \ calling TextMagicApi->getSenderIds: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getSenderIds\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // GetSenderIdsPaginatedResponse\
          \ class object\n            GetSenderIdsPaginatedResponse obj = apiInstance.getSenderIds(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getSenderIds\");\n\
          \            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getSenderIds().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetSenderIdsPaginatedResponse\
          \ object\n    result = api.get_sender_ids(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_sender_ids:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getSenderIds method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // GetSenderIdsPaginatedResponse\
          \ class object\n                var result = apiInstance.GetSenderIds(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getSenderIds:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getSenderIds method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' GetSenderIdsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetSenderIds(page,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getSenderIds: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetSenderIdsOpts{\n     \
          \   // Optional parameters\n        Page: optional.NewInt32(1),\n      \
          \  Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetSenderIdsPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetSenderIds(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetSenderIdsPaginatedResponse>>\
          \ result = api.getSenderIds(page, limit);\n        result.wait();\n    \
          \    // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getSenderIds() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetSenderIdsPaginatedResponse\
          \ object\n    result = api_instance.get_sender_ids(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_sender_ids: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetSenderIdsPaginatedResponse object\n    my $result = $api_instance->get_sender_ids(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_sender_ids: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Request for a new Sender ID."
      description: ""
      operationId: "requestSenderId"
      parameters:
      - in: "body"
        name: "RequestSenderIdInputObject"
        required: true
        schema:
          $ref: "#/definitions/RequestSenderIdInputObject"
        x-exportParamName: "RequestSenderIdInputObject"
      responses:
        201:
          description: "Sender ID request has been created with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new RequestSenderIdInputObject();\n\
          \n// Required parameters\n$input->setSenderId(\"Testid1\");\n$input->setExplanation(\"\
          Test description\");\n\ntry {\n    // ResourceLinkResponse class object\n\
          \    $result = $api->requestSenderId($input);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->requestSenderId:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        RequestSenderIdInputObject input = new RequestSenderIdInputObject();\n\
          \n        // Required parameters\n        input.setSenderId(\"Testid1\"\
          );\n        input.setExplanation(\"Test description\");\n\n        try {\n\
          \            // ResourceLinkResponse class object\n            ResourceLinkResponse\
          \ obj = apiInstance.requestSenderId(input);\n            // ...\n      \
          \  } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling requestSenderId\");\n            e.printStackTrace();\n \
          \       }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    senderId: \"Testid1\",\n    explanation: \"Test description\"\
          ,\n}\n\napi.requestSenderId(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::RequestSenderIdInputObject.new\n\
          \n# Required parameters\nobj.sender_id = \"Testid1\"\nobj.explanation =\
          \ \"Test description\"\n\nbegin\n    # ResourceLinkResponse object\n   \
          \ result = api.request_sender_id(input)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->request_sender_id:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new RequestSenderIdInputObject();\n\n            // Required parameters\n\
          \            obj.SenderId = \"Testid1\";\n            obj.Explanation =\
          \ \"Test description\";\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.RequestSenderId(obj);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling requestSenderId: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ RequestSenderIdInputObject With {\n            .SenderId = \"Testid1\"\
          ,\n            .Explanation = \"Test description\"\n        }\n\n      \
          \  Try\n            ' ResourceLinkResponse class object\n            Dim\
          \ result = apiInstance.RequestSenderId(obj)\n            ' ...\n       \
          \ Catch e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ requestSenderId: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        SenderId: \"Testid1\",\n      \
          \  Explanation: \"Test description\",\n    }\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.RequestSenderId(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<RequestSenderIdInputObject>\
          \ input(new RequestSenderIdInputObject);\n    // Required parameters\n \
          \   input->setSenderId(\"Testid1\");\n    input->setExplanation(\"Test description\"\
          );\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.requestSenderId(input);\n        result.wait();\n       \
          \ // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"requestSenderId() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.RequestSenderIdInputObject()\n\n# Required parameters\ninput.sender_id\
          \ = \"Testid1\"\ninput.explanation = \"Test description\"\n\ntry:\n    #\
          \ ResourceLinkResponse object\n    result = api_instance.request_sender_id(request_sender_id_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->request_sender_id: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::RequestSenderIdInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::RequestSenderIdInputObject->new(\n\
          \    # Required parameters\n    senderId => 'Testid1',\n    explanation\
          \ => 'Test description',\n);\n\neval {\n    # ResourceLinkResponse object\n\
          \    my $result = $api_instance->request_sender_id(request_sender_id_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->request_sender_id: $@\\n\";\n}"
  /api/v2/senderids/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single Sender ID."
      description: ""
      operationId: "getSenderId"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Sender Id data returned with success"
          schema:
            $ref: "#/definitions/SenderId"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // SenderId class object\n    $result = $api->getSenderId($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getSenderId: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // SenderId class object\n\
          \            SenderId obj = apiInstance.getSenderId(id);\n            //\
          \ ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getSenderId\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getSenderId(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # SenderId\
          \ object\n    result = api.get_sender_id(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_sender_id: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // SenderId class object\n\
          \                var result = apiInstance.GetSenderId(id);\n           \
          \     // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getSenderId: \"+e.Message);\n            }\n    \
          \    }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' SenderId class object\n            Dim\
          \ result = apiInstance.GetSenderId(id)\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ getSenderId: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.SenderId struct\n    result, _, err := client.TextMagicApi.GetSenderId(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<SenderId>> result = api.getSenderId(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getSenderId()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # SenderId object\n    result = api_instance.get_sender_id(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_sender_id: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # SenderId object\n    my $result = $api_instance->get_sender_id(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_sender_id: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a Sender ID."
      description: ""
      operationId: "deleteSenderId"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteSenderId($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteSenderId:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteSenderId(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteSenderId\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteSenderId(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_sender_id(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_sender_id:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteSenderId(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteSenderId: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteSenderId(id)\n     \
          \       ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteSenderId: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteSenderId(auth, id)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteSenderId(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteSenderId()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_sender_id(id=id)\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->delete_sender_id:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_sender_id(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->delete_sender_id: $@\\\
          n\";\n}"
  /api/v2/subaccounts:
    get:
      tags:
      - "TextMagic"
      summary: "Get all subaccounts of current user."
      description: ""
      operationId: "getSubaccounts"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Subaccounts data returned with success"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when current user is not allowed to manage subaccounts"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getSubaccounts method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n\ntry {\n\
          \    // User class object\n    $result = $api->getSubaccounts($page, $limit);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getSubaccounts: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getSubaccounts\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // User class object\n\
          \            User obj = apiInstance.getSubaccounts(page, limit);\n     \
          \       // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getSubaccounts\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getSubaccounts().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # User object\n    result = api.get_subaccounts(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_subaccounts: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getSubaccounts method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // User class object\n   \
          \             var result = apiInstance.GetSubaccounts(page, limit);\n  \
          \              // ...\n            } catch (Exception e) {\n           \
          \     Console.WriteLine(\"Exception when calling getSubaccounts: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getSubaccounts method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' User class object\n    \
          \        Dim result = apiInstance.GetSubaccounts(page, limit)\n        \
          \    ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getSubaccounts: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetSubaccountsOpts{\n   \
          \     // Optional parameters\n        Page: optional.NewInt32(1),\n    \
          \    Limit: optional.NewInt32(10),\n    }\n\n    // tm.User struct\n   \
          \ result, _, err := client.TextMagicApi.GetSubaccounts(auth, &opts)\n\n\
          \    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<User>>\
          \ result = api.getSubaccounts(page, limit);\n        result.wait();\n  \
          \      // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getSubaccounts() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # User object\n\
          \    result = api_instance.get_subaccounts(page=page, limit=limit)\n   \
          \ # ...\nexcept ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_subaccounts:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # User object\n    my $result = $api_instance->get_subaccounts(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_subaccounts: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Invite new subaccount."
      description: ""
      operationId: "inviteSubaccount"
      produces: []
      parameters:
      - in: "body"
        name: "InviteSubaccountInputObject"
        required: true
        schema:
          $ref: "#/definitions/InviteSubaccountInputObject"
        x-exportParamName: "InviteSubaccountInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new InviteSubaccountInputObject();\n\
          \n// Required parameters\n$input->setEmail(\"user-example@example.com\"\
          );\n$input->setRole(\"U\");\n\ntry {\n    $api->inviteSubaccount($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->inviteSubaccount:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        InviteSubaccountInputObject input = new InviteSubaccountInputObject();\n\
          \n        // Required parameters\n        input.setEmail(\"user-example@example.com\"\
          );\n        input.setRole(\"U\");\n\n        try {\n            apiInstance.inviteSubaccount(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling inviteSubaccount\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    email: \"user-example@example.com\",\n    role: \"U\",\n\
          }\n\napi.inviteSubaccount(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::InviteSubaccountInputObject.new\n\
          \n# Required parameters\nobj.email = \"user-example@example.com\"\nobj.role\
          \ = \"U\"\n\nbegin\n    api.invite_subaccount(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->invite_subaccount:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new InviteSubaccountInputObject();\n\n            // Required parameters\n\
          \            obj.Email = \"user-example@example.com\";\n            obj.Role\
          \ = \"U\";\n\n            try {\n                apiInstance.InviteSubaccount(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling inviteSubaccount: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ InviteSubaccountInputObject With {\n            .Email = \"user-example@example.com\"\
          ,\n            .Role = \"U\"\n        }\n\n        Try\n            apiInstance.InviteSubaccount(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling inviteSubaccount: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Email: \"user-example@example.com\"\
          ,\n        Role: \"U\",\n    }\n\n    client.TextMagicApi.InviteSubaccount(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<InviteSubaccountInputObject>\
          \ input(new InviteSubaccountInputObject);\n    // Required parameters\n\
          \    input->setEmail(\"user-example@example.com\");\n    input->setRole(\"\
          U\");\n\n    try {\n        pplx::task result = api.inviteSubaccount(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"inviteSubaccount() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.InviteSubaccountInputObject()\n\n# Required parameters\ninput.email\
          \ = \"user-example@example.com\"\ninput.role = \"U\"\n\ntry:\n    api_instance.invite_subaccount(invite_subaccount_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->invite_subaccount:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::InviteSubaccountInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::InviteSubaccountInputObject->new(\n\
          \    # Required parameters\n    email => 'user-example@example.com',\n \
          \   role => 'U',\n);\n\neval {\n    $api_instance->invite_subaccount(invite_subaccount_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->invite_subaccount:\
          \ $@\\n\";\n}"
  /api/v2/subaccounts/tokens:
    post:
      tags:
      - "TextMagic"
      summary: "Request a new REST API token for subaccount."
      description: "Returning user object, key and app name."
      operationId: "requestNewSubaccountToken"
      parameters:
      - in: "body"
        name: "RequestNewSubaccountTokenInputObject"
        required: true
        schema:
          $ref: "#/definitions/RequestNewSubaccountTokenInputObject"
        x-exportParamName: "RequestNewSubaccountTokenInputObject"
      responses:
        200:
          description: "Created Subaccount data returned with success"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when user has no enough rights to perform this action"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new RequestNewSubaccountTokenInputObject();\n\
          \n// Required parameters\n$input->setUserId(1);\n$input->setPassword(\"\
          strongPassword\");\n\n// Optional parameters, you can skip these setters\
          \ calls\n$input->setAppName(\"sample app\");\n\ntry {\n    // User class\
          \ object\n    $result = $api->requestNewSubaccountToken($input);\n    //\
          \ ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->requestNewSubaccountToken:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        RequestNewSubaccountTokenInputObject input = new RequestNewSubaccountTokenInputObject();\n\
          \n        // Required parameters\n        input.setUserId(1);\n        input.setPassword(\"\
          strongPassword\");\n\n        // Optional parameters, you can skip these\
          \ setters calls\n        input.setAppName(\"sample app\");\n\n        try\
          \ {\n            // User class object\n            User obj = apiInstance.requestNewSubaccountToken(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling requestNewSubaccountToken\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    userId: 1,\n    password: \"strongPassword\",\n    // Optional\
          \ parameters\n    appName: \"sample app\",\n}\n\napi.requestNewSubaccountToken(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::RequestNewSubaccountTokenInputObject.new\n\
          \n# Required parameters\nobj.user_id = 1\nobj.password = \"strongPassword\"\
          \n# Optional parameters, you can skip them\nobj.app_name = \"sample app\"\
          \n\nbegin\n    # User object\n    result = api.request_new_subaccount_token(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->request_new_subaccount_token: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new RequestNewSubaccountTokenInputObject();\n\n            // Required\
          \ parameters\n            obj.UserId = 1;\n            obj.Password = \"\
          strongPassword\";\n\n            // Optional parameters, you can skip these\
          \ setters calls\n            obj.AppName = \"sample app\";\n\n         \
          \   try {\n                // User class object\n                var result\
          \ = apiInstance.RequestNewSubaccountToken(obj);\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling requestNewSubaccountToken: \"+e.Message);\n     \
          \       }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ RequestNewSubaccountTokenInputObject With {\n            .UserId = 1,\n\
          \            .Password = \"strongPassword\",\n            .AppName = \"\
          sample app\"\n        }\n\n        Try\n            ' User class object\n\
          \            Dim result = apiInstance.RequestNewSubaccountToken(obj)\n \
          \           ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling requestNewSubaccountToken: \" + e.Message)\n    \
          \    End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        UserId: 1,\n        Password: \"\
          strongPassword\",\n        // Optional parameters, you can skip them\n \
          \       AppName: \"sample app\",\n    }\n\n    // tm.User struct\n    result,\
          \ _, err := client.TextMagicApi.RequestNewSubaccountToken(auth, input)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<RequestNewSubaccountTokenInputObject>\
          \ input(new RequestNewSubaccountTokenInputObject);\n    // Required parameters\n\
          \    input->setUserId(1);\n    input->setPassword(\"strongPassword\");\n\
          \    // Optional parameters, you can skip them\n    input->setAppName(\"\
          sample app\");\n\n    try {\n        pplx::task<std::shared_ptr<User>> result\
          \ = api.requestNewSubaccountToken(input);\n        result.wait();\n    \
          \    // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"requestNewSubaccountToken() exception: \"\
          \ << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.RequestNewSubaccountTokenInputObject()\n\n# Required parameters\n\
          input.user_id = 1\ninput.password = \"strongPassword\"\n# Optional parameters,\
          \ you can skip them\ninput.app_name = \"sample app\"\n\ntry:\n    # User\
          \ object\n    result = api_instance.request_new_subaccount_token(request_new_subaccount_token_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->request_new_subaccount_token: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::RequestNewSubaccountTokenInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::RequestNewSubaccountTokenInputObject->new(\n\
          \    # Required parameters\n    userId => 1,\n    password => 'strongPassword',\n\
          \    # Optional parameters, you can skip them\n    appName => 'sample app',\n\
          );\n\neval {\n    # User object\n    my $result = $api_instance->request_new_subaccount_token(request_new_subaccount_token_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->request_new_subaccount_token: $@\\n\";\n}"
  /api/v2/subaccounts/tokens/list:
    post:
      tags:
      - "TextMagic"
      summary: "Get all subaccounts with their REST API tokens associated with specified\
        \ app name."
      description: "When more than one token related to app name, last key will be\
        \ returned."
      operationId: "getSubaccountsWithTokens"
      parameters:
      - in: "body"
        name: "GetSubaccountsWithTokensInputObject"
        required: true
        schema:
          $ref: "#/definitions/GetSubaccountsWithTokensInputObject"
        x-exportParamName: "GetSubaccountsWithTokensInputObject"
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "number"
        default: 1.0
        x-exportParamName: "Page"
        x-optionalDataType: "Float32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetSubaccountsWithTokensResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when user has no enough rights to perform this action"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new GetSubaccountsWithTokensInputObject();\n\
          \n// Required parameters\n$input->setAppName(\"sample app\");\n$input->setPassword(\"\
          strongPassword\");\n// Optional, you can pass them as null values to getSubaccountsWithTokens\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\n\
          try {\n    // GetSubaccountsWithTokensResponse class object\n    $result\
          \ = $api->getSubaccountsWithTokens($input$page, $limit);\n    // ...\n}\
          \ catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getSubaccountsWithTokens:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        GetSubaccountsWithTokensInputObject input = new GetSubaccountsWithTokensInputObject();\n\
          \n        // Required parameters\n        input.setAppName(\"sample app\"\
          );\n        input.setPassword(\"strongPassword\");\n        // Optional,\
          \ you can pass them as null values to getSubaccountsWithTokens method below,\
          \ default values will be used\n         page = 1;\n        int limit = 10;\n\
          \n        try {\n            // GetSubaccountsWithTokensResponse class object\n\
          \            GetSubaccountsWithTokensResponse obj = apiInstance.getSubaccountsWithTokens(inputpage,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getSubaccountsWithTokens\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    appName: \"sample app\",\n    password: \"strongPassword\"\
          ,\n}\nparams = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n\
          }\n\napi.getSubaccountsWithTokens(input, ).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::GetSubaccountsWithTokensInputObject.new\n\
          \n# Required parameters\nobj.app_name = \"sample app\"\nobj.password = \"\
          strongPassword\"\nparams = {\n  # Optional parameters\n  page: 1,\n  limit:\
          \ 10,\n}\n\nbegin\n    # GetSubaccountsWithTokensResponse object\n    result\
          \ = api.get_subaccounts_with_tokens(input, params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_subaccounts_with_tokens:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new GetSubaccountsWithTokensInputObject();\n\n            // Required\
          \ parameters\n            obj.AppName = \"sample app\";\n            obj.Password\
          \ = \"strongPassword\";\n            // Optional, you can pass them as null\
          \ values to getSubaccountsWithTokens method below, default values will be\
          \ used\n             page = 1;\n            int limit = 10;\n\n        \
          \    try {\n                // GetSubaccountsWithTokensResponse class object\n\
          \                var result = apiInstance.GetSubaccountsWithTokens(objpage,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getSubaccountsWithTokens:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ GetSubaccountsWithTokensInputObject With {\n            .AppName = \"\
          sample app\",\n            .Password = \"strongPassword\"\n        }\n \
          \       ' Optional, you can pass them as null values to getSubaccountsWithTokens\
          \ method below, default values will be used\n        Dim page As  = 1\n\
          \        Dim limit As Integer = 10\n\n        Try\n            ' GetSubaccountsWithTokensResponse\
          \ class object\n            Dim result = apiInstance.GetSubaccountsWithTokens(objpage,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getSubaccountsWithTokens: \" + e.Message)\n     \
          \   End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        AppName: \"sample app\",\n    \
          \    Password: \"strongPassword\",\n    }\n\n    opts := tm.GetSubaccountsWithTokensOpts{\n\
          \        // Optional parameters\n        Page: optional.(1),\n        Limit:\
          \ optional.NewInt32(10),\n    }\n\n    // tm.GetSubaccountsWithTokensResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetSubaccountsWithTokens(auth,\
          \ input, &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<GetSubaccountsWithTokensInputObject>\
          \ input(new GetSubaccountsWithTokensInputObject);\n    // Required parameters\n\
          \    input->setAppName(\"sample app\");\n    input->setPassword(\"strongPassword\"\
          );\n\n    // Optional parameters. Important: if you want to use default\
          \ value then pass boost::none value\n     page = 1;\n    int limit = 10;\n\
          \n    try {\n        pplx::task<std::shared_ptr<GetSubaccountsWithTokensResponse>>\
          \ result = api.getSubaccountsWithTokens(input, page, limit);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getSubaccountsWithTokens() exception: \"\
          \ << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.GetSubaccountsWithTokensInputObject()\n\n# Required parameters\n\
          input.app_name = \"sample app\"\ninput.password = \"strongPassword\"\n#\
          \ Optional params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n   \
          \ # GetSubaccountsWithTokensResponse object\n    result = api_instance.get_subaccounts_with_tokens(get_subaccounts_with_tokens_input_object=input,\
          \ page=page, limit=limit)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_subaccounts_with_tokens: %s\\n\"\
          \ % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::GetSubaccountsWithTokensInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::GetSubaccountsWithTokensInputObject->new(\n\
          \    # Required parameters\n    appName => 'sample app',\n    password =>\
          \ 'strongPassword',\n);\n# Optional params, you can skip them\nmy $page\
          \ = 1;\nmy $limit = 10;\n\neval {\n    # GetSubaccountsWithTokensResponse\
          \ object\n    my $result = $api_instance->get_subaccounts_with_tokens(get_subaccounts_with_tokens_input_object\
          \ => $input, page => $page, limit => $limit);\n    # ...\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->get_subaccounts_with_tokens:\
          \ $@\\n\";\n}"
  /api/v2/subaccounts/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single subaccount."
      description: ""
      operationId: "getSubaccount"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Subaccount data returned with success"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when current user is not allowed to manage subaccounts"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // User class object\n    $result = $api->getSubaccount($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getSubaccount: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // User class object\n\
          \            User obj = apiInstance.getSubaccount(id);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getSubaccount\");\n            e.printStackTrace();\n   \
          \     }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getSubaccount(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # User\
          \ object\n    result = api.get_subaccount(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_subaccount:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // User class object\n    \
          \            var result = apiInstance.GetSubaccount(id);\n             \
          \   // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getSubaccount: \"+e.Message);\n            }\n  \
          \      }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' User class object\n            Dim result\
          \ = apiInstance.GetSubaccount(id)\n            ' ...\n        Catch e As\
          \ Exception\n            Console.WriteLine(\"Exception when calling getSubaccount:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.User struct\n    result, _, err := client.TextMagicApi.GetSubaccount(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<User>> result = api.getSubaccount(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getSubaccount()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # User object\n    result = api_instance.get_subaccount(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_subaccount: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # User object\n    my $result = $api_instance->get_subaccount(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_subaccount: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Close subaccount."
      description: ""
      operationId: "closeSubaccount"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when current user is not allowed to manage subaccounts"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->closeSubaccount($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->closeSubaccount:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.closeSubaccount(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling closeSubaccount\");\n            e.printStackTrace();\n \
          \       }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.closeSubaccount(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.close_subaccount(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->close_subaccount:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.CloseSubaccount(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling closeSubaccount: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.CloseSubaccount(id)\n    \
          \        ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling closeSubaccount: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.CloseSubaccount(auth, id)\n\n    if err != nil\
          \ {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.closeSubaccount(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"closeSubaccount()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.close_subaccount(id=id)\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->close_subaccount:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->close_subaccount(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->close_subaccount: $@\\\
          n\";\n}"
  /api/v2/user/notification/balance/bundles:
    get:
      tags:
      - "TextMagic"
      summary: "Returns the list of available balance options which can be used as\
        \ a bound to determine when to send email to user with low balance notification.\
        \ See https://my.textmagic.com/online/account/notifications/balance"
      description: ""
      operationId: "getBalanceNotificationOptions"
      parameters: []
      responses:
        200:
          description: "Returned when the list of available balance options have been\
            \ received with success"
          schema:
            $ref: "#/definitions/GetBalanceNotificationOptionsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetBalanceNotificationOptionsResponse class object\n\
          \    $result = $api->getBalanceNotificationOptions();\n    // ...\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getBalanceNotificationOptions:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetBalanceNotificationOptionsResponse\
          \ class object\n            GetBalanceNotificationOptionsResponse obj =\
          \ apiInstance.getBalanceNotificationOptions();\n            // ...\n   \
          \     } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getBalanceNotificationOptions\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getBalanceNotificationOptions().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetBalanceNotificationOptionsResponse\
          \ object\n    result = api.get_balance_notification_options()\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_balance_notification_options:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetBalanceNotificationOptionsResponse class object\n\
          \                var result = apiInstance.GetBalanceNotificationOptions();\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getBalanceNotificationOptions:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetBalanceNotificationOptionsResponse class object\n        \
          \    Dim result = apiInstance.GetBalanceNotificationOptions()\n        \
          \    ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getBalanceNotificationOptions: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetBalanceNotificationOptionsResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetBalanceNotificationOptions(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetBalanceNotificationOptionsResponse>>\
          \ result = api.getBalanceNotificationOptions();\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getBalanceNotificationOptions() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetBalanceNotificationOptionsResponse object\n    result = api_instance.get_balance_notification_options()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_balance_notification_options: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetBalanceNotificationOptionsResponse object\n    my $result = $api_instance->get_balance_notification_options();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_balance_notification_options:\
          \ $@\\n\";\n}"
  /api/v2/user/notification/balance:
    get:
      tags:
      - "TextMagic"
      summary: "Get balance notification settings"
      description: ""
      operationId: "getBalanceNotificationSettings"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetBalanceNotificationSettingsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetBalanceNotificationSettingsResponse class object\n\
          \    $result = $api->getBalanceNotificationSettings();\n    // ...\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getBalanceNotificationSettings:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetBalanceNotificationSettingsResponse\
          \ class object\n            GetBalanceNotificationSettingsResponse obj =\
          \ apiInstance.getBalanceNotificationSettings();\n            // ...\n  \
          \      } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getBalanceNotificationSettings\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getBalanceNotificationSettings().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetBalanceNotificationSettingsResponse\
          \ object\n    result = api.get_balance_notification_settings()\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_balance_notification_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetBalanceNotificationSettingsResponse class object\n\
          \                var result = apiInstance.GetBalanceNotificationSettings();\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getBalanceNotificationSettings:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetBalanceNotificationSettingsResponse class object\n       \
          \     Dim result = apiInstance.GetBalanceNotificationSettings()\n      \
          \      ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getBalanceNotificationSettings: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetBalanceNotificationSettingsResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetBalanceNotificationSettings(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetBalanceNotificationSettingsResponse>>\
          \ result = api.getBalanceNotificationSettings();\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getBalanceNotificationSettings() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetBalanceNotificationSettingsResponse object\n    result = api_instance.get_balance_notification_settings()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_balance_notification_settings: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetBalanceNotificationSettingsResponse object\n    my $result = $api_instance->get_balance_notification_settings();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_balance_notification_settings:\
          \ $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update balance notification settings"
      description: ""
      operationId: "updateBalanceNotificationSettings"
      produces: []
      parameters:
      - in: "body"
        name: "UpdateBalanceNotificationSettingsInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateBalanceNotificationSettingsInputObject"
        x-exportParamName: "UpdateBalanceNotificationSettingsInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateBalanceNotificationSettingsInputObject();\n\
          \n// Required parameters\n$input->setAlertBalance(\"50\");\n\n// Optional\
          \ parameters, you can skip these setters calls\n$input->setLowBalanceNotification(true);\n\
          $input->setAlertPhone(\"15417543010\");\n$input->setAlertEmail1(\"test@test.com\"\
          );\n$input->setAlertEmail2(\"test@test.com\");\n$input->setAlertEmail3(\"\
          test@test.com\");\n\ntry {\n    $api->updateBalanceNotificationSettings($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateBalanceNotificationSettings:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateBalanceNotificationSettingsInputObject input = new UpdateBalanceNotificationSettingsInputObject();\n\
          \n        // Required parameters\n        input.setAlertBalance(\"50\");\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setLowBalanceNotification(true);\n        input.setAlertPhone(\"\
          15417543010\");\n        input.setAlertEmail1(\"test@test.com\");\n    \
          \    input.setAlertEmail2(\"test@test.com\");\n        input.setAlertEmail3(\"\
          test@test.com\");\n\n        try {\n            apiInstance.updateBalanceNotificationSettings(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling updateBalanceNotificationSettings\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    alertBalance: \"50\",\n    // Optional parameters\n   \
          \ lowBalanceNotification: true,\n    alertPhone: \"15417543010\",\n    alertEmail1:\
          \ \"test@test.com\",\n    alertEmail2: \"test@test.com\",\n    alertEmail3:\
          \ \"test@test.com\",\n}\n\napi.updateBalanceNotificationSettings(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateBalanceNotificationSettingsInputObject.new\n\
          \n# Required parameters\nobj.alert_balance = \"50\"\n# Optional parameters,\
          \ you can skip them\nobj.low_balance_notification = true\nobj.alert_phone\
          \ = \"15417543010\"\nobj.alert_email1 = \"test@test.com\"\nobj.alert_email2\
          \ = \"test@test.com\"\nobj.alert_email3 = \"test@test.com\"\n\nbegin\n \
          \   api.update_balance_notification_settings(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->update_balance_notification_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateBalanceNotificationSettingsInputObject();\n\n            //\
          \ Required parameters\n            obj.AlertBalance = \"50\";\n\n      \
          \      // Optional parameters, you can skip these setters calls\n      \
          \      obj.LowBalanceNotification = true;\n            obj.AlertPhone =\
          \ \"15417543010\";\n            obj.AlertEmail1 = \"test@test.com\";\n \
          \           obj.AlertEmail2 = \"test@test.com\";\n            obj.AlertEmail3\
          \ = \"test@test.com\";\n\n            try {\n                apiInstance.UpdateBalanceNotificationSettings(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling updateBalanceNotificationSettings: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateBalanceNotificationSettingsInputObject With {\n            .LowBalanceNotification\
          \ = true,\n            .AlertBalance = \"50\",\n            .AlertPhone\
          \ = \"15417543010\",\n            .AlertEmail1 = \"test@test.com\",\n  \
          \          .AlertEmail2 = \"test@test.com\",\n            .AlertEmail3 =\
          \ \"test@test.com\"\n        }\n\n        Try\n            apiInstance.UpdateBalanceNotificationSettings(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateBalanceNotificationSettings: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        AlertBalance: \"50\",\n       \
          \ // Optional parameters, you can skip them\n        LowBalanceNotification:\
          \ true,\n        AlertPhone: \"15417543010\",\n        AlertEmail1: \"test@test.com\"\
          ,\n        AlertEmail2: \"test@test.com\",\n        AlertEmail3: \"test@test.com\"\
          ,\n    }\n\n    client.TextMagicApi.UpdateBalanceNotificationSettings(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateBalanceNotificationSettingsInputObject>\
          \ input(new UpdateBalanceNotificationSettingsInputObject);\n    // Required\
          \ parameters\n    input->setAlertBalance(\"50\");\n    // Optional parameters,\
          \ you can skip them\n    input->setLowBalanceNotification(true);\n    input->setAlertPhone(\"\
          15417543010\");\n    input->setAlertEmail1(\"test@test.com\");\n    input->setAlertEmail2(\"\
          test@test.com\");\n    input->setAlertEmail3(\"test@test.com\");\n\n   \
          \ try {\n        pplx::task result = api.updateBalanceNotificationSettings(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"updateBalanceNotificationSettings() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateBalanceNotificationSettingsInputObject()\n\n# Required\
          \ parameters\ninput.alert_balance = \"50\"\n# Optional parameters, you can\
          \ skip them\ninput.low_balance_notification = true\ninput.alert_phone =\
          \ \"15417543010\"\ninput.alert_email1 = \"test@test.com\"\ninput.alert_email2\
          \ = \"test@test.com\"\ninput.alert_email3 = \"test@test.com\"\n\ntry:\n\
          \    api_instance.update_balance_notification_settings(update_balance_notification_settings_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->update_balance_notification_settings:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateBalanceNotificationSettingsInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateBalanceNotificationSettingsInputObject->new(\n\
          \    # Required parameters\n    alertBalance => '50',\n    # Optional parameters,\
          \ you can skip them\n    lowBalanceNotification => 1,\n    alertPhone =>\
          \ '15417543010',\n    alertEmail1 => 'test@test.com',\n    alertEmail2 =>\
          \ 'test@test.com',\n    alertEmail3 => 'test@test.com',\n);\n\neval {\n\
          \    $api_instance->update_balance_notification_settings(update_balance_notification_settings_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->update_balance_notification_settings:\
          \ $@\\n\";\n}"
  /api/v2/user/notification/inbound:
    get:
      tags:
      - "TextMagic"
      summary: "Get inbound messages notification settings"
      description: ""
      operationId: "getInboundMessagesNotificationSettings"
      parameters: []
      responses:
        200:
          description: "Returned when success"
          schema:
            $ref: "#/definitions/GetInboundMessagesNotificationSettingsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetInboundMessagesNotificationSettingsResponse class\
          \ object\n    $result = $api->getInboundMessagesNotificationSettings();\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getInboundMessagesNotificationSettings: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetInboundMessagesNotificationSettingsResponse\
          \ class object\n            GetInboundMessagesNotificationSettingsResponse\
          \ obj = apiInstance.getInboundMessagesNotificationSettings();\n        \
          \    // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getInboundMessagesNotificationSettings\");\n    \
          \        e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getInboundMessagesNotificationSettings().then(function (data) {\n  \
          \  console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetInboundMessagesNotificationSettingsResponse\
          \ object\n    result = api.get_inbound_messages_notification_settings()\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_inbound_messages_notification_settings: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetInboundMessagesNotificationSettingsResponse class\
          \ object\n                var result = apiInstance.GetInboundMessagesNotificationSettings();\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getInboundMessagesNotificationSettings:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetInboundMessagesNotificationSettingsResponse class object\n\
          \            Dim result = apiInstance.GetInboundMessagesNotificationSettings()\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getInboundMessagesNotificationSettings: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetInboundMessagesNotificationSettingsResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetInboundMessagesNotificationSettings(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetInboundMessagesNotificationSettingsResponse>>\
          \ result = api.getInboundMessagesNotificationSettings();\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getInboundMessagesNotificationSettings()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetInboundMessagesNotificationSettingsResponse object\n    result\
          \ = api_instance.get_inbound_messages_notification_settings()\n    # ...\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_inbound_messages_notification_settings:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetInboundMessagesNotificationSettingsResponse object\n    my $result\
          \ = $api_instance->get_inbound_messages_notification_settings();\n    #\
          \ ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_inbound_messages_notification_settings:\
          \ $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update inbound messages notification settings"
      description: ""
      operationId: "updateInboundMessagesNotificationSettings"
      produces: []
      parameters:
      - in: "body"
        name: "UpdateInboundMessagesNotificationSettingsInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateInboundMessagesNotificationSettingsInputObject"
        x-exportParamName: "UpdateInboundMessagesNotificationSettingsInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateInboundMessagesNotificationSettingsInputObject();\n\
          \n// Required parameters\n$input->setInboundMessageNotification(true);\n\
          $input->setIncludeSmsHistory(true);\n$input->setSendInHtmlFormat(true);\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setAlertEmail1(\"\
          test@test.com\");\n$input->setAlertEmail2(\"test@test.com\");\n$input->setAlertEmail3(\"\
          test@test.com\");\n\ntry {\n    $api->updateInboundMessagesNotificationSettings($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateInboundMessagesNotificationSettings:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateInboundMessagesNotificationSettingsInputObject input = new\
          \ UpdateInboundMessagesNotificationSettingsInputObject();\n\n        //\
          \ Required parameters\n        input.setInboundMessageNotification(true);\n\
          \        input.setIncludeSmsHistory(true);\n        input.setSendInHtmlFormat(true);\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setAlertEmail1(\"test@test.com\");\n        input.setAlertEmail2(\"\
          test@test.com\");\n        input.setAlertEmail3(\"test@test.com\");\n\n\
          \        try {\n            apiInstance.updateInboundMessagesNotificationSettings(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling updateInboundMessagesNotificationSettings\");\n         \
          \   e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    inboundMessageNotification: true,\n    includeSmsHistory:\
          \ true,\n    sendInHtmlFormat: true,\n    // Optional parameters\n    alertEmail1:\
          \ \"test@test.com\",\n    alertEmail2: \"test@test.com\",\n    alertEmail3:\
          \ \"test@test.com\",\n}\n\napi.updateInboundMessagesNotificationSettings(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateInboundMessagesNotificationSettingsInputObject.new\n\
          \n# Required parameters\nobj.inbound_message_notification = true\nobj.include_sms_history\
          \ = true\nobj.send_in_html_format = true\n# Optional parameters, you can\
          \ skip them\nobj.alert_email1 = \"test@test.com\"\nobj.alert_email2 = \"\
          test@test.com\"\nobj.alert_email3 = \"test@test.com\"\n\nbegin\n    api.update_inbound_messages_notification_settings(input)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->update_inbound_messages_notification_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateInboundMessagesNotificationSettingsInputObject();\n\n    \
          \        // Required parameters\n            obj.InboundMessageNotification\
          \ = true;\n            obj.IncludeSmsHistory = true;\n            obj.SendInHtmlFormat\
          \ = true;\n\n            // Optional parameters, you can skip these setters\
          \ calls\n            obj.AlertEmail1 = \"test@test.com\";\n            obj.AlertEmail2\
          \ = \"test@test.com\";\n            obj.AlertEmail3 = \"test@test.com\"\
          ;\n\n            try {\n                apiInstance.UpdateInboundMessagesNotificationSettings(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling updateInboundMessagesNotificationSettings: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateInboundMessagesNotificationSettingsInputObject With {\n        \
          \    .InboundMessageNotification = true,\n            .IncludeSmsHistory\
          \ = true,\n            .SendInHtmlFormat = true,\n            .AlertEmail1\
          \ = \"test@test.com\",\n            .AlertEmail2 = \"test@test.com\",\n\
          \            .AlertEmail3 = \"test@test.com\"\n        }\n\n        Try\n\
          \            apiInstance.UpdateInboundMessagesNotificationSettings(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateInboundMessagesNotificationSettings: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        InboundMessageNotification: true,\n\
          \        IncludeSmsHistory: true,\n        SendInHtmlFormat: true,\n   \
          \     // Optional parameters, you can skip them\n        AlertEmail1: \"\
          test@test.com\",\n        AlertEmail2: \"test@test.com\",\n        AlertEmail3:\
          \ \"test@test.com\",\n    }\n\n    client.TextMagicApi.UpdateInboundMessagesNotificationSettings(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateInboundMessagesNotificationSettingsInputObject>\
          \ input(new UpdateInboundMessagesNotificationSettingsInputObject);\n   \
          \ // Required parameters\n    input->setInboundMessageNotification(true);\n\
          \    input->setIncludeSmsHistory(true);\n    input->setSendInHtmlFormat(true);\n\
          \    // Optional parameters, you can skip them\n    input->setAlertEmail1(\"\
          test@test.com\");\n    input->setAlertEmail2(\"test@test.com\");\n    input->setAlertEmail3(\"\
          test@test.com\");\n\n    try {\n        pplx::task result = api.updateInboundMessagesNotificationSettings(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"updateInboundMessagesNotificationSettings() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateInboundMessagesNotificationSettingsInputObject()\n\n\
          # Required parameters\ninput.inbound_message_notification = true\ninput.include_sms_history\
          \ = true\ninput.send_in_html_format = true\n# Optional parameters, you can\
          \ skip them\ninput.alert_email1 = \"test@test.com\"\ninput.alert_email2\
          \ = \"test@test.com\"\ninput.alert_email3 = \"test@test.com\"\n\ntry:\n\
          \    api_instance.update_inbound_messages_notification_settings(update_inbound_messages_notification_settings_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->update_inbound_messages_notification_settings:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateInboundMessagesNotificationSettingsInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateInboundMessagesNotificationSettingsInputObject->new(\n\
          \    # Required parameters\n    inboundMessageNotification => 1,\n    includeSmsHistory\
          \ => 1,\n    sendInHtmlFormat => 1,\n    # Optional parameters, you can\
          \ skip them\n    alertEmail1 => 'test@test.com',\n    alertEmail2 => 'test@test.com',\n\
          \    alertEmail3 => 'test@test.com',\n);\n\neval {\n    $api_instance->update_inbound_messages_notification_settings(update_inbound_messages_notification_settings_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->update_inbound_messages_notification_settings:\
          \ $@\\n\";\n}"
  /api/v2/user/desktop/notification:
    put:
      tags:
      - "TextMagic"
      summary: "Update chat desktop notification settings"
      description: ""
      operationId: "updateChatDesktopNotificationSettings"
      parameters:
      - in: "body"
        name: "UpdateChatDesktopNotificationSettingsInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateChatDesktopNotificationSettingsInputObject"
        x-exportParamName: "UpdateChatDesktopNotificationSettingsInputObject"
      responses:
        200:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateChatDesktopNotificationSettingsInputObject();\n\
          \n// Required parameters\n$input->setPlaySound(false);\n$input->setShowNotifications(false);\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setShowText(true);\n\
          $input->setSoundId(1);\n\ntry {\n    $api->updateChatDesktopNotificationSettings($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateChatDesktopNotificationSettings:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateChatDesktopNotificationSettingsInputObject input = new UpdateChatDesktopNotificationSettingsInputObject();\n\
          \n        // Required parameters\n        input.setPlaySound(false);\n \
          \       input.setShowNotifications(false);\n\n        // Optional parameters,\
          \ you can skip these setters calls\n        input.setShowText(true);\n \
          \       input.setSoundId(1);\n\n        try {\n            apiInstance.updateChatDesktopNotificationSettings(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling updateChatDesktopNotificationSettings\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    playSound: false,\n    showNotifications: false,\n    //\
          \ Optional parameters\n    showText: true,\n    soundId: 1,\n}\n\napi.updateChatDesktopNotificationSettings(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateChatDesktopNotificationSettingsInputObject.new\n\
          \n# Required parameters\nobj.play_sound = false\nobj.show_notifications\
          \ = false\n# Optional parameters, you can skip them\nobj.show_text = true\n\
          obj.sound_id = 1\n\nbegin\n    api.update_chat_desktop_notification_settings(input)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->update_chat_desktop_notification_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateChatDesktopNotificationSettingsInputObject();\n\n        \
          \    // Required parameters\n            obj.PlaySound = false;\n      \
          \      obj.ShowNotifications = false;\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.ShowText = true;\n \
          \           obj.SoundId = 1;\n\n            try {\n                apiInstance.UpdateChatDesktopNotificationSettings(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling updateChatDesktopNotificationSettings: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateChatDesktopNotificationSettingsInputObject With {\n            .PlaySound\
          \ = false,\n            .ShowNotifications = false,\n            .ShowText\
          \ = true,\n            .SoundId = 1\n        }\n\n        Try\n        \
          \    apiInstance.UpdateChatDesktopNotificationSettings(obj)\n          \
          \  ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateChatDesktopNotificationSettings: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        PlaySound: false,\n        ShowNotifications:\
          \ false,\n        // Optional parameters, you can skip them\n        ShowText:\
          \ true,\n        SoundId: 1,\n    }\n\n    client.TextMagicApi.UpdateChatDesktopNotificationSettings(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateChatDesktopNotificationSettingsInputObject>\
          \ input(new UpdateChatDesktopNotificationSettingsInputObject);\n    // Required\
          \ parameters\n    input->setPlaySound(false);\n    input->setShowNotifications(false);\n\
          \    // Optional parameters, you can skip them\n    input->setShowText(true);\n\
          \    input->setSoundId(1);\n\n    try {\n        pplx::task result = api.updateChatDesktopNotificationSettings(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"updateChatDesktopNotificationSettings() exception: \"\
          \ << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateChatDesktopNotificationSettingsInputObject()\n\n# Required\
          \ parameters\ninput.play_sound = false\ninput.show_notifications = false\n\
          # Optional parameters, you can skip them\ninput.show_text = true\ninput.sound_id\
          \ = 1\n\ntry:\n    api_instance.update_chat_desktop_notification_settings(update_chat_desktop_notification_settings_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->update_chat_desktop_notification_settings:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateChatDesktopNotificationSettingsInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateChatDesktopNotificationSettingsInputObject->new(\n\
          \    # Required parameters\n    playSound => 0,\n    showNotifications =>\
          \ 0,\n    # Optional parameters, you can skip them\n    showText => 1,\n\
          \    soundId => 1,\n);\n\neval {\n    $api_instance->update_chat_desktop_notification_settings(update_chat_desktop_notification_settings_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->update_chat_desktop_notification_settings:\
          \ $@\\n\";\n}"
  /api/v2/callback/settings:
    get:
      tags:
      - "TextMagic"
      summary: "Fetch callback URL settings"
      description: ""
      operationId: "getCallbackSettings"
      parameters: []
      responses:
        200:
          description: "Callback settings has been returned with success"
          schema:
            $ref: "#/definitions/GetCallbackSettingsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetCallbackSettingsResponse class object\n    $result\
          \ = $api->getCallbackSettings();\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getCallbackSettings: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetCallbackSettingsResponse class object\n\
          \            GetCallbackSettingsResponse obj = apiInstance.getCallbackSettings();\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getCallbackSettings\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getCallbackSettings().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetCallbackSettingsResponse\
          \ object\n    result = api.get_callback_settings()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_callback_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetCallbackSettingsResponse class object\n     \
          \           var result = apiInstance.GetCallbackSettings();\n          \
          \      // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getCallbackSettings: \"+e.Message);\n           \
          \ }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetCallbackSettingsResponse class object\n            Dim result\
          \ = apiInstance.GetCallbackSettings()\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ getCallbackSettings: \" + e.Message)\n        End Try\n    End Sub\nEnd\
          \ Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetCallbackSettingsResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetCallbackSettings(auth, )\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetCallbackSettingsResponse>>\
          \ result = api.getCallbackSettings();\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getCallbackSettings() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetCallbackSettingsResponse object\n    result = api_instance.get_callback_settings()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_callback_settings: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetCallbackSettingsResponse object\n    my $result = $api_instance->get_callback_settings();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_callback_settings:\
          \ $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update callback URL settings"
      description: ""
      operationId: "updateCallbackSettings"
      parameters:
      - in: "body"
        name: "UpdateCallbackSettingsInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateCallbackSettingsInputObject"
        x-exportParamName: "UpdateCallbackSettingsInputObject"
      responses:
        200:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateCallbackSettingsInputObject();\n\
          \n// Required parameters\n$input->setOutUrl(\"http://www.mysite.com/delivery-callback.php\"\
          );\n$input->setInUrl(\"http://www.mysite.com/incoming-sms-callback.php\"\
          );\n$input->setFormat(\"undefined\");\n\ntry {\n    $api->updateCallbackSettings($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateCallbackSettings:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateCallbackSettingsInputObject input = new UpdateCallbackSettingsInputObject();\n\
          \n        // Required parameters\n        input.setOutUrl(\"http://www.mysite.com/delivery-callback.php\"\
          );\n        input.setInUrl(\"http://www.mysite.com/incoming-sms-callback.php\"\
          );\n        input.setFormat(\"undefined\");\n\n        try {\n         \
          \   apiInstance.updateCallbackSettings(input);\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling updateCallbackSettings\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    outUrl: \"http://www.mysite.com/delivery-callback.php\"\
          ,\n    inUrl: \"http://www.mysite.com/incoming-sms-callback.php\",\n   \
          \ format: \"undefined\",\n}\n\napi.updateCallbackSettings(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateCallbackSettingsInputObject.new\n\
          \n# Required parameters\nobj.out_url = \"http://www.mysite.com/delivery-callback.php\"\
          \nobj.in_url = \"http://www.mysite.com/incoming-sms-callback.php\"\nobj.format\
          \ = \"undefined\"\n\nbegin\n    api.update_callback_settings(input)\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->update_callback_settings:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateCallbackSettingsInputObject();\n\n            // Required\
          \ parameters\n            obj.OutUrl = \"http://www.mysite.com/delivery-callback.php\"\
          ;\n            obj.InUrl = \"http://www.mysite.com/incoming-sms-callback.php\"\
          ;\n            obj.Format = \"undefined\";\n\n            try {\n      \
          \          apiInstance.UpdateCallbackSettings(obj);\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ updateCallbackSettings: \"+e.Message);\n            }\n        }\n   \
          \ }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateCallbackSettingsInputObject With {\n            .OutUrl = \"http://www.mysite.com/delivery-callback.php\"\
          ,\n            .InUrl = \"http://www.mysite.com/incoming-sms-callback.php\"\
          ,\n            .Format = \"undefined\"\n        }\n\n        Try\n     \
          \       apiInstance.UpdateCallbackSettings(obj)\n            ' ...\n   \
          \     Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling updateCallbackSettings: \" + e.Message)\n        End Try\n   \
          \ End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        OutUrl: \"http://www.mysite.com/delivery-callback.php\"\
          ,\n        InUrl: \"http://www.mysite.com/incoming-sms-callback.php\",\n\
          \        Format: \"undefined\",\n    }\n\n    client.TextMagicApi.UpdateCallbackSettings(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateCallbackSettingsInputObject>\
          \ input(new UpdateCallbackSettingsInputObject);\n    // Required parameters\n\
          \    input->setOutUrl(\"http://www.mysite.com/delivery-callback.php\");\n\
          \    input->setInUrl(\"http://www.mysite.com/incoming-sms-callback.php\"\
          );\n    input->setFormat(\"undefined\");\n\n    try {\n        pplx::task\
          \ result = api.updateCallbackSettings(input);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"updateCallbackSettings()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateCallbackSettingsInputObject()\n\n# Required parameters\n\
          input.out_url = \"http://www.mysite.com/delivery-callback.php\"\ninput.in_url\
          \ = \"http://www.mysite.com/incoming-sms-callback.php\"\ninput.format =\
          \ \"undefined\"\n\ntry:\n    api_instance.update_callback_settings(update_callback_settings_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->update_callback_settings:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateCallbackSettingsInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateCallbackSettingsInputObject->new(\n\
          \    # Required parameters\n    outUrl => 'http://www.mysite.com/delivery-callback.php',\n\
          \    inUrl => 'http://www.mysite.com/incoming-sms-callback.php',\n    format\
          \ => 'undefined',\n);\n\neval {\n    $api_instance->update_callback_settings(update_callback_settings_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->update_callback_settings:\
          \ $@\\n\";\n}"
  /api/v2/calls/price:
    get:
      tags:
      - "TextMagic"
      summary: "Check pricing for a inbound/outbound call."
      description: ""
      operationId: "getCallsPrices"
      parameters: []
      responses:
        200:
          description: "Pricing data has been returned with success"
          schema:
            $ref: "#/definitions/GetCallsPricesResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetCallsPricesResponse class object\n    $result =\
          \ $api->getCallsPrices();\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getCallsPrices: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetCallsPricesResponse class object\n\
          \            GetCallsPricesResponse obj = apiInstance.getCallsPrices();\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getCallsPrices\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getCallsPrices().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetCallsPricesResponse\
          \ object\n    result = api.get_calls_prices()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_calls_prices:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetCallsPricesResponse class object\n          \
          \      var result = apiInstance.GetCallsPrices();\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getCallsPrices: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetCallsPricesResponse class object\n            Dim result =\
          \ apiInstance.GetCallsPrices()\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling getCallsPrices:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetCallsPricesResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetCallsPrices(auth, )\n\n  \
          \  if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetCallsPricesResponse>>\
          \ result = api.getCallsPrices();\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"getCallsPrices() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetCallsPricesResponse object\n    result = api_instance.get_calls_prices()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_calls_prices: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetCallsPricesResponse object\n    my $result = $api_instance->get_calls_prices();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_calls_prices:\
          \ $@\\n\";\n}"
  /api/v2/contacts/autocomplete:
    get:
      tags:
      - "TextMagic"
      summary: "Get contacts autocomplete suggestions by given search term."
      description: ""
      operationId: "getContactsAutocomplete"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find recipients by specified search query"
        required: true
        type: "string"
        x-example: "A"
        x-exportParamName: "Query"
      - name: "lists"
        in: "query"
        description: "Should lists be returned or not"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Lists"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Autocomplete data has been returned with success"
          schema:
            $ref: "#/definitions/GetContactsAutocompleteResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$query = \"A\";\n// Optional, you can pass them as null values to\
          \ getContactsAutocomplete method below, default values will be used\n$limit\
          \ = 10;\n$lists = 0;\n\ntry {\n    // GetContactsAutocompleteResponse class\
          \ object\n    $result = $api->getContactsAutocomplete($query, $limit, $lists);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getContactsAutocomplete: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String query = \"A\";\n        // Optional, you can pass them\
          \ as null values to getContactsAutocomplete method below, default values\
          \ will be used\n        int limit = 10;\n        int lists = 0;\n\n    \
          \    try {\n            // GetContactsAutocompleteResponse class object\n\
          \            GetContactsAutocompleteResponse obj = apiInstance.getContactsAutocomplete(query,\
          \ limit, lists);\n            // ...\n        } catch (ApiException e) {\n\
          \            System.err.println(\"Exception when calling getContactsAutocomplete\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n    query: \"A\",\n// Optional parameters\n    limit: 10,\n    lists:\
          \ 0,\n}\n\napi.getContactsAutocomplete().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  query: 'A',\n\
          \  # Optional parameters\n  limit: 10,\n  lists: 0,\n}\n\nbegin\n    # GetContactsAutocompleteResponse\
          \ object\n    result = api.get_contacts_autocomplete(params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_contacts_autocomplete:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ query = \"A\";\n            // Optional, you can pass them as null values\
          \ to getContactsAutocomplete method below, default values will be used\n\
          \            int limit = 10;\n            int lists = 0;\n\n           \
          \ try {\n                // GetContactsAutocompleteResponse class object\n\
          \                var result = apiInstance.GetContactsAutocomplete(query,\
          \ limit, lists);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getContactsAutocomplete:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim query As\
          \ String = \"A\"\n        ' Optional, you can pass them as null values to\
          \ getContactsAutocomplete method below, default values will be used\n  \
          \      Dim limit As Integer = 10\n        Dim lists As Integer = 0\n\n \
          \       Try\n            ' GetContactsAutocompleteResponse class object\n\
          \            Dim result = apiInstance.GetContactsAutocomplete(query, limit,\
          \ lists)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getContactsAutocomplete: \" + e.Message)\n      \
          \  End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetContactsAutocompleteOpts{\n\
          \        // Required parameters\n        Query: \"A\",\n        // Optional\
          \ parameters\n        Limit: optional.NewInt32(10),\n        Lists: optional.NewInt32(0),\n\
          \    }\n\n    // tm.GetContactsAutocompleteResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetContactsAutocomplete(auth, &opts)\n\n\
          \    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string query = \"A\";\n  \
          \  // Optional parameters. Important: if you want to use default value then\
          \ pass boost::none value\n    int limit = 10;\n    int lists = 0;\n\n  \
          \  try {\n        pplx::task<std::shared_ptr<GetContactsAutocompleteResponse>>\
          \ result = api.getContactsAutocomplete(query, limit, lists);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getContactsAutocomplete() exception: \" <<\
          \ e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nquery\
          \ = \"A\"\n# Optional params, you can skip them\nlimit = 10\nlists = 0\n\
          \ntry:\n    # GetContactsAutocompleteResponse object\n    result = api_instance.get_contacts_autocomplete(query=query,\
          \ limit=limit, lists=lists)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_contacts_autocomplete: %s\\n\"\
          \ % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $query\
          \ = 'A';\n# Optional params, you can skip them\nmy $limit = 10;\nmy $lists\
          \ = 0;\n\neval {\n    # GetContactsAutocompleteResponse object\n    my $result\
          \ = $api_instance->get_contacts_autocomplete(query => $query, limit => $limit,\
          \ lists => $lists);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when\
          \ calling TextMagicApi->get_contacts_autocomplete: $@\\n\";\n}"
  /api/v2/contacts/favorite:
    get:
      tags:
      - "TextMagic"
      summary: "Get favorite contacts and lists."
      description: ""
      operationId: "getFavourites"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find contacts or lists by specified search query"
        required: false
        type: "string"
        default: "A"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Favourites entities have been returned with success"
          schema:
            $ref: "#/definitions/GetFavouritesPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getFavourites method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$query =\
          \ \"A\";\n\ntry {\n    // GetFavouritesPaginatedResponse class object\n\
          \    $result = $api->getFavourites($page, $limit, $query);\n    // ...\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getFavourites:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getFavourites\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String query = \"A\";\n\n        try {\n\
          \            // GetFavouritesPaginatedResponse class object\n          \
          \  GetFavouritesPaginatedResponse obj = apiInstance.getFavourites(page,\
          \ limit, query);\n            // ...\n        } catch (ApiException e) {\n\
          \            System.err.println(\"Exception when calling getFavourites\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    query:\
          \ \"A\",\n}\n\napi.getFavourites().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  query: 'A',\n}\n\nbegin\n    # GetFavouritesPaginatedResponse\
          \ object\n    result = api.get_favourites(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_favourites:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getFavourites method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string query = \"A\";\n\n            try {\n      \
          \          // GetFavouritesPaginatedResponse class object\n            \
          \    var result = apiInstance.GetFavourites(page, limit, query);\n     \
          \           // ...\n            } catch (Exception e) {\n              \
          \  Console.WriteLine(\"Exception when calling getFavourites: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getFavourites method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim query As String = \"A\"\n\n        Try\n\
          \            ' GetFavouritesPaginatedResponse class object\n           \
          \ Dim result = apiInstance.GetFavourites(page, limit, query)\n         \
          \   ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getFavourites: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetFavouritesOpts{\n    \
          \    // Optional parameters\n        Page: optional.NewInt32(1),\n     \
          \   Limit: optional.NewInt32(10),\n        Query: optional.NewString(\"\
          A\"),\n    }\n\n    // tm.GetFavouritesPaginatedResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetFavourites(auth, &opts)\n\n    if err\
          \ != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string query = \"A\";\n\n   \
          \ try {\n        pplx::task<std::shared_ptr<GetFavouritesPaginatedResponse>>\
          \ result = api.getFavourites(page, limit, query);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getFavourites() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nquery = \"A\"\n\ntry:\n\
          \    # GetFavouritesPaginatedResponse object\n    result = api_instance.get_favourites(page=page,\
          \ limit=limit, query=query)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_favourites: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $query =\
          \ 'A';\n\neval {\n    # GetFavouritesPaginatedResponse object\n    my $result\
          \ = $api_instance->get_favourites(page => $page, limit => $limit, query\
          \ => $query);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_favourites: $@\\n\";\n}"
  /api/v2/contacts/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find user contacts by given parameters."
      description: ""
      operationId: "searchContacts"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "shared"
        in: "query"
        description: "Should shared contacts to be included"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Shared"
        x-optionalDataType: "Int32"
      - name: "ids"
        in: "query"
        description: "Find contact by ID(s)"
        required: false
        type: "string"
        pattern: "[,\\d]+"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "listId"
        in: "query"
        description: "Find contact by List ID"
        required: false
        type: "integer"
        x-exportParamName: "ListId"
        x-optionalDataType: "Int32"
      - name: "includeBlocked"
        in: "query"
        description: "Should blocked contacts to be included"
        required: false
        type: "integer"
        enum:
        - 0
        - 1
        x-exportParamName: "IncludeBlocked"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find contacts by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "local"
        in: "query"
        description: "Treat phone number passed in 'query' field as local. Default\
          \ is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Local"
        x-optionalDataType: "Int32"
      - name: "country"
        in: "query"
        description: "2-letter ISO country code for local phone numbers, used when\
          \ 'local' is set to true. Default is account country"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Found contacts have been returned with success"
          schema:
            $ref: "#/definitions/SearchContactsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchContacts method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$shared\
          \ = 0;\n$ids = \"sampleValue\";\n$listId = 1;\n$includeBlocked = 1;\n$query\
          \ = \"sampleValue\";\n$local = 0;\n$country = \"sampleValue\";\n$orderBy\
          \ = \"id\";\n$direction = \"desc\";\n\ntry {\n    // SearchContactsPaginatedResponse\
          \ class object\n    $result = $api->searchContacts($page, $limit, $shared,\
          \ $ids, $listId, $includeBlocked, $query, $local, $country, $orderBy, $direction);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->searchContacts: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchContacts\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        int shared = 0;\n        String ids = \"\
          sampleValue\";\n        int listId = 1;\n        int includeBlocked = 1;\n\
          \        String query = \"sampleValue\";\n        int local = 0;\n     \
          \   String country = \"sampleValue\";\n        String orderBy = \"id\";\n\
          \        String direction = \"desc\";\n\n        try {\n            // SearchContactsPaginatedResponse\
          \ class object\n            SearchContactsPaginatedResponse obj = apiInstance.searchContacts(page,\
          \ limit, shared, ids, listId, includeBlocked, query, local, country, orderBy,\
          \ direction);\n            // ...\n        } catch (ApiException e) {\n\
          \            System.err.println(\"Exception when calling searchContacts\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    shared:\
          \ 0,\n    ids: \"sampleValue\",\n    listId: 1,\n    includeBlocked: 1,\n\
          \    query: \"sampleValue\",\n    local: 0,\n    country: \"sampleValue\"\
          ,\n    orderBy: \"id\",\n    direction: \"desc\",\n}\n\napi.searchContacts().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  shared: 0,\n  ids: 'sampleValue',\n  list_id:\
          \ 1,\n  include_blocked: 1,\n  query: 'sampleValue',\n  local: 0,\n  country:\
          \ 'sampleValue',\n  order_by: 'id',\n  direction: 'desc',\n}\n\nbegin\n\
          \    # SearchContactsPaginatedResponse object\n    result = api.search_contacts(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->search_contacts: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchContacts method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            int shared = 0;\n            string ids = \"sampleValue\"\
          ;\n            int listId = 1;\n            int includeBlocked = 1;\n  \
          \          string query = \"sampleValue\";\n            int local = 0;\n\
          \            string country = \"sampleValue\";\n            string orderBy\
          \ = \"id\";\n            string direction = \"desc\";\n\n            try\
          \ {\n                // SearchContactsPaginatedResponse class object\n \
          \               var result = apiInstance.SearchContacts(page, limit, shared,\
          \ ids, listId, includeBlocked, query, local, country, orderBy, direction);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling searchContacts: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchContacts method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim shared As Integer = 0\n        Dim ids As\
          \ String = \"sampleValue\"\n        Dim listId As Integer = 1\n        Dim\
          \ includeBlocked As Integer = 1\n        Dim query As String = \"sampleValue\"\
          \n        Dim local As Integer = 0\n        Dim country As String = \"sampleValue\"\
          \n        Dim orderBy As String = \"id\"\n        Dim direction As String\
          \ = \"desc\"\n\n        Try\n            ' SearchContactsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.SearchContacts(page,\
          \ limit, shared, ids, listId, includeBlocked, query, local, country, orderBy,\
          \ direction)\n            ' ...\n        Catch e As Exception\n        \
          \    Console.WriteLine(\"Exception when calling searchContacts: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchContactsOpts{\n   \
          \     // Optional parameters\n        Page: optional.NewInt32(1),\n    \
          \    Limit: optional.NewInt32(10),\n        Shared: optional.NewInt32(0),\n\
          \        Ids: optional.NewString(\"sampleValue\"),\n        ListId: optional.NewInt32(1),\n\
          \        IncludeBlocked: optional.NewInt32(1),\n        Query: optional.NewString(\"\
          sampleValue\"),\n        Local: optional.NewInt32(0),\n        Country:\
          \ optional.NewString(\"sampleValue\"),\n        OrderBy: optional.NewString(\"\
          id\"),\n        Direction: optional.NewString(\"desc\"),\n    }\n\n    //\
          \ tm.SearchContactsPaginatedResponse struct\n    result, _, err := client.TextMagicApi.SearchContacts(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    int shared = 0;\n    std::string ids\
          \ = \"sampleValue\";\n    int listId = 1;\n    int includeBlocked = 1;\n\
          \    std::string query = \"sampleValue\";\n    int local = 0;\n    std::string\
          \ country = \"sampleValue\";\n    std::string orderBy = \"id\";\n    std::string\
          \ direction = \"desc\";\n\n    try {\n        pplx::task<std::shared_ptr<SearchContactsPaginatedResponse>>\
          \ result = api.searchContacts(page, limit, shared, ids, listId, includeBlocked,\
          \ query, local, country, orderBy, direction);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"searchContacts() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nshared = 0\nids = \"\
          sampleValue\"\nlist_id = 1\ninclude_blocked = 1\nquery = \"sampleValue\"\
          \nlocal = 0\ncountry = \"sampleValue\"\norder_by = \"id\"\ndirection = \"\
          desc\"\n\ntry:\n    # SearchContactsPaginatedResponse object\n    result\
          \ = api_instance.search_contacts(page=page, limit=limit, shared=shared,\
          \ ids=ids, list_id=list_id, include_blocked=include_blocked, query=query,\
          \ local=local, country=country, order_by=order_by, direction=direction)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->search_contacts: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $shared\
          \ = 0;\nmy $ids = 'sampleValue';\nmy $listId = 1;\nmy $includeBlocked =\
          \ 1;\nmy $query = 'sampleValue';\nmy $local = 0;\nmy $country = 'sampleValue';\n\
          my $orderBy = 'id';\nmy $direction = 'desc';\n\neval {\n    # SearchContactsPaginatedResponse\
          \ object\n    my $result = $api_instance->search_contacts(page => $page,\
          \ limit => $limit, shared => $shared, ids => $ids, listId => $listId, includeBlocked\
          \ => $includeBlocked, query => $query, local => $local, country => $country,\
          \ orderBy => $orderBy, direction => $direction);\n    # ...\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->search_contacts: $@\\\
          n\";\n}"
  /api/v2/contacts/phone/{phone}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single contact by phone number."
      description: ""
      operationId: "getContactByPhone"
      parameters:
      - name: "phone"
        in: "path"
        required: true
        type: "string"
        default: "+23058300573"
        x-exportParamName: "Phone"
      responses:
        200:
          description: "Contact data has been returned with success"
          schema:
            $ref: "#/definitions/Contact"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$phone = \"+23058300573\";\n\ntry {\n    // Contact class object\n\
          \    $result = $api->getContactByPhone($phone);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getContactByPhone:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String phone = \"+23058300573\";\n\n        try {\n          \
          \  // Contact class object\n            Contact obj = apiInstance.getContactByPhone(phone);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getContactByPhone\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ phone = \"+23058300573\";\n\napi.getContactByPhone(phone).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nphone = '+23058300573'\n\nbegin\n\
          \    # Contact object\n    result = api.get_contact_by_phone(phone)\n  \
          \  # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_contact_by_phone: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ phone = \"+23058300573\";\n\n            try {\n                // Contact\
          \ class object\n                var result = apiInstance.GetContactByPhone(phone);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getContactByPhone: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim phone As\
          \ String = \"+23058300573\"\n\n        Try\n            ' Contact class\
          \ object\n            Dim result = apiInstance.GetContactByPhone(phone)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getContactByPhone: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var phone string = \"\
          +23058300573\"\n\n    // tm.Contact struct\n    result, _, err := client.TextMagicApi.GetContactByPhone(auth,\
          \ phone)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string phone = \"+23058300573\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<Contact>> result = api.getContactByPhone(phone);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getContactByPhone()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nphone\
          \ = \"+23058300573\"\n\ntry:\n    # Contact object\n    result = api_instance.get_contact_by_phone(phone=phone)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_contact_by_phone: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $phone\
          \ = '+23058300573';\n\neval {\n    # Contact object\n    my $result = $api_instance->get_contact_by_phone(phone\
          \ => $phone);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_contact_by_phone: $@\\n\";\n}"
  /api/v2/contacts:
    get:
      tags:
      - "TextMagic"
      summary: "Get all user contacts."
      description: ""
      operationId: "getContacts"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "shared"
        in: "query"
        description: "Should shared contacts to be included"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Shared"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Requested contacts have been returned with success"
          schema:
            $ref: "#/definitions/GetContactsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getContacts method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$shared\
          \ = 0;\n$orderBy = \"id\";\n$direction = \"desc\";\n\ntry {\n    // GetContactsPaginatedResponse\
          \ class object\n    $result = $api->getContacts($page, $limit, $shared,\
          \ $orderBy, $direction);\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getContacts: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getContacts method\
          \ below, default values will be used\n        int page = 1;\n        int\
          \ limit = 10;\n        int shared = 0;\n        String orderBy = \"id\"\
          ;\n        String direction = \"desc\";\n\n        try {\n            //\
          \ GetContactsPaginatedResponse class object\n            GetContactsPaginatedResponse\
          \ obj = apiInstance.getContacts(page, limit, shared, orderBy, direction);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getContacts\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    shared:\
          \ 0,\n    orderBy: \"id\",\n    direction: \"desc\",\n}\n\napi.getContacts().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  shared: 0,\n  order_by: 'id',\n  direction:\
          \ 'desc',\n}\n\nbegin\n    # GetContactsPaginatedResponse object\n    result\
          \ = api.get_contacts(params)\n    # ...\nrescue TextMagic::ApiError => e\n\
          \    puts \"Exception when calling TextMagicApi->get_contacts: #{e}\"\n\
          end"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getContacts method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            int shared = 0;\n            string orderBy = \"id\"\
          ;\n            string direction = \"desc\";\n\n            try {\n     \
          \           // GetContactsPaginatedResponse class object\n             \
          \   var result = apiInstance.GetContacts(page, limit, shared, orderBy, direction);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getContacts: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getContacts method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim shared As Integer = 0\n        Dim orderBy\
          \ As String = \"id\"\n        Dim direction As String = \"desc\"\n\n   \
          \     Try\n            ' GetContactsPaginatedResponse class object\n   \
          \         Dim result = apiInstance.GetContacts(page, limit, shared, orderBy,\
          \ direction)\n            ' ...\n        Catch e As Exception\n        \
          \    Console.WriteLine(\"Exception when calling getContacts: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetContactsOpts{\n      \
          \  // Optional parameters\n        Page: optional.NewInt32(1),\n       \
          \ Limit: optional.NewInt32(10),\n        Shared: optional.NewInt32(0),\n\
          \        OrderBy: optional.NewString(\"id\"),\n        Direction: optional.NewString(\"\
          desc\"),\n    }\n\n    // tm.GetContactsPaginatedResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetContacts(auth, &opts)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\\
          n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    int shared = 0;\n    std::string orderBy\
          \ = \"id\";\n    std::string direction = \"desc\";\n\n    try {\n      \
          \  pplx::task<std::shared_ptr<GetContactsPaginatedResponse>> result = api.getContacts(page,\
          \ limit, shared, orderBy, direction);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getContacts() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nshared = 0\norder_by\
          \ = \"id\"\ndirection = \"desc\"\n\ntry:\n    # GetContactsPaginatedResponse\
          \ object\n    result = api_instance.get_contacts(page=page, limit=limit,\
          \ shared=shared, order_by=order_by, direction=direction)\n    # ...\nexcept\
          \ ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_contacts:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $shared\
          \ = 0;\nmy $orderBy = 'id';\nmy $direction = 'desc';\n\neval {\n    # GetContactsPaginatedResponse\
          \ object\n    my $result = $api_instance->get_contacts(page => $page, limit\
          \ => $limit, shared => $shared, orderBy => $orderBy, direction => $direction);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_contacts:\
          \ $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a new contact from the submitted data."
      description: ""
      operationId: "createContact"
      parameters:
      - in: "body"
        name: "CreateContactInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateContactInputObject"
        x-exportParamName: "CreateContactInputObject"
      responses:
        201:
          description: "Contact has been created with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateContactInputObject();\n\
          \n// Required parameters\n$input->setPhone(\"+23058300573\");\n$input->setLists(\"\
          1,2,3,4\");\n\n// Optional parameters, you can skip these setters calls\n\
          $input->setFirstName(\"Example first name\");\n$input->setLastName(\"Example\
          \ first name\");\n$input->setEmail(\"test@test.com\");\n$input->setCompanyName(\"\
          My pretty company\");\n$input->setFavorited(false);\n$input->setBlocked(false);\n\
          $input->setType(1);\n$input->setLocal(0);\n$input->setCountry(\"US\");\n\
          \ntry {\n    // ResourceLinkResponse class object\n    $result = $api->createContact($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->createContact: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateContactInputObject input = new CreateContactInputObject();\n\
          \n        // Required parameters\n        input.setPhone(\"+23058300573\"\
          );\n        input.setLists(\"1,2,3,4\");\n\n        // Optional parameters,\
          \ you can skip these setters calls\n        input.setFirstName(\"Example\
          \ first name\");\n        input.setLastName(\"Example first name\");\n \
          \       input.setEmail(\"test@test.com\");\n        input.setCompanyName(\"\
          My pretty company\");\n        input.setFavorited(false);\n        input.setBlocked(false);\n\
          \        input.setType(1);\n        input.setLocal(0);\n        input.setCountry(\"\
          US\");\n\n        try {\n            // ResourceLinkResponse class object\n\
          \            ResourceLinkResponse obj = apiInstance.createContact(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling createContact\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    phone: \"+23058300573\",\n    lists: \"1,2,3,4\",\n   \
          \ // Optional parameters\n    firstName: \"Example first name\",\n    lastName:\
          \ \"Example first name\",\n    email: \"test@test.com\",\n    companyName:\
          \ \"My pretty company\",\n    favorited: false,\n    blocked: false,\n \
          \   type: 1,\n    local: 0,\n    country: \"US\",\n}\n\napi.createContact(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateContactInputObject.new\n\
          \n# Required parameters\nobj.phone = \"+23058300573\"\nobj.lists = \"1,2,3,4\"\
          \n# Optional parameters, you can skip them\nobj.first_name = \"Example first\
          \ name\"\nobj.last_name = \"Example first name\"\nobj.email = \"test@test.com\"\
          \nobj.company_name = \"My pretty company\"\nobj.favorited = false\nobj.blocked\
          \ = false\nobj.type = 1\nobj.local = 0\nobj.country = \"US\"\n\nbegin\n\
          \    # ResourceLinkResponse object\n    result = api.create_contact(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->create_contact: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateContactInputObject();\n\n            // Required parameters\n\
          \            obj.Phone = \"+23058300573\";\n            obj.Lists = \"1,2,3,4\"\
          ;\n\n            // Optional parameters, you can skip these setters calls\n\
          \            obj.FirstName = \"Example first name\";\n            obj.LastName\
          \ = \"Example first name\";\n            obj.Email = \"test@test.com\";\n\
          \            obj.CompanyName = \"My pretty company\";\n            obj.Favorited\
          \ = false;\n            obj.Blocked = false;\n            obj.Type = 1;\n\
          \            obj.Local = 0;\n            obj.Country = \"US\";\n\n     \
          \       try {\n                // ResourceLinkResponse class object\n  \
          \              var result = apiInstance.CreateContact(obj);\n          \
          \      // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling createContact: \"+e.Message);\n            }\n  \
          \      }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateContactInputObject With {\n            .FirstName = \"Example first\
          \ name\",\n            .LastName = \"Example first name\",\n           \
          \ .Phone = \"+23058300573\",\n            .Email = \"test@test.com\",\n\
          \            .CompanyName = \"My pretty company\",\n            .Lists =\
          \ \"1,2,3,4\",\n            .Favorited = false,\n            .Blocked =\
          \ false,\n            .Type = 1,\n            .Local = 0,\n            .Country\
          \ = \"US\"\n        }\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.CreateContact(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling createContact: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Phone: \"+23058300573\",\n    \
          \    Lists: \"1,2,3,4\",\n        // Optional parameters, you can skip them\n\
          \        FirstName: \"Example first name\",\n        LastName: \"Example\
          \ first name\",\n        Email: \"test@test.com\",\n        CompanyName:\
          \ \"My pretty company\",\n        Favorited: false,\n        Blocked: false,\n\
          \        Type: 1,\n        Local: 0,\n        Country: \"US\",\n    }\n\n\
          \    // tm.ResourceLinkResponse struct\n    result, _, err := client.TextMagicApi.CreateContact(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateContactInputObject>\
          \ input(new CreateContactInputObject);\n    // Required parameters\n   \
          \ input->setPhone(\"+23058300573\");\n    input->setLists(\"1,2,3,4\");\n\
          \    // Optional parameters, you can skip them\n    input->setFirstName(\"\
          Example first name\");\n    input->setLastName(\"Example first name\");\n\
          \    input->setEmail(\"test@test.com\");\n    input->setCompanyName(\"My\
          \ pretty company\");\n    input->setFavorited(false);\n    input->setBlocked(false);\n\
          \    input->setType(1);\n    input->setLocal(0);\n    input->setCountry(\"\
          US\");\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.createContact(input);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"createContact() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateContactInputObject()\n\n# Required parameters\ninput.phone\
          \ = \"+23058300573\"\ninput.lists = \"1,2,3,4\"\n# Optional parameters,\
          \ you can skip them\ninput.first_name = \"Example first name\"\ninput.last_name\
          \ = \"Example first name\"\ninput.email = \"test@test.com\"\ninput.company_name\
          \ = \"My pretty company\"\ninput.favorited = false\ninput.blocked = false\n\
          input.type = 1\ninput.local = 0\ninput.country = \"US\"\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.create_contact(create_contact_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->create_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateContactInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateContactInputObject->new(\n\
          \    # Required parameters\n    phone => '+23058300573',\n    lists => '1,2,3,4',\n\
          \    # Optional parameters, you can skip them\n    firstName => 'Example\
          \ first name',\n    lastName => 'Example first name',\n    email => 'test@test.com',\n\
          \    companyName => 'My pretty company',\n    favorited => 0,\n    blocked\
          \ => 0,\n    type => 1,\n    local => 0,\n    country => 'US',\n);\n\neval\
          \ {\n    # ResourceLinkResponse object\n    my $result = $api_instance->create_contact(create_contact_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->create_contact: $@\\n\";\n}"
  /api/v2/contacts/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single contact."
      description: ""
      operationId: "getContact"
      parameters:
      - name: "id"
        in: "path"
        description: "The contact id"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Contact data received with success"
          schema:
            $ref: "#/definitions/Contact"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // Contact class object\n    $result = $api->getContact($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getContact: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // Contact class object\n\
          \            Contact obj = apiInstance.getContact(id);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getContact\");\n            e.printStackTrace();\n      \
          \  }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getContact(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # Contact\
          \ object\n    result = api.get_contact(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_contact: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // Contact class object\n \
          \               var result = apiInstance.GetContact(id);\n             \
          \   // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getContact: \"+e.Message);\n            }\n     \
          \   }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' Contact class object\n            Dim\
          \ result = apiInstance.GetContact(id)\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ getContact: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.Contact struct\n    result, _, err := client.TextMagicApi.GetContact(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<Contact>> result = api.getContact(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getContact()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # Contact object\n    result = api_instance.get_contact(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # Contact object\n    my $result = $api_instance->get_contact(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_contact: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update existing contact."
      description: ""
      operationId: "updateContact"
      parameters:
      - in: "body"
        name: "UpdateContactInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateContactInputObject"
        x-exportParamName: "UpdateContactInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Contact has been created with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateContactInputObject();\n\
          \n// Required parameters\n$input->setPhone(\"+23058300573\");\n$input->setLists(\"\
          1,2,3,4\");\n\n// Optional parameters, you can skip these setters calls\n\
          $input->setFirstName(\"Example first name\");\n$input->setLastName(\"Example\
          \ first name\");\n$input->setEmail(\"test@test.com\");\n$input->setCompanyName(\"\
          My pretty company\");\n$input->setFavorited(false);\n$input->setBlocked(false);\n\
          $input->setType(1);\n$input->setLocal(0);\n$input->setCountry(\"US\");\n\
          $id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result\
          \ = $api->updateContact($input$id);\n    // ...\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->updateContact: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateContactInputObject input = new UpdateContactInputObject();\n\
          \n        // Required parameters\n        input.setPhone(\"+23058300573\"\
          );\n        input.setLists(\"1,2,3,4\");\n\n        // Optional parameters,\
          \ you can skip these setters calls\n        input.setFirstName(\"Example\
          \ first name\");\n        input.setLastName(\"Example first name\");\n \
          \       input.setEmail(\"test@test.com\");\n        input.setCompanyName(\"\
          My pretty company\");\n        input.setFavorited(false);\n        input.setBlocked(false);\n\
          \        input.setType(1);\n        input.setLocal(0);\n        input.setCountry(\"\
          US\");\n        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.updateContact(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling updateContact\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    phone: \"+23058300573\",\n    lists: \"1,2,3,4\",\n   \
          \ // Optional parameters\n    firstName: \"Example first name\",\n    lastName:\
          \ \"Example first name\",\n    email: \"test@test.com\",\n    companyName:\
          \ \"My pretty company\",\n    favorited: false,\n    blocked: false,\n \
          \   type: 1,\n    local: 0,\n    country: \"US\",\n}\nconst id = 1;\n\n\
          api.updateContact(input, id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateContactInputObject.new\n\
          \n# Required parameters\nobj.phone = \"+23058300573\"\nobj.lists = \"1,2,3,4\"\
          \n# Optional parameters, you can skip them\nobj.first_name = \"Example first\
          \ name\"\nobj.last_name = \"Example first name\"\nobj.email = \"test@test.com\"\
          \nobj.company_name = \"My pretty company\"\nobj.favorited = false\nobj.blocked\
          \ = false\nobj.type = 1\nobj.local = 0\nobj.country = \"US\"\nid = 1\n\n\
          begin\n    # ResourceLinkResponse object\n    result = api.update_contact(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->update_contact: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateContactInputObject();\n\n            // Required parameters\n\
          \            obj.Phone = \"+23058300573\";\n            obj.Lists = \"1,2,3,4\"\
          ;\n\n            // Optional parameters, you can skip these setters calls\n\
          \            obj.FirstName = \"Example first name\";\n            obj.LastName\
          \ = \"Example first name\";\n            obj.Email = \"test@test.com\";\n\
          \            obj.CompanyName = \"My pretty company\";\n            obj.Favorited\
          \ = false;\n            obj.Blocked = false;\n            obj.Type = 1;\n\
          \            obj.Local = 0;\n            obj.Country = \"US\";\n       \
          \     int id = 1;\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.UpdateContact(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling updateContact: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateContactInputObject With {\n            .FirstName = \"Example first\
          \ name\",\n            .LastName = \"Example first name\",\n           \
          \ .Phone = \"+23058300573\",\n            .Email = \"test@test.com\",\n\
          \            .CompanyName = \"My pretty company\",\n            .Lists =\
          \ \"1,2,3,4\",\n            .Favorited = false,\n            .Blocked =\
          \ false,\n            .Type = 1,\n            .Local = 0,\n            .Country\
          \ = \"US\"\n        }\n        Dim id As Integer = 1\n\n        Try\n  \
          \          ' ResourceLinkResponse class object\n            Dim result =\
          \ apiInstance.UpdateContact(objid)\n            ' ...\n        Catch e As\
          \ Exception\n            Console.WriteLine(\"Exception when calling updateContact:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Phone: \"+23058300573\",\n    \
          \    Lists: \"1,2,3,4\",\n        // Optional parameters, you can skip them\n\
          \        FirstName: \"Example first name\",\n        LastName: \"Example\
          \ first name\",\n        Email: \"test@test.com\",\n        CompanyName:\
          \ \"My pretty company\",\n        Favorited: false,\n        Blocked: false,\n\
          \        Type: 1,\n        Local: 0,\n        Country: \"US\",\n    }\n\
          \    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.UpdateContact(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateContactInputObject>\
          \ input(new UpdateContactInputObject);\n    // Required parameters\n   \
          \ input->setPhone(\"+23058300573\");\n    input->setLists(\"1,2,3,4\");\n\
          \    // Optional parameters, you can skip them\n    input->setFirstName(\"\
          Example first name\");\n    input->setLastName(\"Example first name\");\n\
          \    input->setEmail(\"test@test.com\");\n    input->setCompanyName(\"My\
          \ pretty company\");\n    input->setFavorited(false);\n    input->setBlocked(false);\n\
          \    input->setType(1);\n    input->setLocal(0);\n    input->setCountry(\"\
          US\");\n\n    int id = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.updateContact(input, id);\n        result.wait();\n     \
          \   // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateContact() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateContactInputObject()\n\n# Required parameters\ninput.phone\
          \ = \"+23058300573\"\ninput.lists = \"1,2,3,4\"\n# Optional parameters,\
          \ you can skip them\ninput.first_name = \"Example first name\"\ninput.last_name\
          \ = \"Example first name\"\ninput.email = \"test@test.com\"\ninput.company_name\
          \ = \"My pretty company\"\ninput.favorited = false\ninput.blocked = false\n\
          input.type = 1\ninput.local = 0\ninput.country = \"US\"\nid = 1\n\ntry:\n\
          \    # ResourceLinkResponse object\n    result = api_instance.update_contact(update_contact_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateContactInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateContactInputObject->new(\n\
          \    # Required parameters\n    phone => '+23058300573',\n    lists => '1,2,3,4',\n\
          \    # Optional parameters, you can skip them\n    firstName => 'Example\
          \ first name',\n    lastName => 'Example first name',\n    email => 'test@test.com',\n\
          \    companyName => 'My pretty company',\n    favorited => 0,\n    blocked\
          \ => 0,\n    type => 1,\n    local => 0,\n    country => 'US',\n);\nmy $id\
          \ = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->update_contact(update_contact_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_contact: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a single contact."
      description: ""
      operationId: "deleteContact"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to delete contact shared to you"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteContact($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteContact: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteContact(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteContact\");\n            e.printStackTrace();\n   \
          \     }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteContact(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_contact(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_contact:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteContact(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteContact: \"+e.Message);\n            }\n  \
          \      }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteContact(id)\n      \
          \      ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteContact: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteContact(auth, id)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteContact(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteContact()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_contact(id=id)\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->delete_contact: %s\\n\"\
          \ % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_contact(id => $id);\n};\n\nif ($@) {\n\
          \    warn \"Exception when calling TextMagicApi->delete_contact: $@\\n\"\
          ;\n}"
  /api/v2/contact/all:
    delete:
      tags:
      - "TextMagic"
      summary: "Delete all contacts."
      description: ""
      operationId: "deleteAllContacts"
      produces: []
      parameters: []
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    $api->deleteAllContacts();\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->deleteAllContacts: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            apiInstance.deleteAllContacts();\n      \
          \  } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteAllContacts\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.deleteAllContacts().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    api.delete_all_contacts()\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_all_contacts:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                apiInstance.DeleteAllContacts();\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ deleteAllContacts: \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        apiInstance.DeleteAllContacts()\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ deleteAllContacts: \" + e.Message)\n        End Try\n    End Sub\nEnd\
          \ Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    client.TextMagicApi.DeleteAllContacts(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task result\
          \ = api.deleteAllContacts();\n        result.wait();\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"deleteAllContacts() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    api_instance.delete_all_contacts()\nexcept ApiException as e:\n   \
          \ print(\"Exception when calling TextMagicApi->delete_all_contacts: %s\\\
          n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    $api_instance->delete_all_contacts();\n};\n\nif ($@) {\n    warn \"\
          Exception when calling TextMagicApi->delete_all_contacts: $@\\n\";\n}"
  /api/v2/contacts/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete contact by given ID(s) or delete all contacts."
      description: ""
      operationId: "deleteContactsByIds"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteContactsByIdsInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteContactsByIdsInputObject"
        x-exportParamName: "DeleteContactsByIdsInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteContactsByIdsInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n\ntry {\n    $api->deleteContactsByIds($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteContactsByIds:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteContactsByIdsInputObject input = new DeleteContactsByIdsInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n\n       \
          \ try {\n            apiInstance.deleteContactsByIds(input);\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling deleteContactsByIds\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          }\n\napi.deleteContactsByIds(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteContactsByIdsInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\n\nbegin\n    api.delete_contacts_by_ids(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_contacts_by_ids:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteContactsByIdsInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n\n            try {\n                apiInstance.DeleteContactsByIds(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteContactsByIds: \"+e.Message);\n           \
          \ }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteContactsByIdsInputObject With {\n            .Ids = \"1,2,3\",\n\
          \            .All = false\n        }\n\n        Try\n            apiInstance.DeleteContactsByIds(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteContactsByIds: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n    }\n\n    client.TextMagicApi.DeleteContactsByIds(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteContactsByIdsInputObject>\
          \ input(new DeleteContactsByIdsInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \n    try {\n        pplx::task result = api.deleteContactsByIds(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"deleteContactsByIds() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteContactsByIdsInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.ids = \"1,2,3\"\ninput.all = false\n\ntry:\n    api_instance.delete_contacts_by_ids(delete_contacts_by_ids_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_contacts_by_ids:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteContactsByIdsInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteContactsByIdsInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->delete_contacts_by_ids(delete_contacts_by_ids_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_contacts_by_ids:\
          \ $@\\n\";\n}"
  /api/v2/customfields:
    get:
      tags:
      - "TextMagic"
      summary: "Get all contact custom fields."
      description: ""
      operationId: "getCustomFields"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Requested custom fields have been returned with success"
          schema:
            $ref: "#/definitions/GetCustomFieldsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getCustomFields method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n\ntry {\n\
          \    // GetCustomFieldsPaginatedResponse class object\n    $result = $api->getCustomFields($page,\
          \ $limit);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception when\
          \ calling TextMagicApi->getCustomFields: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getCustomFields\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // GetCustomFieldsPaginatedResponse\
          \ class object\n            GetCustomFieldsPaginatedResponse obj = apiInstance.getCustomFields(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getCustomFields\");\n\
          \            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getCustomFields().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetCustomFieldsPaginatedResponse\
          \ object\n    result = api.get_custom_fields(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_custom_fields:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getCustomFields method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // GetCustomFieldsPaginatedResponse\
          \ class object\n                var result = apiInstance.GetCustomFields(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getCustomFields:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getCustomFields method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' GetCustomFieldsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetCustomFields(page,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getCustomFields: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetCustomFieldsOpts{\n  \
          \      // Optional parameters\n        Page: optional.NewInt32(1),\n   \
          \     Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetCustomFieldsPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetCustomFields(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetCustomFieldsPaginatedResponse>>\
          \ result = api.getCustomFields(page, limit);\n        result.wait();\n \
          \       // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getCustomFields() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetCustomFieldsPaginatedResponse\
          \ object\n    result = api_instance.get_custom_fields(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_custom_fields: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetCustomFieldsPaginatedResponse object\n    my $result = $api_instance->get_custom_fields(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_custom_fields: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a new custom field from the submitted data."
      description: ""
      operationId: "createCustomField"
      parameters:
      - in: "body"
        name: "CreateCustomFieldInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateCustomFieldInputObject"
        x-exportParamName: "CreateCustomFieldInputObject"
      responses:
        201:
          description: "Contact has been created with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateCustomFieldInputObject();\n\
          \n// Required parameters\n$input->setName(\"Test custom field\");\n\ntry\
          \ {\n    // ResourceLinkResponse class object\n    $result = $api->createCustomField($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->createCustomField: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateCustomFieldInputObject input = new CreateCustomFieldInputObject();\n\
          \n        // Required parameters\n        input.setName(\"Test custom field\"\
          );\n\n        try {\n            // ResourceLinkResponse class object\n\
          \            ResourceLinkResponse obj = apiInstance.createCustomField(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling createCustomField\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"Test custom field\",\n}\n\napi.createCustomField(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateCustomFieldInputObject.new\n\
          \n# Required parameters\nobj.name = \"Test custom field\"\n\nbegin\n   \
          \ # ResourceLinkResponse object\n    result = api.create_custom_field(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->create_custom_field: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateCustomFieldInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"Test custom field\";\n\n            try {\n  \
          \              // ResourceLinkResponse class object\n                var\
          \ result = apiInstance.CreateCustomField(obj);\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling createCustomField: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateCustomFieldInputObject With {\n            .Name = \"Test custom\
          \ field\"\n        }\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.CreateCustomField(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling createCustomField: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"Test custom field\",\n\
          \    }\n\n    // tm.ResourceLinkResponse struct\n    result, _, err := client.TextMagicApi.CreateCustomField(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateCustomFieldInputObject>\
          \ input(new CreateCustomFieldInputObject);\n    // Required parameters\n\
          \    input->setName(\"Test custom field\");\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.createCustomField(input);\n        result.wait();\n     \
          \   // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"createCustomField() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateCustomFieldInputObject()\n\n# Required parameters\n\
          input.name = \"Test custom field\"\n\ntry:\n    # ResourceLinkResponse object\n\
          \    result = api_instance.create_custom_field(create_custom_field_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->create_custom_field: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateCustomFieldInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateCustomFieldInputObject->new(\n\
          \    # Required parameters\n    name => 'Test custom field',\n);\n\neval\
          \ {\n    # ResourceLinkResponse object\n    my $result = $api_instance->create_custom_field(create_custom_field_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->create_custom_field: $@\\n\";\n}"
  /api/v2/customfields/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single custom field."
      description: ""
      operationId: "getCustomField"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/UserCustomField"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // UserCustomField class object\n    $result\
          \ = $api->getCustomField($id);\n    // ...\n} catch (Exception $e) {\n \
          \   echo 'Exception when calling TextMagicApi->getCustomField: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // UserCustomField class\
          \ object\n            UserCustomField obj = apiInstance.getCustomField(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getCustomField\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getCustomField(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # UserCustomField\
          \ object\n    result = api.get_custom_field(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_custom_field:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // UserCustomField class object\n\
          \                var result = apiInstance.GetCustomField(id);\n        \
          \        // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getCustomField: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' UserCustomField class object\n     \
          \       Dim result = apiInstance.GetCustomField(id)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getCustomField: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.UserCustomField struct\n    result, _, err := client.TextMagicApi.GetCustomField(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<UserCustomField>> result = api.getCustomField(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getCustomField()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # UserCustomField object\n    result = api_instance.get_custom_field(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_custom_field: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # UserCustomField object\n    my $result = $api_instance->get_custom_field(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_custom_field: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update existing custom field."
      description: ""
      operationId: "updateCustomField"
      parameters:
      - in: "body"
        name: "UpdateCustomFieldInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateCustomFieldInputObject"
        x-exportParamName: "UpdateCustomFieldInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when updated with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateCustomFieldInputObject();\n\
          \n// Required parameters\n$input->setName(\"Test custom field\");\n$id =\
          \ 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result = $api->updateCustomField($input$id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->updateCustomField: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateCustomFieldInputObject input = new UpdateCustomFieldInputObject();\n\
          \n        // Required parameters\n        input.setName(\"Test custom field\"\
          );\n        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.updateCustomField(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling updateCustomField\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"Test custom field\",\n}\nconst id = 1;\n\napi.updateCustomField(input,\
          \ id).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateCustomFieldInputObject.new\n\
          \n# Required parameters\nobj.name = \"Test custom field\"\nid = 1\n\nbegin\n\
          \    # ResourceLinkResponse object\n    result = api.update_custom_field(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->update_custom_field: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateCustomFieldInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"Test custom field\";\n            int id = 1;\n\
          \n            try {\n                // ResourceLinkResponse class object\n\
          \                var result = apiInstance.UpdateCustomField(objid);\n  \
          \              // ...\n            } catch (Exception e) {\n           \
          \     Console.WriteLine(\"Exception when calling updateCustomField: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateCustomFieldInputObject With {\n            .Name = \"Test custom\
          \ field\"\n        }\n        Dim id As Integer = 1\n\n        Try\n   \
          \         ' ResourceLinkResponse class object\n            Dim result =\
          \ apiInstance.UpdateCustomField(objid)\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ updateCustomField: \" + e.Message)\n        End Try\n    End Sub\nEnd\
          \ Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"Test custom field\",\n\
          \    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.UpdateCustomField(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateCustomFieldInputObject>\
          \ input(new UpdateCustomFieldInputObject);\n    // Required parameters\n\
          \    input->setName(\"Test custom field\");\n\n    int id = 1;\n\n    try\
          \ {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>> result =\
          \ api.updateCustomField(input, id);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateCustomField() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateCustomFieldInputObject()\n\n# Required parameters\n\
          input.name = \"Test custom field\"\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.update_custom_field(update_custom_field_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_custom_field: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateCustomFieldInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateCustomFieldInputObject->new(\n\
          \    # Required parameters\n    name => 'Test custom field',\n);\nmy $id\
          \ = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->update_custom_field(update_custom_field_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_custom_field: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a single custom field."
      description: ""
      operationId: "deleteCustomField"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          description: "Returned when deleted with success"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteCustomField($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteCustomField:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteCustomField(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteCustomField\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteCustomField(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_custom_field(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_custom_field:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteCustomField(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteCustomField: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteCustomField(id)\n  \
          \          ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteCustomField: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteCustomField(auth, id)\n\n    if err != nil\
          \ {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteCustomField(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteCustomField()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_custom_field(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_custom_field:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_custom_field(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->delete_custom_field:\
          \ $@\\n\";\n}"
  /api/v2/customfields/{id}/update:
    put:
      tags:
      - "TextMagic"
      summary: "Update contact's custom field value."
      description: ""
      operationId: "updateCustomFieldValue"
      parameters:
      - in: "body"
        name: "UpdateCustomFieldValueInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateCustomFieldValueInputObject"
        x-exportParamName: "UpdateCustomFieldValueInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        default: "1"
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when updated with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateCustomFieldValueInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setContactId(5);\n\
          $input->setValue(\"Test custom field value\");\n$id = \"1\";\n\ntry {\n\
          \    // ResourceLinkResponse class object\n    $result = $api->updateCustomFieldValue($input$id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->updateCustomFieldValue: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateCustomFieldValueInputObject input = new UpdateCustomFieldValueInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setContactId(5);\n        input.setValue(\"Test custom field\
          \ value\");\n        String id = \"1\";\n\n        try {\n            //\
          \ ResourceLinkResponse class object\n            ResourceLinkResponse obj\
          \ = apiInstance.updateCustomFieldValue(inputid);\n            // ...\n \
          \       } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling updateCustomFieldValue\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    contactId: 5,\n    value: \"\
          Test custom field value\",\n}\nconst id = \"1\";\n\napi.updateCustomFieldValue(input,\
          \ id).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateCustomFieldValueInputObject.new\n\
          # Optional parameters, you can skip them\nobj.contact_id = 5\nobj.value\
          \ = \"Test custom field value\"\nid = '1'\n\nbegin\n    # ResourceLinkResponse\
          \ object\n    result = api.update_custom_field_value(input, id)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->update_custom_field_value:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateCustomFieldValueInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.ContactId\
          \ = 5;\n            obj.Value = \"Test custom field value\";\n         \
          \   string id = \"1\";\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.UpdateCustomFieldValue(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling updateCustomFieldValue:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateCustomFieldValueInputObject With {\n            .ContactId = 5,\n\
          \            .Value = \"Test custom field value\"\n        }\n        Dim\
          \ id As String = \"1\"\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.UpdateCustomFieldValue(objid)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateCustomFieldValue: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        ContactId: 5,\n\
          \        Value: \"Test custom field value\",\n    }\n    // Required\n \
          \   var id string = \"1\"\n\n    // tm.ResourceLinkResponse struct\n   \
          \ result, _, err := client.TextMagicApi.UpdateCustomFieldValue(auth, input,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateCustomFieldValueInputObject>\
          \ input(new UpdateCustomFieldValueInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setContactId(5);\n    input->setValue(\"\
          Test custom field value\");\n\n    std::string id = \"1\";\n\n    try {\n\
          \        pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.updateCustomFieldValue(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"updateCustomFieldValue()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateCustomFieldValueInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.contact_id = 5\ninput.value = \"Test custom field\
          \ value\"\nid = \"1\"\n\ntry:\n    # ResourceLinkResponse object\n    result\
          \ = api_instance.update_custom_field_value(update_custom_field_value_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_custom_field_value: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateCustomFieldValueInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateCustomFieldValueInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    contactId => 5,\n   \
          \ value => 'Test custom field value',\n);\nmy $id = '1';\n\neval {\n   \
          \ # ResourceLinkResponse object\n    my $result = $api_instance->update_custom_field_value(update_custom_field_value_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_custom_field_value: $@\\n\";\n}"
  /api/v2/contacts/{id}/lists:
    get:
      tags:
      - "TextMagic"
      summary: "Return lists which contact belongs to."
      description: ""
      operationId: "getListsOfContact"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetListsOfContactPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n// Optional, you can pass them as null values to getListsOfContact\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\n\
          try {\n    // GetListsOfContactPaginatedResponse class object\n    $result\
          \ = $api->getListsOfContact($id, $page, $limit);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getListsOfContact:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n        // Optional, you can pass them as null values\
          \ to getListsOfContact method below, default values will be used\n     \
          \   int page = 1;\n        int limit = 10;\n\n        try {\n          \
          \  // GetListsOfContactPaginatedResponse class object\n            GetListsOfContactPaginatedResponse\
          \ obj = apiInstance.getListsOfContact(id, page, limit);\n            //\
          \ ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getListsOfContact\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\nparams = {\n// Optional parameters\n    page: 1,\n    limit:\
          \ 10,\n}\n\napi.getListsOfContact(id, ).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\nparams = {\n  # Optional\
          \ parameters\n  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetListsOfContactPaginatedResponse\
          \ object\n    result = api.get_lists_of_contact(id, params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_lists_of_contact:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n            // Optional, you can pass them as null values to getListsOfContact\
          \ method below, default values will be used\n            int page = 1;\n\
          \            int limit = 10;\n\n            try {\n                // GetListsOfContactPaginatedResponse\
          \ class object\n                var result = apiInstance.GetListsOfContact(id,\
          \ page, limit);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getListsOfContact:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n        ' Optional, you can pass them as null values to getListsOfContact\
          \ method below, default values will be used\n        Dim page As Integer\
          \ = 1\n        Dim limit As Integer = 10\n\n        Try\n            ' GetListsOfContactPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetListsOfContact(id,\
          \ page, limit)\n            ' ...\n        Catch e As Exception\n      \
          \      Console.WriteLine(\"Exception when calling getListsOfContact: \"\
          \ + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    opts := tm.GetListsOfContactOpts{\n        // Optional parameters\n\
          \        Page: optional.NewInt32(1),\n        Limit: optional.NewInt32(10),\n\
          \    }\n\n    // tm.GetListsOfContactPaginatedResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetListsOfContact(auth, id, &opts)\n\n \
          \   if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n    // Optional parameters.\
          \ Important: if you want to use default value then pass boost::none value\n\
          \    int page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetListsOfContactPaginatedResponse>>\
          \ result = api.getListsOfContact(id, page, limit);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getListsOfContact() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          # Optional params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n   \
          \ # GetListsOfContactPaginatedResponse object\n    result = api_instance.get_lists_of_contact(id=id,\
          \ page=page, limit=limit)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_lists_of_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          # Optional params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\n\
          eval {\n    # GetListsOfContactPaginatedResponse object\n    my $result\
          \ = $api_instance->get_lists_of_contact(id => $id, page => $page, limit\
          \ => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_lists_of_contact: $@\\n\";\n}"
  /api/v2/unsubscribers:
    get:
      tags:
      - "TextMagic"
      summary: "Get all contact have unsubscribed from your communication."
      description: ""
      operationId: "getUnsubscribers"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetUnsubscribersPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getUnsubscribers\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\n\
          try {\n    // GetUnsubscribersPaginatedResponse class object\n    $result\
          \ = $api->getUnsubscribers($page, $limit);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getUnsubscribers:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getUnsubscribers\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // GetUnsubscribersPaginatedResponse\
          \ class object\n            GetUnsubscribersPaginatedResponse obj = apiInstance.getUnsubscribers(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getUnsubscribers\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getUnsubscribers().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetUnsubscribersPaginatedResponse\
          \ object\n    result = api.get_unsubscribers(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_unsubscribers:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getUnsubscribers method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // GetUnsubscribersPaginatedResponse\
          \ class object\n                var result = apiInstance.GetUnsubscribers(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getUnsubscribers:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getUnsubscribers method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' GetUnsubscribersPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetUnsubscribers(page,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getUnsubscribers: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetUnsubscribersOpts{\n \
          \       // Optional parameters\n        Page: optional.NewInt32(1),\n  \
          \      Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetUnsubscribersPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetUnsubscribers(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetUnsubscribersPaginatedResponse>>\
          \ result = api.getUnsubscribers(page, limit);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getUnsubscribers() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetUnsubscribersPaginatedResponse\
          \ object\n    result = api_instance.get_unsubscribers(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_unsubscribers: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetUnsubscribersPaginatedResponse object\n    my $result = $api_instance->get_unsubscribers(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_unsubscribers: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Unsubscribe contact from your communication by phone number."
      description: ""
      operationId: "unsubscribeContact"
      parameters:
      - in: "body"
        name: "UnsubscribeContactInputObject"
        required: true
        schema:
          $ref: "#/definitions/UnsubscribeContactInputObject"
        x-exportParamName: "UnsubscribeContactInputObject"
      responses:
        201:
          description: "Returned when updated with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UnsubscribeContactInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setPhone(\"\
          +14153288240\");\n$input->setBlockIncoming(0);\n\ntry {\n    // ResourceLinkResponse\
          \ class object\n    $result = $api->unsubscribeContact($input);\n    //\
          \ ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->unsubscribeContact:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UnsubscribeContactInputObject input = new UnsubscribeContactInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setPhone(\"+14153288240\");\n        input.setBlockIncoming(0);\n\
          \n        try {\n            // ResourceLinkResponse class object\n    \
          \        ResourceLinkResponse obj = apiInstance.unsubscribeContact(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling unsubscribeContact\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    phone: \"+14153288240\",\n\
          \    blockIncoming: 0,\n}\n\napi.unsubscribeContact(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UnsubscribeContactInputObject.new\n\
          # Optional parameters, you can skip them\nobj.phone = \"+14153288240\"\n\
          obj.block_incoming = 0\n\nbegin\n    # ResourceLinkResponse object\n   \
          \ result = api.unsubscribe_contact(input)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->unsubscribe_contact:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UnsubscribeContactInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Phone = \"+14153288240\"\
          ;\n            obj.BlockIncoming = 0;\n\n            try {\n           \
          \     // ResourceLinkResponse class object\n                var result =\
          \ apiInstance.UnsubscribeContact(obj);\n                // ...\n       \
          \     } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling unsubscribeContact: \"+e.Message);\n            }\n     \
          \   }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UnsubscribeContactInputObject With {\n            .Phone = \"+14153288240\"\
          ,\n            .BlockIncoming = 0\n        }\n\n        Try\n          \
          \  ' ResourceLinkResponse class object\n            Dim result = apiInstance.UnsubscribeContact(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling unsubscribeContact: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Phone: \"+14153288240\"\
          ,\n        BlockIncoming: 0,\n    }\n\n    // tm.ResourceLinkResponse struct\n\
          \    result, _, err := client.TextMagicApi.UnsubscribeContact(auth, input)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UnsubscribeContactInputObject>\
          \ input(new UnsubscribeContactInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setPhone(\"+14153288240\");\n    input->setBlockIncoming(0);\n\
          \n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>> result\
          \ = api.unsubscribeContact(input);\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"unsubscribeContact() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UnsubscribeContactInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.phone = \"+14153288240\"\ninput.block_incoming =\
          \ 0\n\ntry:\n    # ResourceLinkResponse object\n    result = api_instance.unsubscribe_contact(unsubscribe_contact_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->unsubscribe_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UnsubscribeContactInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UnsubscribeContactInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    phone => '+14153288240',\n\
          \    blockIncoming => 0,\n);\n\neval {\n    # ResourceLinkResponse object\n\
          \    my $result = $api_instance->unsubscribe_contact(unsubscribe_contact_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->unsubscribe_contact: $@\\n\";\n}"
  /api/v2/unsubscribers/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single unsubscribed contact."
      description: ""
      operationId: "getUnsubscribedContact"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/UnsubscribedContact"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // UnsubscribedContact class object\n    $result\
          \ = $api->getUnsubscribedContact($id);\n    // ...\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->getUnsubscribedContact:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // UnsubscribedContact\
          \ class object\n            UnsubscribedContact obj = apiInstance.getUnsubscribedContact(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getUnsubscribedContact\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getUnsubscribedContact(id).then(function (data) {\n   \
          \ console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # UnsubscribedContact\
          \ object\n    result = api.get_unsubscribed_contact(id)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_unsubscribed_contact:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // UnsubscribedContact class\
          \ object\n                var result = apiInstance.GetUnsubscribedContact(id);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getUnsubscribedContact:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' UnsubscribedContact class object\n \
          \           Dim result = apiInstance.GetUnsubscribedContact(id)\n      \
          \      ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getUnsubscribedContact: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.UnsubscribedContact struct\n    result, _, err := client.TextMagicApi.GetUnsubscribedContact(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<UnsubscribedContact>> result = api.getUnsubscribedContact(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getUnsubscribedContact()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # UnsubscribedContact object\n    result = api_instance.get_unsubscribed_contact(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_unsubscribed_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # UnsubscribedContact object\n    my $result = $api_instance->get_unsubscribed_contact(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_unsubscribed_contact: $@\\n\";\n}"
  /api/v2/contacts/block:
    post:
      tags:
      - "TextMagic"
      summary: "Block contact from inbound and outbound communication by phone number."
      description: ""
      operationId: "blockContact"
      parameters:
      - in: "body"
        name: "BlockContactInputObject"
        required: true
        schema:
          $ref: "#/definitions/BlockContactInputObject"
        x-exportParamName: "BlockContactInputObject"
      responses:
        201:
          description: "Returned when updated with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new BlockContactInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setPhone(\"\
          +14153288240\");\n\ntry {\n    // ResourceLinkResponse class object\n  \
          \  $result = $api->blockContact($input);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->blockContact: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        BlockContactInputObject input = new BlockContactInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setPhone(\"+14153288240\");\n\n        try {\n            //\
          \ ResourceLinkResponse class object\n            ResourceLinkResponse obj\
          \ = apiInstance.blockContact(input);\n            // ...\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ blockContact\");\n            e.printStackTrace();\n        }\n    }\n\
          }"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    phone: \"+14153288240\",\n\
          }\n\napi.blockContact(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::BlockContactInputObject.new\n\
          # Optional parameters, you can skip them\nobj.phone = \"+14153288240\"\n\
          \nbegin\n    # ResourceLinkResponse object\n    result = api.block_contact(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->block_contact: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new BlockContactInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Phone = \"+14153288240\"\
          ;\n\n            try {\n                // ResourceLinkResponse class object\n\
          \                var result = apiInstance.BlockContact(obj);\n         \
          \       // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling blockContact: \"+e.Message);\n            }\n   \
          \     }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ BlockContactInputObject With {\n            .Phone = \"+14153288240\"\n\
          \        }\n\n        Try\n            ' ResourceLinkResponse class object\n\
          \            Dim result = apiInstance.BlockContact(obj)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling blockContact: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Phone: \"+14153288240\"\
          ,\n    }\n\n    // tm.ResourceLinkResponse struct\n    result, _, err :=\
          \ client.TextMagicApi.BlockContact(auth, input)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\", result)\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<BlockContactInputObject>\
          \ input(new BlockContactInputObject);\n    // Optional parameters, you can\
          \ skip them\n    input->setPhone(\"+14153288240\");\n\n    try {\n     \
          \   pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.blockContact(input);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"blockContact()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.BlockContactInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.phone = \"+14153288240\"\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.block_contact(block_contact_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->block_contact: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::BlockContactInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::BlockContactInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    phone => '+14153288240',\n\
          );\n\neval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->block_contact(block_contact_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->block_contact: $@\\n\";\n}"
  /api/v2/contacts/unblock:
    post:
      tags:
      - "TextMagic"
      summary: "Unblock contact by phone number."
      description: ""
      operationId: "unblockContact"
      produces: []
      parameters:
      - in: "body"
        name: "UnblockContactInputObject"
        required: true
        schema:
          $ref: "#/definitions/UnblockContactInputObject"
        x-exportParamName: "UnblockContactInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UnblockContactInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setPhone(\"\
          +14153288240\");\n\ntry {\n    $api->unblockContact($input);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->unblockContact:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UnblockContactInputObject input = new UnblockContactInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setPhone(\"+14153288240\");\n\n        try {\n            apiInstance.unblockContact(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling unblockContact\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    phone: \"+14153288240\",\n\
          }\n\napi.unblockContact(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UnblockContactInputObject.new\n\
          # Optional parameters, you can skip them\nobj.phone = \"+14153288240\"\n\
          \nbegin\n    api.unblock_contact(input)\nrescue TextMagic::ApiError => e\n\
          \    puts \"Exception when calling TextMagicApi->unblock_contact: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UnblockContactInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Phone = \"+14153288240\"\
          ;\n\n            try {\n                apiInstance.UnblockContact(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling unblockContact: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UnblockContactInputObject With {\n            .Phone = \"+14153288240\"\
          \n        }\n\n        Try\n            apiInstance.UnblockContact(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling unblockContact: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Phone: \"+14153288240\"\
          ,\n    }\n\n    client.TextMagicApi.UnblockContact(auth, input)\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n \
          \   }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UnblockContactInputObject>\
          \ input(new UnblockContactInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setPhone(\"+14153288240\");\n\n    try {\n \
          \       pplx::task result = api.unblockContact(input);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"unblockContact()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UnblockContactInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.phone = \"+14153288240\"\n\ntry:\n    api_instance.unblock_contact(unblock_contact_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->unblock_contact:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UnblockContactInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UnblockContactInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    phone => '+14153288240',\n\
          );\n\neval {\n    $api_instance->unblock_contact(unblock_contact_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->unblock_contact:\
          \ $@\\n\";\n}"
  /api/v2/contacts/unblock/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Unblock several contacts by blocked contact ids or unblock all contacts"
      description: ""
      operationId: "unblockContactsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "UnblockContactsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/UnblockContactsBulkInputObject"
        x-exportParamName: "UnblockContactsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UnblockContactsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(0);\n\ntry {\n    $api->unblockContactsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->unblockContactsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UnblockContactsBulkInputObject input = new UnblockContactsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(0);\n\n        try\
          \ {\n            apiInstance.unblockContactsBulk(input);\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ unblockContactsBulk\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 0,\n\
          }\n\napi.unblockContactsBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UnblockContactsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 0\n\nbegin\n    api.unblock_contacts_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->unblock_contacts_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UnblockContactsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = 0;\n\n            try {\n                apiInstance.UnblockContactsBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling unblockContactsBulk: \"+e.Message);\n           \
          \ }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UnblockContactsBulkInputObject With {\n            .Ids = \"1,2,3\",\n\
          \            .All = 0\n        }\n\n        Try\n            apiInstance.UnblockContactsBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling unblockContactsBulk: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 0,\n    }\n\n    client.TextMagicApi.UnblockContactsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UnblockContactsBulkInputObject>\
          \ input(new UnblockContactsBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(0);\n\
          \n    try {\n        pplx::task result = api.unblockContactsBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"unblockContactsBulk() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UnblockContactsBulkInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.ids = \"1,2,3\"\ninput.all = 0\n\ntry:\n    api_instance.unblock_contacts_bulk(unblock_contacts_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->unblock_contacts_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UnblockContactsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UnblockContactsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->unblock_contacts_bulk(unblock_contacts_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->unblock_contacts_bulk:\
          \ $@\\n\";\n}"
  /api/v2/contacts/block/phone:
    get:
      tags:
      - "TextMagic"
      summary: "Check is that phone number blocked"
      description: ""
      operationId: "getContactIfBlocked"
      parameters:
      - name: "phone"
        in: "query"
        description: "Phone number to check"
        required: true
        type: "string"
        x-example: 9997339956475
        x-exportParamName: "Phone"
      responses:
        200:
          description: "Returned when contact is blocked"
          schema:
            $ref: "#/definitions/Contact"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "When contact is not blocked"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$phone = \"9997339956475\";\n\ntry {\n    // Contact class object\n\
          \    $result = $api->getContactIfBlocked($phone);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getContactIfBlocked:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String phone = \"9997339956475\";\n\n        try {\n         \
          \   // Contact class object\n            Contact obj = apiInstance.getContactIfBlocked(phone);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getContactIfBlocked\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n    phone: \"9997339956475\",\n}\n\napi.getContactIfBlocked().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  phone: '9997339956475',\n\
          }\n\nbegin\n    # Contact object\n    result = api.get_contact_if_blocked(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_contact_if_blocked: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ phone = \"9997339956475\";\n\n            try {\n                // Contact\
          \ class object\n                var result = apiInstance.GetContactIfBlocked(phone);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getContactIfBlocked:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim phone As\
          \ String = \"9997339956475\"\n\n        Try\n            ' Contact class\
          \ object\n            Dim result = apiInstance.GetContactIfBlocked(phone)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getContactIfBlocked: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetContactIfBlockedOpts{\n\
          \        // Required parameters\n        Phone: \"9997339956475\",\n   \
          \ }\n\n    // tm.Contact struct\n    result, _, err := client.TextMagicApi.GetContactIfBlocked(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string phone = \"9997339956475\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<Contact>> result = api.getContactIfBlocked(phone);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getContactIfBlocked()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nphone\
          \ = \"9997339956475\"\n\ntry:\n    # Contact object\n    result = api_instance.get_contact_if_blocked(phone=phone)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_contact_if_blocked: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $phone\
          \ = '9997339956475';\n\neval {\n    # Contact object\n    my $result = $api_instance->get_contact_if_blocked(phone\
          \ => $phone);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_contact_if_blocked: $@\\n\";\n}"
  /api/v2/contacts/{id}/notes:
    get:
      tags:
      - "TextMagic"
      summary: "Fetch notes assigned to the given contact."
      description: ""
      operationId: "getContactNotes"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetContactNotesPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n// Optional, you can pass them as null values to getContactNotes\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\n\
          try {\n    // GetContactNotesPaginatedResponse class object\n    $result\
          \ = $api->getContactNotes($id, $page, $limit);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getContactNotes:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n        // Optional, you can pass them as null values\
          \ to getContactNotes method below, default values will be used\n       \
          \ int page = 1;\n        int limit = 10;\n\n        try {\n            //\
          \ GetContactNotesPaginatedResponse class object\n            GetContactNotesPaginatedResponse\
          \ obj = apiInstance.getContactNotes(id, page, limit);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getContactNotes\");\n            e.printStackTrace();\n \
          \       }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\nparams = {\n// Optional parameters\n    page: 1,\n    limit:\
          \ 10,\n}\n\napi.getContactNotes(id, ).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\nparams = {\n  # Optional\
          \ parameters\n  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetContactNotesPaginatedResponse\
          \ object\n    result = api.get_contact_notes(id, params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_contact_notes:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n            // Optional, you can pass them as null values to getContactNotes\
          \ method below, default values will be used\n            int page = 1;\n\
          \            int limit = 10;\n\n            try {\n                // GetContactNotesPaginatedResponse\
          \ class object\n                var result = apiInstance.GetContactNotes(id,\
          \ page, limit);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getContactNotes:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n        ' Optional, you can pass them as null values to getContactNotes\
          \ method below, default values will be used\n        Dim page As Integer\
          \ = 1\n        Dim limit As Integer = 10\n\n        Try\n            ' GetContactNotesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetContactNotes(id,\
          \ page, limit)\n            ' ...\n        Catch e As Exception\n      \
          \      Console.WriteLine(\"Exception when calling getContactNotes: \" +\
          \ e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    opts := tm.GetContactNotesOpts{\n        // Optional parameters\n \
          \       Page: optional.NewInt32(1),\n        Limit: optional.NewInt32(10),\n\
          \    }\n\n    // tm.GetContactNotesPaginatedResponse struct\n    result,\
          \ _, err := client.TextMagicApi.GetContactNotes(auth, id, &opts)\n\n   \
          \ if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n    // Optional parameters.\
          \ Important: if you want to use default value then pass boost::none value\n\
          \    int page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetContactNotesPaginatedResponse>>\
          \ result = api.getContactNotes(id, page, limit);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getContactNotes() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          # Optional params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n   \
          \ # GetContactNotesPaginatedResponse object\n    result = api_instance.get_contact_notes(id=id,\
          \ page=page, limit=limit)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_contact_notes: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          # Optional params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\n\
          eval {\n    # GetContactNotesPaginatedResponse object\n    my $result =\
          \ $api_instance->get_contact_notes(id => $id, page => $page, limit => $limit);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_contact_notes:\
          \ $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a new contact note."
      description: ""
      operationId: "createContactNote"
      parameters:
      - in: "body"
        name: "CreateContactNoteInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateContactNoteInputObject"
        x-exportParamName: "CreateContactNoteInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        default: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when created with success"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateContactNoteInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setNote(\"\
          My new note\");\n$id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n\
          \    $result = $api->createContactNote($input$id);\n    // ...\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->createContactNote:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateContactNoteInputObject input = new CreateContactNoteInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setNote(\"My new note\");\n        int id = 1;\n\n        try\
          \ {\n            // ResourceLinkResponse class object\n            ResourceLinkResponse\
          \ obj = apiInstance.createContactNote(inputid);\n            // ...\n  \
          \      } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling createContactNote\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    note: \"My new note\",\n}\n\
          const id = 1;\n\napi.createContactNote(input, id).then(function (data) {\n\
          \    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateContactNoteInputObject.new\n\
          # Optional parameters, you can skip them\nobj.note = \"My new note\"\nid\
          \ = 1\n\nbegin\n    # ResourceLinkResponse object\n    result = api.create_contact_note(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->create_contact_note: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateContactNoteInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Note = \"My new note\"\
          ;\n            int id = 1;\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.CreateContactNote(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling createContactNote: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateContactNoteInputObject With {\n            .Note = \"My new note\"\
          \n        }\n        Dim id As Integer = 1\n\n        Try\n            '\
          \ ResourceLinkResponse class object\n            Dim result = apiInstance.CreateContactNote(objid)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling createContactNote: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Note: \"My new\
          \ note\",\n    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.CreateContactNote(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateContactNoteInputObject>\
          \ input(new CreateContactNoteInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setNote(\"My new note\");\n\n    int id\
          \ = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.createContactNote(input, id);\n        result.wait();\n \
          \       // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"createContactNote() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateContactNoteInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.note = \"My new note\"\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.create_contact_note(create_contact_note_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->create_contact_note: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateContactNoteInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateContactNoteInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    note => 'My new note',\n\
          );\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result\
          \ = $api_instance->create_contact_note(create_contact_note_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->create_contact_note: $@\\n\";\n}"
  /api/v2/notes/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single contact note."
      description: ""
      operationId: "getContactNote"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        default: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ContactNote"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // ContactNote class object\n    $result =\
          \ $api->getContactNote($id);\n    // ...\n} catch (Exception $e) {\n   \
          \ echo 'Exception when calling TextMagicApi->getContactNote: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // ContactNote class\
          \ object\n            ContactNote obj = apiInstance.getContactNote(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getContactNote\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getContactNote(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # ContactNote\
          \ object\n    result = api.get_contact_note(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_contact_note:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // ContactNote class object\n\
          \                var result = apiInstance.GetContactNote(id);\n        \
          \        // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getContactNote: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' ContactNote class object\n         \
          \   Dim result = apiInstance.GetContactNote(id)\n            ' ...\n   \
          \     Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling getContactNote: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.ContactNote struct\n    result, _, err := client.TextMagicApi.GetContactNote(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<ContactNote>> result = api.getContactNote(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getContactNote()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # ContactNote object\n    result = api_instance.get_contact_note(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_contact_note: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # ContactNote object\n    my $result = $api_instance->get_contact_note(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_contact_note: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update existing contact note."
      description: ""
      operationId: "updateContactNote"
      parameters:
      - in: "body"
        name: "UpdateContactNoteInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateContactNoteInputObject"
        x-exportParamName: "UpdateContactNoteInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to edit contact note shared to current\
            \ user"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateContactNoteInputObject();\n\
          \n// Required parameters\n$input->setNote(\"My new note\");\n$id = 1;\n\n\
          try {\n    // ResourceLinkResponse class object\n    $result = $api->updateContactNote($input$id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->updateContactNote: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateContactNoteInputObject input = new UpdateContactNoteInputObject();\n\
          \n        // Required parameters\n        input.setNote(\"My new note\"\
          );\n        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.updateContactNote(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling updateContactNote\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    note: \"My new note\",\n}\nconst id = 1;\n\napi.updateContactNote(input,\
          \ id).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateContactNoteInputObject.new\n\
          \n# Required parameters\nobj.note = \"My new note\"\nid = 1\n\nbegin\n \
          \   # ResourceLinkResponse object\n    result = api.update_contact_note(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->update_contact_note: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateContactNoteInputObject();\n\n            // Required parameters\n\
          \            obj.Note = \"My new note\";\n            int id = 1;\n\n  \
          \          try {\n                // ResourceLinkResponse class object\n\
          \                var result = apiInstance.UpdateContactNote(objid);\n  \
          \              // ...\n            } catch (Exception e) {\n           \
          \     Console.WriteLine(\"Exception when calling updateContactNote: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateContactNoteInputObject With {\n            .Note = \"My new note\"\
          \n        }\n        Dim id As Integer = 1\n\n        Try\n            '\
          \ ResourceLinkResponse class object\n            Dim result = apiInstance.UpdateContactNote(objid)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateContactNote: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Note: \"My new note\",\n    }\n\
          \    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.UpdateContactNote(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateContactNoteInputObject>\
          \ input(new UpdateContactNoteInputObject);\n    // Required parameters\n\
          \    input->setNote(\"My new note\");\n\n    int id = 1;\n\n    try {\n\
          \        pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.updateContactNote(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"updateContactNote()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateContactNoteInputObject()\n\n# Required parameters\n\
          input.note = \"My new note\"\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.update_contact_note(update_contact_note_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_contact_note: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateContactNoteInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateContactNoteInputObject->new(\n\
          \    # Required parameters\n    note => 'My new note',\n);\nmy $id = 1;\n\
          \neval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->update_contact_note(update_contact_note_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_contact_note: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a single contact note."
      description: ""
      operationId: "deleteContactNote"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteContactNote($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteContactNote:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteContactNote(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteContactNote\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteContactNote(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_contact_note(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_contact_note:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteContactNote(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteContactNote: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteContactNote(id)\n  \
          \          ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteContactNote: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteContactNote(auth, id)\n\n    if err != nil\
          \ {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteContactNote(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteContactNote()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_contact_note(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_contact_note:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_contact_note(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->delete_contact_note:\
          \ $@\\n\";\n}"
  /api/v2/contacts/{id}/notes/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete contact note by given ID(s) or delete all contact notes."
      description: ""
      operationId: "deleteContactNotesBulk"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      - in: "body"
        name: "DeleteContactNotesBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteContactNotesBulkInputObject"
        x-exportParamName: "DeleteContactNotesBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteContactNotesBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(true);\n$id = 1;\n\ntry {\n    $api->deleteContactNotesBulk($input$id);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteContactNotesBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteContactNotesBulkInputObject input = new DeleteContactNotesBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(true);\n        int\
          \ id = 1;\n\n        try {\n            apiInstance.deleteContactNotesBulk(inputid);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteContactNotesBulk\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: true,\n\
          }\nconst id = 1;\n\napi.deleteContactNotesBulk(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteContactNotesBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ true\nid = 1\n\nbegin\n    api.delete_contact_notes_bulk(input, id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_contact_notes_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteContactNotesBulkInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Ids = \"\
          1,2,3\";\n            obj.All = true;\n            int id = 1;\n\n     \
          \       try {\n                apiInstance.DeleteContactNotesBulk(objid);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteContactNotesBulk: \"+e.Message);\n        \
          \    }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteContactNotesBulkInputObject With {\n            .Ids = \"1,2,3\"\
          ,\n            .All = true\n        }\n        Dim id As Integer = 1\n\n\
          \        Try\n            apiInstance.DeleteContactNotesBulk(objid)\n  \
          \          ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteContactNotesBulk: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: true,\n    }\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteContactNotesBulk(auth, input, id)\n\n   \
          \ if err != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n\
          \    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteContactNotesBulkInputObject>\
          \ input(new DeleteContactNotesBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(true);\n\
          \n    int id = 1;\n\n    try {\n        pplx::task result = api.deleteContactNotesBulk(input,\
          \ id);\n        result.wait();\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"deleteContactNotesBulk() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteContactNotesBulkInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.ids = \"1,2,3\"\ninput.all = true\nid = 1\n\n\
          try:\n    api_instance.delete_contact_notes_bulk(delete_contact_notes_bulk_input_object=input,\
          \ id=id)\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->delete_contact_notes_bulk: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteContactNotesBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteContactNotesBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 1,\n);\nmy $id = 1;\n\neval {\n    $api_instance->delete_contact_notes_bulk(delete_contact_notes_bulk_input_object\
          \ => $input, id => $id);\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->delete_contact_notes_bulk: $@\\n\";\n}"
  /api/v2/contacts/{id}/avatar:
    delete:
      tags:
      - "TextMagic"
      summary: "Delete an avatar for the contact."
      description: ""
      operationId: "deleteContactAvatar"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        default: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to edit contact shared to current user"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteContactAvatar($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteContactAvatar:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteContactAvatar(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteContactAvatar\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteContactAvatar(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_contact_avatar(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_contact_avatar:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteContactAvatar(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteContactAvatar: \"+e.Message);\n           \
          \ }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteContactAvatar(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteContactAvatar: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteContactAvatar(auth, id)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteContactAvatar(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteContactAvatar()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_contact_avatar(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_contact_avatar:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_contact_avatar(id => $id);\n};\n\nif\
          \ ($@) {\n    warn \"Exception when calling TextMagicApi->delete_contact_avatar:\
          \ $@\\n\";\n}"
  /api/v2/contacts/import/progress/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get contact import session progress."
      description: ""
      operationId: "getContactImportSessionProgress"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        default: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetContactImportSessionProgressResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // GetContactImportSessionProgressResponse\
          \ class object\n    $result = $api->getContactImportSessionProgress($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getContactImportSessionProgress: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // GetContactImportSessionProgressResponse\
          \ class object\n            GetContactImportSessionProgressResponse obj\
          \ = apiInstance.getContactImportSessionProgress(id);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getContactImportSessionProgress\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getContactImportSessionProgress(id).then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # GetContactImportSessionProgressResponse\
          \ object\n    result = api.get_contact_import_session_progress(id)\n   \
          \ # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_contact_import_session_progress: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // GetContactImportSessionProgressResponse\
          \ class object\n                var result = apiInstance.GetContactImportSessionProgress(id);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getContactImportSessionProgress:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' GetContactImportSessionProgressResponse\
          \ class object\n            Dim result = apiInstance.GetContactImportSessionProgress(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getContactImportSessionProgress: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.GetContactImportSessionProgressResponse struct\n    result, _,\
          \ err := client.TextMagicApi.GetContactImportSessionProgress(auth, id)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<GetContactImportSessionProgressResponse>>\
          \ result = api.getContactImportSessionProgress(id);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getContactImportSessionProgress() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # GetContactImportSessionProgressResponse object\n    result\
          \ = api_instance.get_contact_import_session_progress(id=id)\n    # ...\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_contact_import_session_progress:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # GetContactImportSessionProgressResponse object\n    my $result\
          \ = $api_instance->get_contact_import_session_progress(id => $id);\n   \
          \ # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_contact_import_session_progress:\
          \ $@\\n\";\n}"
  /api/v2/contacts/block/list:
    get:
      tags:
      - "TextMagic"
      summary: "Get blocked contacts."
      description: ""
      operationId: "getBlockedContacts"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find blocked contacts by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetBlockedContactsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getBlockedContacts\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $query = \"sampleValue\";\n$orderBy = \"id\";\n$direction = \"desc\";\n\n\
          try {\n    // GetBlockedContactsPaginatedResponse class object\n    $result\
          \ = $api->getBlockedContacts($page, $limit, $query, $orderBy, $direction);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getBlockedContacts: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getBlockedContacts\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String query = \"sampleValue\";\n       \
          \ String orderBy = \"id\";\n        String direction = \"desc\";\n\n   \
          \     try {\n            // GetBlockedContactsPaginatedResponse class object\n\
          \            GetBlockedContactsPaginatedResponse obj = apiInstance.getBlockedContacts(page,\
          \ limit, query, orderBy, direction);\n            // ...\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ getBlockedContacts\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    query:\
          \ \"sampleValue\",\n    orderBy: \"id\",\n    direction: \"desc\",\n}\n\n\
          api.getBlockedContacts().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  query: 'sampleValue',\n  order_by: 'id',\n\
          \  direction: 'desc',\n}\n\nbegin\n    # GetBlockedContactsPaginatedResponse\
          \ object\n    result = api.get_blocked_contacts(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_blocked_contacts:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getBlockedContacts method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string query = \"sampleValue\";\n            string\
          \ orderBy = \"id\";\n            string direction = \"desc\";\n\n      \
          \      try {\n                // GetBlockedContactsPaginatedResponse class\
          \ object\n                var result = apiInstance.GetBlockedContacts(page,\
          \ limit, query, orderBy, direction);\n                // ...\n         \
          \   } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling getBlockedContacts: \"+e.Message);\n            }\n     \
          \   }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getBlockedContacts method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim query As String = \"sampleValue\"\n     \
          \   Dim orderBy As String = \"id\"\n        Dim direction As String = \"\
          desc\"\n\n        Try\n            ' GetBlockedContactsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetBlockedContacts(page,\
          \ limit, query, orderBy, direction)\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling getBlockedContacts:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetBlockedContactsOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        Query: optional.NewString(\"\
          sampleValue\"),\n        OrderBy: optional.NewString(\"id\"),\n        Direction:\
          \ optional.NewString(\"desc\"),\n    }\n\n    // tm.GetBlockedContactsPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetBlockedContacts(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string query = \"sampleValue\"\
          ;\n    std::string orderBy = \"id\";\n    std::string direction = \"desc\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<GetBlockedContactsPaginatedResponse>>\
          \ result = api.getBlockedContacts(page, limit, query, orderBy, direction);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getBlockedContacts()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nquery = \"sampleValue\"\
          \norder_by = \"id\"\ndirection = \"desc\"\n\ntry:\n    # GetBlockedContactsPaginatedResponse\
          \ object\n    result = api_instance.get_blocked_contacts(page=page, limit=limit,\
          \ query=query, order_by=order_by, direction=direction)\n    # ...\nexcept\
          \ ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_blocked_contacts:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $query =\
          \ 'sampleValue';\nmy $orderBy = 'id';\nmy $direction = 'desc';\n\neval {\n\
          \    # GetBlockedContactsPaginatedResponse object\n    my $result = $api_instance->get_blocked_contacts(page\
          \ => $page, limit => $limit, query => $query, orderBy => $orderBy, direction\
          \ => $direction);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when\
          \ calling TextMagicApi->get_blocked_contacts: $@\\n\";\n}"
  /api/v2/email-lookups/{email}:
    get:
      tags:
      - "TextMagic"
      summary: "Validate Email address using Email Lookup tool"
      description: ""
      operationId: "doEmailLookup"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
        format: "email"
        x-example: "andrey.v@textmagic.biz"
        x-exportParamName: "Email"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/DoEmailLookupResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$email = \"andrey.v@textmagic.biz\";\n\ntry {\n    // DoEmailLookupResponse\
          \ class object\n    $result = $api->doEmailLookup($email);\n    // ...\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->doEmailLookup:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String email = \"andrey.v@textmagic.biz\";\n\n        try {\n\
          \            // DoEmailLookupResponse class object\n            DoEmailLookupResponse\
          \ obj = apiInstance.doEmailLookup(email);\n            // ...\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling doEmailLookup\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ email = \"andrey.v@textmagic.biz\";\n\napi.doEmailLookup(email).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nemail = 'andrey.v@textmagic.biz'\n\
          \nbegin\n    # DoEmailLookupResponse object\n    result = api.do_email_lookup(email)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->do_email_lookup: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ email = \"andrey.v@textmagic.biz\";\n\n            try {\n           \
          \     // DoEmailLookupResponse class object\n                var result\
          \ = apiInstance.DoEmailLookup(email);\n                // ...\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling doEmailLookup: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim email As\
          \ String = \"andrey.v@textmagic.biz\"\n\n        Try\n            ' DoEmailLookupResponse\
          \ class object\n            Dim result = apiInstance.DoEmailLookup(email)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling doEmailLookup: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var email string = \"\
          andrey.v@textmagic.biz\"\n\n    // tm.DoEmailLookupResponse struct\n   \
          \ result, _, err := client.TextMagicApi.DoEmailLookup(auth, email)\n\n \
          \   if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string email = \"andrey.v@textmagic.biz\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<DoEmailLookupResponse>>\
          \ result = api.doEmailLookup(email);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"doEmailLookup() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nemail\
          \ = \"andrey.v@textmagic.biz\"\n\ntry:\n    # DoEmailLookupResponse object\n\
          \    result = api_instance.do_email_lookup(email=email)\n    # ...\nexcept\
          \ ApiException as e:\n    print(\"Exception when calling TextMagicApi->do_email_lookup:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $email\
          \ = 'andrey.v@textmagic.biz';\n\neval {\n    # DoEmailLookupResponse object\n\
          \    my $result = $api_instance->do_email_lookup(email => $email);\n   \
          \ # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->do_email_lookup:\
          \ $@\\n\";\n}"
  /api/v2/lists/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find contact lists by given parameters."
      description: ""
      operationId: "searchLists"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "ids"
        in: "query"
        description: "Find lists by ID(s)"
        required: false
        type: "string"
        x-example: "1,2,3,4"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "query"
        in: "query"
        description: "Find lists by specified search query"
        required: false
        type: "string"
        x-example: "A"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "onlyMine"
        in: "query"
        description: "Return only current user lists"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "OnlyMine"
        x-optionalDataType: "Int32"
      - name: "onlyDefault"
        in: "query"
        description: "Return only default lists"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "OnlyDefault"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchListsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchLists method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$ids = \"\
          1,2,3,4\";\n$query = \"A\";\n$onlyMine = 0;\n$onlyDefault = 0;\n$orderBy\
          \ = \"id\";\n$direction = \"desc\";\n\ntry {\n    // SearchListsPaginatedResponse\
          \ class object\n    $result = $api->searchLists($page, $limit, $ids, $query,\
          \ $onlyMine, $onlyDefault, $orderBy, $direction);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->searchLists: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchLists method\
          \ below, default values will be used\n        int page = 1;\n        int\
          \ limit = 10;\n        String ids = \"1,2,3,4\";\n        String query =\
          \ \"A\";\n        int onlyMine = 0;\n        int onlyDefault = 0;\n    \
          \    String orderBy = \"id\";\n        String direction = \"desc\";\n\n\
          \        try {\n            // SearchListsPaginatedResponse class object\n\
          \            SearchListsPaginatedResponse obj = apiInstance.searchLists(page,\
          \ limit, ids, query, onlyMine, onlyDefault, orderBy, direction);\n     \
          \       // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling searchLists\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    ids: \"\
          1,2,3,4\",\n    query: \"A\",\n    onlyMine: 0,\n    onlyDefault: 0,\n \
          \   orderBy: \"id\",\n    direction: \"desc\",\n}\n\napi.searchLists().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  ids: '1,2,3,4',\n  query: 'A',\n  only_mine:\
          \ 0,\n  only_default: 0,\n  order_by: 'id',\n  direction: 'desc',\n}\n\n\
          begin\n    # SearchListsPaginatedResponse object\n    result = api.search_lists(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->search_lists: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchLists method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string ids = \"1,2,3,4\";\n            string query\
          \ = \"A\";\n            int onlyMine = 0;\n            int onlyDefault =\
          \ 0;\n            string orderBy = \"id\";\n            string direction\
          \ = \"desc\";\n\n            try {\n                // SearchListsPaginatedResponse\
          \ class object\n                var result = apiInstance.SearchLists(page,\
          \ limit, ids, query, onlyMine, onlyDefault, orderBy, direction);\n     \
          \           // ...\n            } catch (Exception e) {\n              \
          \  Console.WriteLine(\"Exception when calling searchLists: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchLists method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim ids As String = \"1,2,3,4\"\n        Dim\
          \ query As String = \"A\"\n        Dim onlyMine As Integer = 0\n       \
          \ Dim onlyDefault As Integer = 0\n        Dim orderBy As String = \"id\"\
          \n        Dim direction As String = \"desc\"\n\n        Try\n          \
          \  ' SearchListsPaginatedResponse class object\n            Dim result =\
          \ apiInstance.SearchLists(page, limit, ids, query, onlyMine, onlyDefault,\
          \ orderBy, direction)\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling searchLists: \"\
          \ + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchListsOpts{\n      \
          \  // Optional parameters\n        Page: optional.NewInt32(1),\n       \
          \ Limit: optional.NewInt32(10),\n        Ids: optional.NewString(\"1,2,3,4\"\
          ),\n        Query: optional.NewString(\"A\"),\n        OnlyMine: optional.NewInt32(0),\n\
          \        OnlyDefault: optional.NewInt32(0),\n        OrderBy: optional.NewString(\"\
          id\"),\n        Direction: optional.NewString(\"desc\"),\n    }\n\n    //\
          \ tm.SearchListsPaginatedResponse struct\n    result, _, err := client.TextMagicApi.SearchLists(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string ids = \"1,2,3,4\";\n \
          \   std::string query = \"A\";\n    int onlyMine = 0;\n    int onlyDefault\
          \ = 0;\n    std::string orderBy = \"id\";\n    std::string direction = \"\
          desc\";\n\n    try {\n        pplx::task<std::shared_ptr<SearchListsPaginatedResponse>>\
          \ result = api.searchLists(page, limit, ids, query, onlyMine, onlyDefault,\
          \ orderBy, direction);\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"searchLists() exception: \" << e.what() << '\\n';\n    }\n\n    return\
          \ 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nids = \"1,2,3,4\"\nquery\
          \ = \"A\"\nonly_mine = 0\nonly_default = 0\norder_by = \"id\"\ndirection\
          \ = \"desc\"\n\ntry:\n    # SearchListsPaginatedResponse object\n    result\
          \ = api_instance.search_lists(page=page, limit=limit, ids=ids, query=query,\
          \ only_mine=only_mine, only_default=only_default, order_by=order_by, direction=direction)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->search_lists: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $ids = '1,2,3,4';\n\
          my $query = 'A';\nmy $onlyMine = 0;\nmy $onlyDefault = 0;\nmy $orderBy =\
          \ 'id';\nmy $direction = 'desc';\n\neval {\n    # SearchListsPaginatedResponse\
          \ object\n    my $result = $api_instance->search_lists(page => $page, limit\
          \ => $limit, ids => $ids, query => $query, onlyMine => $onlyMine, onlyDefault\
          \ => $onlyDefault, orderBy => $orderBy, direction => $direction);\n    #\
          \ ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->search_lists:\
          \ $@\\n\";\n}"
  /api/v2/lists:
    get:
      tags:
      - "TextMagic"
      summary: "Get all user lists."
      description: ""
      operationId: "getUserLists"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      - name: "favoriteOnly"
        in: "query"
        description: "Return only favorite lists"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "FavoriteOnly"
        x-optionalDataType: "Int32"
      - name: "onlyMine"
        in: "query"
        description: "Return only current user lists"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "OnlyMine"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetUserListsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getUserLists method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$orderBy\
          \ = \"id\";\n$direction = \"desc\";\n$favoriteOnly = 0;\n$onlyMine = 0;\n\
          \ntry {\n    // GetUserListsPaginatedResponse class object\n    $result\
          \ = $api->getUserLists($page, $limit, $orderBy, $direction, $favoriteOnly,\
          \ $onlyMine);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception\
          \ when calling TextMagicApi->getUserLists: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getUserLists\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String orderBy = \"id\";\n        String\
          \ direction = \"desc\";\n        int favoriteOnly = 0;\n        int onlyMine\
          \ = 0;\n\n        try {\n            // GetUserListsPaginatedResponse class\
          \ object\n            GetUserListsPaginatedResponse obj = apiInstance.getUserLists(page,\
          \ limit, orderBy, direction, favoriteOnly, onlyMine);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getUserLists\");\n            e.printStackTrace();\n    \
          \    }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    orderBy:\
          \ \"id\",\n    direction: \"desc\",\n    favoriteOnly: 0,\n    onlyMine:\
          \ 0,\n}\n\napi.getUserLists().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  order_by: 'id',\n  direction: 'desc',\n  favorite_only:\
          \ 0,\n  only_mine: 0,\n}\n\nbegin\n    # GetUserListsPaginatedResponse object\n\
          \    result = api.get_user_lists(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_user_lists:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getUserLists method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string orderBy = \"id\";\n            string direction\
          \ = \"desc\";\n            int favoriteOnly = 0;\n            int onlyMine\
          \ = 0;\n\n            try {\n                // GetUserListsPaginatedResponse\
          \ class object\n                var result = apiInstance.GetUserLists(page,\
          \ limit, orderBy, direction, favoriteOnly, onlyMine);\n                //\
          \ ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getUserLists: \"+e.Message);\n            }\n   \
          \     }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getUserLists method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim orderBy As String = \"id\"\n        Dim direction\
          \ As String = \"desc\"\n        Dim favoriteOnly As Integer = 0\n      \
          \  Dim onlyMine As Integer = 0\n\n        Try\n            ' GetUserListsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetUserLists(page,\
          \ limit, orderBy, direction, favoriteOnly, onlyMine)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getUserLists: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetUserListsOpts{\n     \
          \   // Optional parameters\n        Page: optional.NewInt32(1),\n      \
          \  Limit: optional.NewInt32(10),\n        OrderBy: optional.NewString(\"\
          id\"),\n        Direction: optional.NewString(\"desc\"),\n        FavoriteOnly:\
          \ optional.NewInt32(0),\n        OnlyMine: optional.NewInt32(0),\n    }\n\
          \n    // tm.GetUserListsPaginatedResponse struct\n    result, _, err :=\
          \ client.TextMagicApi.GetUserLists(auth, &opts)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\", result)\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string orderBy = \"id\";\n  \
          \  std::string direction = \"desc\";\n    int favoriteOnly = 0;\n    int\
          \ onlyMine = 0;\n\n    try {\n        pplx::task<std::shared_ptr<GetUserListsPaginatedResponse>>\
          \ result = api.getUserLists(page, limit, orderBy, direction, favoriteOnly,\
          \ onlyMine);\n        result.wait();\n        // put operations with result\
          \ here...\n    } catch(const std::exception& e) {\n        std::cout <<\
          \ \"getUserLists() exception: \" << e.what() << '\\n';\n    }\n\n    return\
          \ 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\norder_by = \"id\"\ndirection\
          \ = \"desc\"\nfavorite_only = 0\nonly_mine = 0\n\ntry:\n    # GetUserListsPaginatedResponse\
          \ object\n    result = api_instance.get_user_lists(page=page, limit=limit,\
          \ order_by=order_by, direction=direction, favorite_only=favorite_only, only_mine=only_mine)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_user_lists: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $orderBy\
          \ = 'id';\nmy $direction = 'desc';\nmy $favoriteOnly = 0;\nmy $onlyMine\
          \ = 0;\n\neval {\n    # GetUserListsPaginatedResponse object\n    my $result\
          \ = $api_instance->get_user_lists(page => $page, limit => $limit, orderBy\
          \ => $orderBy, direction => $direction, favoriteOnly => $favoriteOnly, onlyMine\
          \ => $onlyMine);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when\
          \ calling TextMagicApi->get_user_lists: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a new list from the submitted data."
      description: ""
      operationId: "createList"
      parameters:
      - in: "body"
        name: "CreateListInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateListInputObject"
        x-exportParamName: "CreateListInputObject"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateListInputObject();\n\
          \n// Required parameters\n$input->setName(\"New test list\");\n$input->setShared(true);\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setFavorited(true);\n\
          $input->setIsDefault(true);\n\ntry {\n    // ResourceLinkResponse class\
          \ object\n    $result = $api->createList($input);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->createList: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateListInputObject input = new CreateListInputObject();\n\n\
          \        // Required parameters\n        input.setName(\"New test list\"\
          );\n        input.setShared(true);\n\n        // Optional parameters, you\
          \ can skip these setters calls\n        input.setFavorited(true);\n    \
          \    input.setIsDefault(true);\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.createList(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling createList\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"New test list\",\n    shared: true,\n    // Optional\
          \ parameters\n    favorited: true,\n    isDefault: true,\n}\n\napi.createList(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateListInputObject.new\n\
          \n# Required parameters\nobj.name = \"New test list\"\nobj.shared = true\n\
          # Optional parameters, you can skip them\nobj.favorited = true\nobj.is_default\
          \ = true\n\nbegin\n    # ResourceLinkResponse object\n    result = api.create_list(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->create_list: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateListInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"New test list\";\n            obj.Shared = true;\n\
          \n            // Optional parameters, you can skip these setters calls\n\
          \            obj.Favorited = true;\n            obj.IsDefault = true;\n\n\
          \            try {\n                // ResourceLinkResponse class object\n\
          \                var result = apiInstance.CreateList(obj);\n           \
          \     // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling createList: \"+e.Message);\n            }\n     \
          \   }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateListInputObject With {\n            .Name = \"New test list\",\n\
          \            .Shared = true,\n            .Favorited = true,\n         \
          \   .IsDefault = true\n        }\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.CreateList(obj)\n \
          \           ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling createList: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"New test list\",\n    \
          \    Shared: true,\n        // Optional parameters, you can skip them\n\
          \        Favorited: true,\n        IsDefault: true,\n    }\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.CreateList(auth, input)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateListInputObject>\
          \ input(new CreateListInputObject);\n    // Required parameters\n    input->setName(\"\
          New test list\");\n    input->setShared(true);\n    // Optional parameters,\
          \ you can skip them\n    input->setFavorited(true);\n    input->setIsDefault(true);\n\
          \n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>> result\
          \ = api.createList(input);\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"createList() exception: \" << e.what() << '\\n';\n    }\n\n    return\
          \ 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateListInputObject()\n\n# Required parameters\ninput.name\
          \ = \"New test list\"\ninput.shared = true\n# Optional parameters, you can\
          \ skip them\ninput.favorited = true\ninput.is_default = true\n\ntry:\n \
          \   # ResourceLinkResponse object\n    result = api_instance.create_list(create_list_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->create_list: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateListInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateListInputObject->new(\n\
          \    # Required parameters\n    name => 'New test list',\n    shared =>\
          \ 1,\n    # Optional parameters, you can skip them\n    favorited => 1,\n\
          \    isDefault => 1,\n);\n\neval {\n    # ResourceLinkResponse object\n\
          \    my $result = $api_instance->create_list(create_list_input_object =>\
          \ $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->create_list: $@\\n\";\n}"
  /api/v2/lists/{id}/contacts:
    get:
      tags:
      - "TextMagic"
      summary: "Fetch user contacts by given group id."
      description: "A useful synonym for \"contacts/search\" command with provided\
        \ \"listId\" parameter."
      operationId: "getContactsByListId"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        description: "Given group Id."
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetContactsByListIdPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n// Optional, you can pass them as null values to getContactsByListId\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $orderBy = \"id\";\n$direction = \"desc\";\n\ntry {\n    // GetContactsByListIdPaginatedResponse\
          \ class object\n    $result = $api->getContactsByListId($id, $page, $limit,\
          \ $orderBy, $direction);\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getContactsByListId: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n        // Optional, you can pass them as null values\
          \ to getContactsByListId method below, default values will be used\n   \
          \     int page = 1;\n        int limit = 10;\n        String orderBy = \"\
          id\";\n        String direction = \"desc\";\n\n        try {\n         \
          \   // GetContactsByListIdPaginatedResponse class object\n            GetContactsByListIdPaginatedResponse\
          \ obj = apiInstance.getContactsByListId(id, page, limit, orderBy, direction);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getContactsByListId\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\nparams = {\n// Optional parameters\n    page: 1,\n    limit:\
          \ 10,\n    orderBy: \"id\",\n    direction: \"desc\",\n}\n\napi.getContactsByListId(id,\
          \ ).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\nparams = {\n  # Optional\
          \ parameters\n  page: 1,\n  limit: 10,\n  order_by: 'id',\n  direction:\
          \ 'desc',\n}\n\nbegin\n    # GetContactsByListIdPaginatedResponse object\n\
          \    result = api.get_contacts_by_list_id(id, params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_contacts_by_list_id:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n            // Optional, you can pass them as null values to getContactsByListId\
          \ method below, default values will be used\n            int page = 1;\n\
          \            int limit = 10;\n            string orderBy = \"id\";\n   \
          \         string direction = \"desc\";\n\n            try {\n          \
          \      // GetContactsByListIdPaginatedResponse class object\n          \
          \      var result = apiInstance.GetContactsByListId(id, page, limit, orderBy,\
          \ direction);\n                // ...\n            } catch (Exception e)\
          \ {\n                Console.WriteLine(\"Exception when calling getContactsByListId:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n        ' Optional, you can pass them as null values to getContactsByListId\
          \ method below, default values will be used\n        Dim page As Integer\
          \ = 1\n        Dim limit As Integer = 10\n        Dim orderBy As String\
          \ = \"id\"\n        Dim direction As String = \"desc\"\n\n        Try\n\
          \            ' GetContactsByListIdPaginatedResponse class object\n     \
          \       Dim result = apiInstance.GetContactsByListId(id, page, limit, orderBy,\
          \ direction)\n            ' ...\n        Catch e As Exception\n        \
          \    Console.WriteLine(\"Exception when calling getContactsByListId: \"\
          \ + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    opts := tm.GetContactsByListIdOpts{\n        // Optional parameters\n\
          \        Page: optional.NewInt32(1),\n        Limit: optional.NewInt32(10),\n\
          \        OrderBy: optional.NewString(\"id\"),\n        Direction: optional.NewString(\"\
          desc\"),\n    }\n\n    // tm.GetContactsByListIdPaginatedResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetContactsByListId(auth, id,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n    // Optional parameters.\
          \ Important: if you want to use default value then pass boost::none value\n\
          \    int page = 1;\n    int limit = 10;\n    std::string orderBy = \"id\"\
          ;\n    std::string direction = \"desc\";\n\n    try {\n        pplx::task<std::shared_ptr<GetContactsByListIdPaginatedResponse>>\
          \ result = api.getContactsByListId(id, page, limit, orderBy, direction);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getContactsByListId()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          # Optional params, you can skip them\npage = 1\nlimit = 10\norder_by = \"\
          id\"\ndirection = \"desc\"\n\ntry:\n    # GetContactsByListIdPaginatedResponse\
          \ object\n    result = api_instance.get_contacts_by_list_id(id=id, page=page,\
          \ limit=limit, order_by=order_by, direction=direction)\n    # ...\nexcept\
          \ ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_contacts_by_list_id:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          # Optional params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy\
          \ $orderBy = 'id';\nmy $direction = 'desc';\n\neval {\n    # GetContactsByListIdPaginatedResponse\
          \ object\n    my $result = $api_instance->get_contacts_by_list_id(id =>\
          \ $id, page => $page, limit => $limit, orderBy => $orderBy, direction =>\
          \ $direction);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_contacts_by_list_id: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Reset list members to the specified contacts."
      description: ""
      operationId: "clearAndAssignContactsToList"
      parameters:
      - in: "body"
        name: "ClearAndAssignContactsToListInputObject"
        description: "Contact ID(s), separated by comma or 'all' to add all contacts\
          \ belonging to the current user"
        required: true
        schema:
          $ref: "#/definitions/ClearAndAssignContactsToListInputObject"
        x-exportParamName: "ClearAndAssignContactsToListInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to edit list shared to you"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new ClearAndAssignContactsToListInputObject();\n\
          \n// Required parameters\n$input->setContacts(\"1,2\");\n$id = 1;\n\ntry\
          \ {\n    // ResourceLinkResponse class object\n    $result = $api->clearAndAssignContactsToList($input$id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->clearAndAssignContactsToList: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        ClearAndAssignContactsToListInputObject input = new ClearAndAssignContactsToListInputObject();\n\
          \n        // Required parameters\n        input.setContacts(\"1,2\");\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.clearAndAssignContactsToList(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling clearAndAssignContactsToList\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    contacts: \"1,2\",\n}\nconst id = 1;\n\napi.clearAndAssignContactsToList(input,\
          \ id).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::ClearAndAssignContactsToListInputObject.new\n\
          \n# Required parameters\nobj.contacts = \"1,2\"\nid = 1\n\nbegin\n    #\
          \ ResourceLinkResponse object\n    result = api.clear_and_assign_contacts_to_list(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->clear_and_assign_contacts_to_list: #{e}\"\n\
          end"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new ClearAndAssignContactsToListInputObject();\n\n            // Required\
          \ parameters\n            obj.Contacts = \"1,2\";\n            int id =\
          \ 1;\n\n            try {\n                // ResourceLinkResponse class\
          \ object\n                var result = apiInstance.ClearAndAssignContactsToList(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling clearAndAssignContactsToList:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ ClearAndAssignContactsToListInputObject With {\n            .Contacts\
          \ = \"1,2\"\n        }\n        Dim id As Integer = 1\n\n        Try\n \
          \           ' ResourceLinkResponse class object\n            Dim result\
          \ = apiInstance.ClearAndAssignContactsToList(objid)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling clearAndAssignContactsToList: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Contacts: \"1,2\",\n    }\n   \
          \ // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse struct\n\
          \    result, _, err := client.TextMagicApi.ClearAndAssignContactsToList(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<ClearAndAssignContactsToListInputObject>\
          \ input(new ClearAndAssignContactsToListInputObject);\n    // Required parameters\n\
          \    input->setContacts(\"1,2\");\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.clearAndAssignContactsToList(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"clearAndAssignContactsToList()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.ClearAndAssignContactsToListInputObject()\n\n# Required parameters\n\
          input.contacts = \"1,2\"\nid = 1\n\ntry:\n    # ResourceLinkResponse object\n\
          \    result = api_instance.clear_and_assign_contacts_to_list(clear_and_assign_contacts_to_list_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->clear_and_assign_contacts_to_list: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::ClearAndAssignContactsToListInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::ClearAndAssignContactsToListInputObject->new(\n\
          \    # Required parameters\n    contacts => '1,2',\n);\nmy $id = 1;\n\n\
          eval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->clear_and_assign_contacts_to_list(clear_and_assign_contacts_to_list_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->clear_and_assign_contacts_to_list: $@\\n\"\
          ;\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Assign contacts to the specified list."
      description: ""
      operationId: "assignContactsToList"
      parameters:
      - in: "body"
        name: "AssignContactsToListInputObject"
        description: "Contact ID(s), separated by comma or 'all' to add all contacts\
          \ belonging to the current user"
        required: true
        schema:
          $ref: "#/definitions/AssignContactsToListInputObject"
        x-exportParamName: "AssignContactsToListInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to edit list shared to you"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new AssignContactsToListInputObject();\n\
          \n// Required parameters\n$input->setContacts(\"1,2\");\n$id = 1;\n\ntry\
          \ {\n    // ResourceLinkResponse class object\n    $result = $api->assignContactsToList($input$id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->assignContactsToList: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        AssignContactsToListInputObject input = new AssignContactsToListInputObject();\n\
          \n        // Required parameters\n        input.setContacts(\"1,2\");\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.assignContactsToList(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling assignContactsToList\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    contacts: \"1,2\",\n}\nconst id = 1;\n\napi.assignContactsToList(input,\
          \ id).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::AssignContactsToListInputObject.new\n\
          \n# Required parameters\nobj.contacts = \"1,2\"\nid = 1\n\nbegin\n    #\
          \ ResourceLinkResponse object\n    result = api.assign_contacts_to_list(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->assign_contacts_to_list: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new AssignContactsToListInputObject();\n\n            // Required parameters\n\
          \            obj.Contacts = \"1,2\";\n            int id = 1;\n\n      \
          \      try {\n                // ResourceLinkResponse class object\n   \
          \             var result = apiInstance.AssignContactsToList(objid);\n  \
          \              // ...\n            } catch (Exception e) {\n           \
          \     Console.WriteLine(\"Exception when calling assignContactsToList: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ AssignContactsToListInputObject With {\n            .Contacts = \"1,2\"\
          \n        }\n        Dim id As Integer = 1\n\n        Try\n            '\
          \ ResourceLinkResponse class object\n            Dim result = apiInstance.AssignContactsToList(objid)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling assignContactsToList: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Contacts: \"1,2\",\n    }\n   \
          \ // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse struct\n\
          \    result, _, err := client.TextMagicApi.AssignContactsToList(auth, input,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<AssignContactsToListInputObject>\
          \ input(new AssignContactsToListInputObject);\n    // Required parameters\n\
          \    input->setContacts(\"1,2\");\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.assignContactsToList(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"assignContactsToList()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.AssignContactsToListInputObject()\n\n# Required parameters\n\
          input.contacts = \"1,2\"\nid = 1\n\ntry:\n    # ResourceLinkResponse object\n\
          \    result = api_instance.assign_contacts_to_list(assign_contacts_to_list_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->assign_contacts_to_list: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::AssignContactsToListInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::AssignContactsToListInputObject->new(\n\
          \    # Required parameters\n    contacts => '1,2',\n);\nmy $id = 1;\n\n\
          eval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->assign_contacts_to_list(assign_contacts_to_list_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->assign_contacts_to_list: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Unassign contacts from the specified list."
      description: ""
      operationId: "deleteContactsFromList"
      produces: []
      parameters:
      - in: "body"
        name: "deleteContacsFromListObject"
        description: "Contact ID(s), separated by comma"
        required: true
        schema:
          $ref: "#/definitions/deleteContacsFromListObject"
        x-exportParamName: "DeleteContacsFromListObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to edit list shared to you"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteContactsFromList($id);\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteContactsFromList:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteContactsFromList(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteContactsFromList\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteContactsFromList(id).then(function (data) {\n   \
          \ console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_contacts_from_list(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_contacts_from_list:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteContactsFromList(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteContactsFromList: \"+e.Message);\n        \
          \    }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteContactsFromList(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteContactsFromList: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteContactsFromList(auth, id)\n\n    if err\
          \ != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n\
          }\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteContactsFromList(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteContactsFromList()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_contacts_from_list(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_contacts_from_list:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_contacts_from_list(id => $id);\n};\n\
          \nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_contacts_from_list:\
          \ $@\\n\";\n}"
  /api/v2/lists/{id}/contacts/ids:
    get:
      tags:
      - "TextMagic"
      summary: "Fetch all contacts IDs belonging to the list with ID."
      description: ""
      operationId: "getListContactsIds"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetListContactsIdsResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // GetListContactsIdsResponse class object\n\
          \    $result = $api->getListContactsIds($id);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getListContactsIds:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // GetListContactsIdsResponse\
          \ class object\n            GetListContactsIdsResponse obj = apiInstance.getListContactsIds(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getListContactsIds\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getListContactsIds(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # GetListContactsIdsResponse\
          \ object\n    result = api.get_list_contacts_ids(id)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_list_contacts_ids:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // GetListContactsIdsResponse\
          \ class object\n                var result = apiInstance.GetListContactsIds(id);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getListContactsIds: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' GetListContactsIdsResponse class object\n\
          \            Dim result = apiInstance.GetListContactsIds(id)\n         \
          \   ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getListContactsIds: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.GetListContactsIdsResponse struct\n    result, _, err := client.TextMagicApi.GetListContactsIds(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<GetListContactsIdsResponse>> result = api.getListContactsIds(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getListContactsIds()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # GetListContactsIdsResponse object\n    result = api_instance.get_list_contacts_ids(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_list_contacts_ids: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # GetListContactsIdsResponse object\n    my $result = $api_instance->get_list_contacts_ids(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_list_contacts_ids: $@\\n\";\n}"
  /api/v2/lists/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single list."
      description: ""
      operationId: "getList"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/Group"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // Group class object\n    $result = $api->getList($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getList: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // Group class object\n\
          \            Group obj = apiInstance.getList(id);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getList\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getList(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # Group\
          \ object\n    result = api.get_list(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_list: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // Group class object\n   \
          \             var result = apiInstance.GetList(id);\n                //\
          \ ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getList: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' Group class object\n            Dim\
          \ result = apiInstance.GetList(id)\n            ' ...\n        Catch e As\
          \ Exception\n            Console.WriteLine(\"Exception when calling getList:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.Group struct\n    result, _, err := client.TextMagicApi.GetList(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<Group>> result = api.getList(id);\n    \
          \    result.wait();\n        // put operations with result here...\n   \
          \ } catch(const std::exception& e) {\n        std::cout << \"getList() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # Group object\n    result = api_instance.get_list(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_list: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # Group object\n    my $result = $api_instance->get_list(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_list: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update existing list."
      description: ""
      operationId: "updateList"
      parameters:
      - in: "body"
        name: "updateListObject"
        required: false
        schema:
          $ref: "#/definitions/updateListObject"
        x-exportParamName: "UpdateListObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Returned when the form has errors"
        403:
          description: "Returned when trying to edit list shared to you"
        404:
          description: "Returned when no list found"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateListInputObject();\n\
          \n// Required parameters\n$input->setName(\"New test list\");\n$input->setShared(true);\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setFavorited(true);\n\
          $input->setIsDefault(true);\n$id = 1;\n\ntry {\n    // ResourceLinkResponse\
          \ class object\n    $result = $api->updateList($input$id);\n    // ...\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateList:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateListInputObject input = new UpdateListInputObject();\n\n\
          \        // Required parameters\n        input.setName(\"New test list\"\
          );\n        input.setShared(true);\n\n        // Optional parameters, you\
          \ can skip these setters calls\n        input.setFavorited(true);\n    \
          \    input.setIsDefault(true);\n        int id = 1;\n\n        try {\n \
          \           // ResourceLinkResponse class object\n            ResourceLinkResponse\
          \ obj = apiInstance.updateList(inputid);\n            // ...\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling updateList\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"New test list\",\n    shared: true,\n    // Optional\
          \ parameters\n    favorited: true,\n    isDefault: true,\n}\nconst id =\
          \ 1;\n\napi.updateList(input, id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateListInputObject.new\n\
          \n# Required parameters\nobj.name = \"New test list\"\nobj.shared = true\n\
          # Optional parameters, you can skip them\nobj.favorited = true\nobj.is_default\
          \ = true\nid = 1\n\nbegin\n    # ResourceLinkResponse object\n    result\
          \ = api.update_list(input, id)\n    # ...\nrescue TextMagic::ApiError =>\
          \ e\n    puts \"Exception when calling TextMagicApi->update_list: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateListInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"New test list\";\n            obj.Shared = true;\n\
          \n            // Optional parameters, you can skip these setters calls\n\
          \            obj.Favorited = true;\n            obj.IsDefault = true;\n\
          \            int id = 1;\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.UpdateList(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling updateList: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateListInputObject With {\n            .Name = \"New test list\",\n\
          \            .Shared = true,\n            .Favorited = true,\n         \
          \   .IsDefault = true\n        }\n        Dim id As Integer = 1\n\n    \
          \    Try\n            ' ResourceLinkResponse class object\n            Dim\
          \ result = apiInstance.UpdateList(objid)\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ updateList: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"New test list\",\n    \
          \    Shared: true,\n        // Optional parameters, you can skip them\n\
          \        Favorited: true,\n        IsDefault: true,\n    }\n    // Required\n\
          \    var id int32 = 1\n\n    // tm.ResourceLinkResponse struct\n    result,\
          \ _, err := client.TextMagicApi.UpdateList(auth, input, id)\n\n    if err\
          \ != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateListInputObject>\
          \ input(new UpdateListInputObject);\n    // Required parameters\n    input->setName(\"\
          New test list\");\n    input->setShared(true);\n    // Optional parameters,\
          \ you can skip them\n    input->setFavorited(true);\n    input->setIsDefault(true);\n\
          \n    int id = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.updateList(input, id);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateList() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateListInputObject()\n\n# Required parameters\ninput.name\
          \ = \"New test list\"\ninput.shared = true\n# Optional parameters, you can\
          \ skip them\ninput.favorited = true\ninput.is_default = true\nid = 1\n\n\
          try:\n    # ResourceLinkResponse object\n    result = api_instance.update_list(update_list_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_list: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateListInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateListInputObject->new(\n\
          \    # Required parameters\n    name => 'New test list',\n    shared =>\
          \ 1,\n    # Optional parameters, you can skip them\n    favorited => 1,\n\
          \    isDefault => 1,\n);\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse\
          \ object\n    my $result = $api_instance->update_list(update_list_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_list: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a single list."
      description: ""
      operationId: "deleteList"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Returned when trying to remove list associated with signup\
            \ form"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to remove list shared to you"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteList($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteList: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteList(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteList\");\n            e.printStackTrace();\n      \
          \  }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteList(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_list(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_list:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteList(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteList: \"+e.Message);\n            }\n     \
          \   }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteList(id)\n         \
          \   ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteList: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteList(auth, id)\n\n    if err != nil {\n \
          \       log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteList(id);\n        result.wait();\n \
          \   } catch(const std::exception& e) {\n        std::cout << \"deleteList()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_list(id=id)\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->delete_list: %s\\n\" %\
          \ e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_list(id => $id);\n};\n\nif ($@) {\n\
          \    warn \"Exception when calling TextMagicApi->delete_list: $@\\n\";\n\
          }"
  /api/v2/lists/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete list by given ID(s) or delete all lists."
      description: ""
      operationId: "deleteListsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteListsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteListsBulkInputObject"
        x-exportParamName: "DeleteListsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteListsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(0);\n\ntry {\n    $api->deleteListsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteListsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteListsBulkInputObject input = new DeleteListsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(0);\n\n        try\
          \ {\n            apiInstance.deleteListsBulk(input);\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling deleteListsBulk\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 0,\n\
          }\n\napi.deleteListsBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteListsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 0\n\nbegin\n    api.delete_lists_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_lists_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteListsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = 0;\n\n            try {\n                apiInstance.DeleteListsBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteListsBulk: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteListsBulkInputObject With {\n            .Ids = \"1,2,3\",\n   \
          \         .All = 0\n        }\n\n        Try\n            apiInstance.DeleteListsBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteListsBulk: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 0,\n    }\n\n    client.TextMagicApi.DeleteListsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteListsBulkInputObject>\
          \ input(new DeleteListsBulkInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(0);\n\n\
          \    try {\n        pplx::task result = api.deleteListsBulk(input);\n  \
          \      result.wait();\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"deleteListsBulk() exception: \" << e.what() << '\\n';\n    }\n\n\
          \    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteListsBulkInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.ids = \"1,2,3\"\ninput.all = 0\n\ntry:\n    api_instance.delete_lists_bulk(delete_lists_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_lists_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteListsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteListsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->delete_lists_bulk(delete_lists_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_lists_bulk:\
          \ $@\\n\";\n}"
  /api/v2/lists/{id}/contacts/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete contact from list by given ID(s) or all contacts from list."
      description: ""
      operationId: "deleteListContactsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteListContactsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteListContactsBulkInputObject"
        x-exportParamName: "DeleteListContactsBulkInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteListContactsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(0);\n$id = 1;\n\ntry {\n    $api->deleteListContactsBulk($input$id);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteListContactsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteListContactsBulkInputObject input = new DeleteListContactsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(0);\n        int id\
          \ = 1;\n\n        try {\n            apiInstance.deleteListContactsBulk(inputid);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteListContactsBulk\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 0,\n\
          }\nconst id = 1;\n\napi.deleteListContactsBulk(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteListContactsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 0\nid = 1\n\nbegin\n    api.delete_list_contacts_bulk(input, id)\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_list_contacts_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteListContactsBulkInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Ids = \"\
          1,2,3\";\n            obj.All = 0;\n            int id = 1;\n\n        \
          \    try {\n                apiInstance.DeleteListContactsBulk(objid);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteListContactsBulk: \"+e.Message);\n        \
          \    }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteListContactsBulkInputObject With {\n            .Ids = \"1,2,3\"\
          ,\n            .All = 0\n        }\n        Dim id As Integer = 1\n\n  \
          \      Try\n            apiInstance.DeleteListContactsBulk(objid)\n    \
          \        ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteListContactsBulk: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 0,\n    }\n    // Required\n    var id int32 = 1\n\n   \
          \ client.TextMagicApi.DeleteListContactsBulk(auth, input, id)\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n \
          \   }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteListContactsBulkInputObject>\
          \ input(new DeleteListContactsBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(0);\n\
          \n    int id = 1;\n\n    try {\n        pplx::task result = api.deleteListContactsBulk(input,\
          \ id);\n        result.wait();\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"deleteListContactsBulk() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteListContactsBulkInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.ids = \"1,2,3\"\ninput.all = 0\nid = 1\n\ntry:\n\
          \    api_instance.delete_list_contacts_bulk(delete_list_contacts_bulk_input_object=input,\
          \ id=id)\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->delete_list_contacts_bulk: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteListContactsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteListContactsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\nmy $id = 1;\n\neval {\n    $api_instance->delete_list_contacts_bulk(delete_list_contacts_bulk_input_object\
          \ => $input, id => $id);\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->delete_list_contacts_bulk: $@\\n\";\n}"
  /api/v2/lists/{id}/avatar:
    delete:
      tags:
      - "TextMagic"
      summary: "Delete an avatar for the list."
      description: ""
      operationId: "deleteListAvatar"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          description: "Avatar has been deleted with success"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when trying to edit list shared to current user"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteListAvatar($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteListAvatar:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteListAvatar(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteListAvatar\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteListAvatar(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_list_avatar(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_list_avatar:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteListAvatar(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteListAvatar: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteListAvatar(id)\n   \
          \         ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteListAvatar: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteListAvatar(auth, id)\n\n    if err != nil\
          \ {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteListAvatar(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteListAvatar()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_list_avatar(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_list_avatar:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_list_avatar(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->delete_list_avatar:\
          \ $@\\n\";\n}"
  /api/v2/templates/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find templates by criteria"
      description: ""
      operationId: "searchTemplates"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "ids"
        in: "query"
        description: "Find template by ID(s)"
        required: false
        type: "string"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Find template by name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "content"
        in: "query"
        description: "Find template by content"
        required: false
        type: "string"
        x-exportParamName: "Content"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchTemplatesPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchTemplates method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$ids = \"\
          sampleValue\";\n$name = \"sampleValue\";\n$content = \"sampleValue\";\n\n\
          try {\n    // SearchTemplatesPaginatedResponse class object\n    $result\
          \ = $api->searchTemplates($page, $limit, $ids, $name, $content);\n    //\
          \ ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->searchTemplates:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchTemplates\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String ids = \"sampleValue\";\n        String\
          \ name = \"sampleValue\";\n        String content = \"sampleValue\";\n\n\
          \        try {\n            // SearchTemplatesPaginatedResponse class object\n\
          \            SearchTemplatesPaginatedResponse obj = apiInstance.searchTemplates(page,\
          \ limit, ids, name, content);\n            // ...\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling searchTemplates\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    ids: \"\
          sampleValue\",\n    name: \"sampleValue\",\n    content: \"sampleValue\"\
          ,\n}\n\napi.searchTemplates().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  ids: 'sampleValue',\n  name: 'sampleValue',\n\
          \  content: 'sampleValue',\n}\n\nbegin\n    # SearchTemplatesPaginatedResponse\
          \ object\n    result = api.search_templates(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->search_templates:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchTemplates method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string ids = \"sampleValue\";\n            string name\
          \ = \"sampleValue\";\n            string content = \"sampleValue\";\n\n\
          \            try {\n                // SearchTemplatesPaginatedResponse\
          \ class object\n                var result = apiInstance.SearchTemplates(page,\
          \ limit, ids, name, content);\n                // ...\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ searchTemplates: \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchTemplates method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim ids As String = \"sampleValue\"\n       \
          \ Dim name As String = \"sampleValue\"\n        Dim content As String =\
          \ \"sampleValue\"\n\n        Try\n            ' SearchTemplatesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.SearchTemplates(page,\
          \ limit, ids, name, content)\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling searchTemplates:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchTemplatesOpts{\n  \
          \      // Optional parameters\n        Page: optional.NewInt32(1),\n   \
          \     Limit: optional.NewInt32(10),\n        Ids: optional.NewString(\"\
          sampleValue\"),\n        Name: optional.NewString(\"sampleValue\"),\n  \
          \      Content: optional.NewString(\"sampleValue\"),\n    }\n\n    // tm.SearchTemplatesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.SearchTemplates(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string ids = \"sampleValue\"\
          ;\n    std::string name = \"sampleValue\";\n    std::string content = \"\
          sampleValue\";\n\n    try {\n        pplx::task<std::shared_ptr<SearchTemplatesPaginatedResponse>>\
          \ result = api.searchTemplates(page, limit, ids, name, content);\n     \
          \   result.wait();\n        // put operations with result here...\n    }\
          \ catch(const std::exception& e) {\n        std::cout << \"searchTemplates()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nids = \"sampleValue\"\
          \nname = \"sampleValue\"\ncontent = \"sampleValue\"\n\ntry:\n    # SearchTemplatesPaginatedResponse\
          \ object\n    result = api_instance.search_templates(page=page, limit=limit,\
          \ ids=ids, name=name, content=content)\n    # ...\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->search_templates:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $ids = 'sampleValue';\n\
          my $name = 'sampleValue';\nmy $content = 'sampleValue';\n\neval {\n    #\
          \ SearchTemplatesPaginatedResponse object\n    my $result = $api_instance->search_templates(page\
          \ => $page, limit => $limit, ids => $ids, name => $name, content => $content);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->search_templates:\
          \ $@\\n\";\n}"
  /api/v2/templates:
    get:
      tags:
      - "TextMagic"
      summary: "Get all templates"
      description: ""
      operationId: "getAllTemplates"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        x-example: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        x-example: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllTemplatesPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllTemplates method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n\ntry {\n\
          \    // GetAllTemplatesPaginatedResponse class object\n    $result = $api->getAllTemplates($page,\
          \ $limit);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception when\
          \ calling TextMagicApi->getAllTemplates: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllTemplates\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // GetAllTemplatesPaginatedResponse\
          \ class object\n            GetAllTemplatesPaginatedResponse obj = apiInstance.getAllTemplates(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getAllTemplates\");\n\
          \            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getAllTemplates().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetAllTemplatesPaginatedResponse\
          \ object\n    result = api.get_all_templates(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_all_templates:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllTemplates method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // GetAllTemplatesPaginatedResponse\
          \ class object\n                var result = apiInstance.GetAllTemplates(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getAllTemplates:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllTemplates method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' GetAllTemplatesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetAllTemplates(page,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getAllTemplates: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllTemplatesOpts{\n  \
          \      // Optional parameters\n        Page: optional.NewInt32(1),\n   \
          \     Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetAllTemplatesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetAllTemplates(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetAllTemplatesPaginatedResponse>>\
          \ result = api.getAllTemplates(page, limit);\n        result.wait();\n \
          \       // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getAllTemplates() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetAllTemplatesPaginatedResponse\
          \ object\n    result = api_instance.get_all_templates(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_all_templates: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetAllTemplatesPaginatedResponse object\n    my $result = $api_instance->get_all_templates(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_all_templates: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a template"
      description: ""
      operationId: "createTemplate"
      parameters:
      - in: "body"
        name: "CreateTemplateInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateTemplateInputObject"
        x-exportParamName: "CreateTemplateInputObject"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Returned when the form has errors"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateTemplateInputObject();\n\
          \n// Required parameters\n$input->setName(\"New template name\");\n$input->setContent(\"\
          New template content\");\n\ntry {\n    // ResourceLinkResponse class object\n\
          \    $result = $api->createTemplate($input);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->createTemplate:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateTemplateInputObject input = new CreateTemplateInputObject();\n\
          \n        // Required parameters\n        input.setName(\"New template name\"\
          );\n        input.setContent(\"New template content\");\n\n        try {\n\
          \            // ResourceLinkResponse class object\n            ResourceLinkResponse\
          \ obj = apiInstance.createTemplate(input);\n            // ...\n       \
          \ } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling createTemplate\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"New template name\",\n    content: \"New template\
          \ content\",\n}\n\napi.createTemplate(input).then(function (data) {\n  \
          \  console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateTemplateInputObject.new\n\
          \n# Required parameters\nobj.name = \"New template name\"\nobj.content =\
          \ \"New template content\"\n\nbegin\n    # ResourceLinkResponse object\n\
          \    result = api.create_template(input)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->create_template:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateTemplateInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"New template name\";\n            obj.Content\
          \ = \"New template content\";\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.CreateTemplate(obj);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling createTemplate: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateTemplateInputObject With {\n            .Name = \"New template name\"\
          ,\n            .Content = \"New template content\"\n        }\n\n      \
          \  Try\n            ' ResourceLinkResponse class object\n            Dim\
          \ result = apiInstance.CreateTemplate(obj)\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ createTemplate: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"New template name\",\n\
          \        Content: \"New template content\",\n    }\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.CreateTemplate(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateTemplateInputObject>\
          \ input(new CreateTemplateInputObject);\n    // Required parameters\n  \
          \  input->setName(\"New template name\");\n    input->setContent(\"New template\
          \ content\");\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.createTemplate(input);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"createTemplate() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateTemplateInputObject()\n\n# Required parameters\ninput.name\
          \ = \"New template name\"\ninput.content = \"New template content\"\n\n\
          try:\n    # ResourceLinkResponse object\n    result = api_instance.create_template(create_template_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->create_template: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateTemplateInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateTemplateInputObject->new(\n\
          \    # Required parameters\n    name => 'New template name',\n    content\
          \ => 'New template content',\n);\n\neval {\n    # ResourceLinkResponse object\n\
          \    my $result = $api_instance->create_template(create_template_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->create_template: $@\\n\";\n}"
  /api/v2/templates/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a template details"
      description: ""
      operationId: "getTemplate"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/MessageTemplate"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // MessageTemplate class object\n    $result\
          \ = $api->getTemplate($id);\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getTemplate: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // MessageTemplate class\
          \ object\n            MessageTemplate obj = apiInstance.getTemplate(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getTemplate\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getTemplate(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # MessageTemplate\
          \ object\n    result = api.get_template(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_template: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // MessageTemplate class object\n\
          \                var result = apiInstance.GetTemplate(id);\n           \
          \     // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getTemplate: \"+e.Message);\n            }\n    \
          \    }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' MessageTemplate class object\n     \
          \       Dim result = apiInstance.GetTemplate(id)\n            ' ...\n  \
          \      Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling getTemplate: \" + e.Message)\n        End Try\n    End Sub\nEnd\
          \ Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.MessageTemplate struct\n    result, _, err := client.TextMagicApi.GetTemplate(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<MessageTemplate>> result = api.getTemplate(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getTemplate()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # MessageTemplate object\n    result = api_instance.get_template(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_template: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # MessageTemplate object\n    my $result = $api_instance->get_template(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_template: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update a template"
      description: ""
      operationId: "updateTemplate"
      parameters:
      - in: "body"
        name: "UpdateTemplateInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateTemplateInputObject"
        x-exportParamName: "UpdateTemplateInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Returned when the form has errors"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateTemplateInputObject();\n\
          \n// Required parameters\n$input->setName(\"New template name\");\n$input->setContent(\"\
          New template content\");\n$id = 1;\n\ntry {\n    // ResourceLinkResponse\
          \ class object\n    $result = $api->updateTemplate($input$id);\n    // ...\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateTemplate:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateTemplateInputObject input = new UpdateTemplateInputObject();\n\
          \n        // Required parameters\n        input.setName(\"New template name\"\
          );\n        input.setContent(\"New template content\");\n        int id\
          \ = 1;\n\n        try {\n            // ResourceLinkResponse class object\n\
          \            ResourceLinkResponse obj = apiInstance.updateTemplate(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling updateTemplate\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"New template name\",\n    content: \"New template\
          \ content\",\n}\nconst id = 1;\n\napi.updateTemplate(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateTemplateInputObject.new\n\
          \n# Required parameters\nobj.name = \"New template name\"\nobj.content =\
          \ \"New template content\"\nid = 1\n\nbegin\n    # ResourceLinkResponse\
          \ object\n    result = api.update_template(input, id)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->update_template:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateTemplateInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"New template name\";\n            obj.Content\
          \ = \"New template content\";\n            int id = 1;\n\n            try\
          \ {\n                // ResourceLinkResponse class object\n            \
          \    var result = apiInstance.UpdateTemplate(objid);\n                //\
          \ ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling updateTemplate: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateTemplateInputObject With {\n            .Name = \"New template name\"\
          ,\n            .Content = \"New template content\"\n        }\n        Dim\
          \ id As Integer = 1\n\n        Try\n            ' ResourceLinkResponse class\
          \ object\n            Dim result = apiInstance.UpdateTemplate(objid)\n \
          \           ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateTemplate: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"New template name\",\n\
          \        Content: \"New template content\",\n    }\n    // Required\n  \
          \  var id int32 = 1\n\n    // tm.ResourceLinkResponse struct\n    result,\
          \ _, err := client.TextMagicApi.UpdateTemplate(auth, input, id)\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateTemplateInputObject>\
          \ input(new UpdateTemplateInputObject);\n    // Required parameters\n  \
          \  input->setName(\"New template name\");\n    input->setContent(\"New template\
          \ content\");\n\n    int id = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.updateTemplate(input, id);\n        result.wait();\n    \
          \    // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateTemplate() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateTemplateInputObject()\n\n# Required parameters\ninput.name\
          \ = \"New template name\"\ninput.content = \"New template content\"\nid\
          \ = 1\n\ntry:\n    # ResourceLinkResponse object\n    result = api_instance.update_template(update_template_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_template: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateTemplateInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateTemplateInputObject->new(\n\
          \    # Required parameters\n    name => 'New template name',\n    content\
          \ => 'New template content',\n);\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse\
          \ object\n    my $result = $api_instance->update_template(update_template_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_template: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a template"
      description: ""
      operationId: "deleteTemplate"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteTemplate($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteTemplate:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteTemplate(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteTemplate\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteTemplate(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_template(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_template:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteTemplate(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteTemplate: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteTemplate(id)\n     \
          \       ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteTemplate: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteTemplate(auth, id)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteTemplate(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteTemplate()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_template(id=id)\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->delete_template:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_template(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->delete_template: $@\\\
          n\";\n}"
  /api/v2/templates/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete templates (bulk)"
      description: ""
      operationId: "deleteTemplatesBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteTemplatesBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteTemplatesBulkInputObject"
        x-exportParamName: "DeleteTemplatesBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteTemplatesBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(true);\n\ntry {\n    $api->deleteTemplatesBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteTemplatesBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteTemplatesBulkInputObject input = new DeleteTemplatesBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(true);\n\n        try\
          \ {\n            apiInstance.deleteTemplatesBulk(input);\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ deleteTemplatesBulk\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: true,\n\
          }\n\napi.deleteTemplatesBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteTemplatesBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ true\n\nbegin\n    api.delete_templates_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_templates_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteTemplatesBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = true;\n\n            try {\n                apiInstance.DeleteTemplatesBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteTemplatesBulk: \"+e.Message);\n           \
          \ }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteTemplatesBulkInputObject With {\n            .Ids = \"1,2,3\",\n\
          \            .All = true\n        }\n\n        Try\n            apiInstance.DeleteTemplatesBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteTemplatesBulk: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: true,\n    }\n\n    client.TextMagicApi.DeleteTemplatesBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteTemplatesBulkInputObject>\
          \ input(new DeleteTemplatesBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(true);\n\
          \n    try {\n        pplx::task result = api.deleteTemplatesBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"deleteTemplatesBulk() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteTemplatesBulkInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.ids = \"1,2,3\"\ninput.all = true\n\ntry:\n    api_instance.delete_templates_bulk(delete_templates_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_templates_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteTemplatesBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteTemplatesBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 1,\n);\n\neval {\n    $api_instance->delete_templates_bulk(delete_templates_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_templates_bulk:\
          \ $@\\n\";\n}"
  /api/v2/messages:
    get:
      tags:
      - "TextMagic"
      summary: "Get all messages"
      description: "Get all user oubound messages."
      operationId: "getAllOutboundMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "lastId"
        in: "query"
        description: "Filter results by ID, selecting all values lesser than the specified\
          \ ID. Note that \\'page\\' parameter is ignored when \\'lastId\\' is specified"
        required: false
        type: "integer"
        x-exportParamName: "LastId"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllOutboundMessagesPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllOutboundMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $lastId = 1;\n\ntry {\n    // GetAllOutboundMessagesPaginatedResponse class\
          \ object\n    $result = $api->getAllOutboundMessages($page, $limit, $lastId);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getAllOutboundMessages: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllOutboundMessages\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        int lastId = 1;\n\n        try {\n      \
          \      // GetAllOutboundMessagesPaginatedResponse class object\n       \
          \     GetAllOutboundMessagesPaginatedResponse obj = apiInstance.getAllOutboundMessages(page,\
          \ limit, lastId);\n            // ...\n        } catch (ApiException e)\
          \ {\n            System.err.println(\"Exception when calling getAllOutboundMessages\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    lastId:\
          \ 1,\n}\n\napi.getAllOutboundMessages().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  last_id: 1,\n}\n\nbegin\n    # GetAllOutboundMessagesPaginatedResponse\
          \ object\n    result = api.get_all_outbound_messages(params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_all_outbound_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllOutboundMessages method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            int lastId = 1;\n\n            try {\n      \
          \          // GetAllOutboundMessagesPaginatedResponse class object\n   \
          \             var result = apiInstance.GetAllOutboundMessages(page, limit,\
          \ lastId);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getAllOutboundMessages:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllOutboundMessages method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim lastId As Integer = 1\n\n     \
          \   Try\n            ' GetAllOutboundMessagesPaginatedResponse class object\n\
          \            Dim result = apiInstance.GetAllOutboundMessages(page, limit,\
          \ lastId)\n            ' ...\n        Catch e As Exception\n           \
          \ Console.WriteLine(\"Exception when calling getAllOutboundMessages: \"\
          \ + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllOutboundMessagesOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        LastId: optional.NewInt32(1),\n\
          \    }\n\n    // tm.GetAllOutboundMessagesPaginatedResponse struct\n   \
          \ result, _, err := client.TextMagicApi.GetAllOutboundMessages(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    int lastId = 1;\n\n    try {\n   \
          \     pplx::task<std::shared_ptr<GetAllOutboundMessagesPaginatedResponse>>\
          \ result = api.getAllOutboundMessages(page, limit, lastId);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getAllOutboundMessages() exception: \" <<\
          \ e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nlast_id = 1\n\ntry:\n\
          \    # GetAllOutboundMessagesPaginatedResponse object\n    result = api_instance.get_all_outbound_messages(page=page,\
          \ limit=limit, last_id=last_id)\n    # ...\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->get_all_outbound_messages:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $lastId\
          \ = 1;\n\neval {\n    # GetAllOutboundMessagesPaginatedResponse object\n\
          \    my $result = $api_instance->get_all_outbound_messages(page => $page,\
          \ limit => $limit, lastId => $lastId);\n    # ...\n};\n\nif ($@) {\n   \
          \ warn \"Exception when calling TextMagicApi->get_all_outbound_messages:\
          \ $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Send message"
      description: "The main entrypoint to send messages. See examples above for the\
        \ reference."
      operationId: "sendMessage"
      parameters:
      - in: "body"
        name: "SendMessageInputObject"
        required: true
        schema:
          $ref: "#/definitions/SendMessageInputObject"
        x-exportParamName: "SendMessageInputObject"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SendMessageResponse"
        202:
          description: "Returned when bulk session has been created"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new SendMessageInputObject();\n\
          \n// Required parameters\n$input->setText(\"Test message test\");\n$input->setPhones(\"\
          +19993322111,+19993322110\");\n\n// Optional parameters, you can skip these\
          \ setters calls\n$input->setTemplateId(1);\n$input->setSendingTime(1565606455);\n\
          $input->setSendingDateTime(\"2020-05-27 13:02:33\");\n$input->setSendingTimezone(\"\
          America/Buenos_Aires\");\n$input->setContacts(\"1,2,3,4\");\n$input->setLists(\"\
          1,2,3,4\");\n$input->setCutExtra(true);\n$input->setPartsCount(6);\n$input->setReferenceId(1);\n\
          $input->setFrom(\"Test sender id\");\n$input->setRule(\"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          );\n$input->setCreateChat(false);\n$input->setTts(false);\n$input->setLocal(false);\n\
          $input->setLocalCountry(\"US\");\n\ntry {\n    // SendMessageResponse class\
          \ object\n    $result = $api->sendMessage($input);\n    // ...\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->sendMessage:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        SendMessageInputObject input = new SendMessageInputObject();\n\
          \n        // Required parameters\n        input.setText(\"Test message test\"\
          );\n        input.setPhones(\"+19993322111,+19993322110\");\n\n        //\
          \ Optional parameters, you can skip these setters calls\n        input.setTemplateId(1);\n\
          \        input.setSendingTime(1565606455);\n        input.setSendingDateTime(\"\
          2020-05-27 13:02:33\");\n        input.setSendingTimezone(\"America/Buenos_Aires\"\
          );\n        input.setContacts(\"1,2,3,4\");\n        input.setLists(\"1,2,3,4\"\
          );\n        input.setCutExtra(true);\n        input.setPartsCount(6);\n\
          \        input.setReferenceId(1);\n        input.setFrom(\"Test sender id\"\
          );\n        input.setRule(\"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          );\n        input.setCreateChat(false);\n        input.setTts(false);\n\
          \        input.setLocal(false);\n        input.setLocalCountry(\"US\");\n\
          \n        try {\n            // SendMessageResponse class object\n     \
          \       SendMessageResponse obj = apiInstance.sendMessage(input);\n    \
          \        // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling sendMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    text: \"Test message test\",\n    phones: \"+19993322111,+19993322110\"\
          ,\n    // Optional parameters\n    templateId: 1,\n    sendingTime: 1565606455,\n\
          \    sendingDateTime: \"2020-05-27 13:02:33\",\n    sendingTimezone: \"\
          America/Buenos_Aires\",\n    contacts: \"1,2,3,4\",\n    lists: \"1,2,3,4\"\
          ,\n    cutExtra: true,\n    partsCount: 6,\n    referenceId: 1,\n    from:\
          \ \"Test sender id\",\n    rule: \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ,\n    createChat: false,\n    tts: false,\n    local: false,\n    localCountry:\
          \ \"US\",\n}\n\napi.sendMessage(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::SendMessageInputObject.new\n\
          \n# Required parameters\nobj.text = \"Test message test\"\nobj.phones =\
          \ \"+19993322111,+19993322110\"\n# Optional parameters, you can skip them\n\
          obj.template_id = 1\nobj.sending_time = 1565606455\nobj.sending_date_time\
          \ = \"2020-05-27 13:02:33\"\nobj.sending_timezone = \"America/Buenos_Aires\"\
          \nobj.contacts = \"1,2,3,4\"\nobj.lists = \"1,2,3,4\"\nobj.cut_extra = true\n\
          obj.parts_count = 6\nobj.reference_id = 1\nobj.from = \"Test sender id\"\
          \nobj.rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\nobj.create_chat\
          \ = false\nobj.tts = false\nobj.local = false\nobj.local_country = \"US\"\
          \n\nbegin\n    # SendMessageResponse object\n    result = api.send_message(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->send_message: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new SendMessageInputObject();\n\n            // Required parameters\n\
          \            obj.Text = \"Test message test\";\n            obj.Phones =\
          \ \"+19993322111,+19993322110\";\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.TemplateId = 1;\n  \
          \          obj.SendingTime = 1565606455;\n            obj.SendingDateTime\
          \ = \"2020-05-27 13:02:33\";\n            obj.SendingTimezone = \"America/Buenos_Aires\"\
          ;\n            obj.Contacts = \"1,2,3,4\";\n            obj.Lists = \"1,2,3,4\"\
          ;\n            obj.CutExtra = true;\n            obj.PartsCount = 6;\n \
          \           obj.ReferenceId = 1;\n            obj.From = \"Test sender id\"\
          ;\n            obj.Rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ;\n            obj.CreateChat = false;\n            obj.Tts = false;\n \
          \           obj.Local = false;\n            obj.LocalCountry = \"US\";\n\
          \n            try {\n                // SendMessageResponse class object\n\
          \                var result = apiInstance.SendMessage(obj);\n          \
          \      // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling sendMessage: \"+e.Message);\n            }\n    \
          \    }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ SendMessageInputObject With {\n            .Text = \"Test message test\"\
          ,\n            .TemplateId = 1,\n            .SendingTime = 1565606455,\n\
          \            .SendingDateTime = \"2020-05-27 13:02:33\",\n            .SendingTimezone\
          \ = \"America/Buenos_Aires\",\n            .Contacts = \"1,2,3,4\",\n  \
          \          .Lists = \"1,2,3,4\",\n            .Phones = \"+19993322111,+19993322110\"\
          ,\n            .CutExtra = true,\n            .PartsCount = 6,\n       \
          \     .ReferenceId = 1,\n            .From = \"Test sender id\",\n     \
          \       .Rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\",\n      \
          \      .CreateChat = false,\n            .Tts = false,\n            .Local\
          \ = false,\n            .LocalCountry = \"US\"\n        }\n\n        Try\n\
          \            ' SendMessageResponse class object\n            Dim result\
          \ = apiInstance.SendMessage(obj)\n            ' ...\n        Catch e As\
          \ Exception\n            Console.WriteLine(\"Exception when calling sendMessage:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Text: \"Test message test\",\n\
          \        Phones: \"+19993322111,+19993322110\",\n        // Optional parameters,\
          \ you can skip them\n        TemplateId: 1,\n        SendingTime: 1565606455,\n\
          \        SendingDateTime: \"2020-05-27 13:02:33\",\n        SendingTimezone:\
          \ \"America/Buenos_Aires\",\n        Contacts: \"1,2,3,4\",\n        Lists:\
          \ \"1,2,3,4\",\n        CutExtra: true,\n        PartsCount: 6,\n      \
          \  ReferenceId: 1,\n        From: \"Test sender id\",\n        Rule: \"\
          FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\",\n        CreateChat: false,\n\
          \        Tts: false,\n        Local: false,\n        LocalCountry: \"US\"\
          ,\n    }\n\n    // tm.SendMessageResponse struct\n    result, _, err :=\
          \ client.TextMagicApi.SendMessage(auth, input)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\n\", result)\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<SendMessageInputObject>\
          \ input(new SendMessageInputObject);\n    // Required parameters\n    input->setText(\"\
          Test message test\");\n    input->setPhones(\"+19993322111,+19993322110\"\
          );\n    // Optional parameters, you can skip them\n    input->setTemplateId(1);\n\
          \    input->setSendingTime(1565606455);\n    input->setSendingDateTime(\"\
          2020-05-27 13:02:33\");\n    input->setSendingTimezone(\"America/Buenos_Aires\"\
          );\n    input->setContacts(\"1,2,3,4\");\n    input->setLists(\"1,2,3,4\"\
          );\n    input->setCutExtra(true);\n    input->setPartsCount(6);\n    input->setReferenceId(1);\n\
          \    input->setFrom(\"Test sender id\");\n    input->setRule(\"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          );\n    input->setCreateChat(false);\n    input->setTts(false);\n    input->setLocal(false);\n\
          \    input->setLocalCountry(\"US\");\n\n    try {\n        pplx::task<std::shared_ptr<SendMessageResponse>>\
          \ result = api.sendMessage(input);\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"sendMessage() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.SendMessageInputObject()\n\n# Required parameters\ninput.text\
          \ = \"Test message test\"\ninput.phones = \"+19993322111,+19993322110\"\n\
          # Optional parameters, you can skip them\ninput.template_id = 1\ninput.sending_time\
          \ = 1565606455\ninput.sending_date_time = \"2020-05-27 13:02:33\"\ninput.sending_timezone\
          \ = \"America/Buenos_Aires\"\ninput.contacts = \"1,2,3,4\"\ninput.lists\
          \ = \"1,2,3,4\"\ninput.cut_extra = true\ninput.parts_count = 6\ninput.reference_id\
          \ = 1\ninput.from = \"Test sender id\"\ninput.rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          \ninput.create_chat = false\ninput.tts = false\ninput.local = false\ninput.local_country\
          \ = \"US\"\n\ntry:\n    # SendMessageResponse object\n    result = api_instance.send_message(send_message_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->send_message: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::SendMessageInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::SendMessageInputObject->new(\n\
          \    # Required parameters\n    text => 'Test message test',\n    phones\
          \ => '+19993322111,+19993322110',\n    # Optional parameters, you can skip\
          \ them\n    templateId => 1,\n    sendingTime => 1565606455,\n    sendingDateTime\
          \ => '2020-05-27 13:02:33',\n    sendingTimezone => 'America/Buenos_Aires',\n\
          \    contacts => '1,2,3,4',\n    lists => '1,2,3,4',\n    cutExtra => 1,\n\
          \    partsCount => 6,\n    referenceId => 1,\n    from => 'Test sender id',\n\
          \    rule => 'FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1',\n    createChat\
          \ => 0,\n    tts => 0,\n    local => 0,\n    localCountry => 'US',\n);\n\
          \neval {\n    # SendMessageResponse object\n    my $result = $api_instance->send_message(send_message_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->send_message: $@\\n\";\n}"
  /api/v2/messages/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single message"
      description: "Get a single outgoing message."
      operationId: "getOutboundMessage"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/MessageOut"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // MessageOut class object\n    $result = $api->getOutboundMessage($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getOutboundMessage: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // MessageOut class\
          \ object\n            MessageOut obj = apiInstance.getOutboundMessage(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getOutboundMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getOutboundMessage(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # MessageOut\
          \ object\n    result = api.get_outbound_message(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_outbound_message:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // MessageOut class object\n\
          \                var result = apiInstance.GetOutboundMessage(id);\n    \
          \            // ...\n            } catch (Exception e) {\n             \
          \   Console.WriteLine(\"Exception when calling getOutboundMessage: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' MessageOut class object\n          \
          \  Dim result = apiInstance.GetOutboundMessage(id)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getOutboundMessage: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.MessageOut struct\n    result, _, err := client.TextMagicApi.GetOutboundMessage(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<MessageOut>> result = api.getOutboundMessage(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getOutboundMessage()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # MessageOut object\n    result = api_instance.get_outbound_message(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_outbound_message: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # MessageOut object\n    my $result = $api_instance->get_outbound_message(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_outbound_message: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete message"
      description: "Delete a single message."
      operationId: "deleteOutboundMessage"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteOutboundMessage($id);\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteOutboundMessage:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteOutboundMessage(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteOutboundMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteOutboundMessage(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_outbound_message(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_outbound_message:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteOutboundMessage(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteOutboundMessage: \"+e.Message);\n         \
          \   }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteOutboundMessage(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteOutboundMessage: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteOutboundMessage(auth, id)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteOutboundMessage(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteOutboundMessage()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_outbound_message(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_outbound_message:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_outbound_message(id => $id);\n};\n\n\
          if ($@) {\n    warn \"Exception when calling TextMagicApi->delete_outbound_message:\
          \ $@\\n\";\n}"
  /api/v2/messages/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete messages (bulk)"
      description: "Delete outbound messages by given ID(s) or delete all outbound\
        \ messages."
      operationId: "deleteOutboundMessagesBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteOutboundMessagesBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteOutboundMessagesBulkInputObject"
        x-exportParamName: "DeleteOutboundMessagesBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteOutboundMessagesBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(1);\n\ntry {\n    $api->deleteOutboundMessagesBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteOutboundMessagesBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteOutboundMessagesBulkInputObject input = new DeleteOutboundMessagesBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(1);\n\n        try\
          \ {\n            apiInstance.deleteOutboundMessagesBulk(input);\n      \
          \  } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteOutboundMessagesBulk\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 1,\n\
          }\n\napi.deleteOutboundMessagesBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteOutboundMessagesBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 1\n\nbegin\n    api.delete_outbound_messages_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_outbound_messages_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteOutboundMessagesBulkInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Ids = \"\
          1,2,3\";\n            obj.All = 1;\n\n            try {\n              \
          \  apiInstance.DeleteOutboundMessagesBulk(obj);\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling deleteOutboundMessagesBulk:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteOutboundMessagesBulkInputObject With {\n            .Ids = \"1,2,3\"\
          ,\n            .All = 1\n        }\n\n        Try\n            apiInstance.DeleteOutboundMessagesBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteOutboundMessagesBulk: \" + e.Message)\n   \
          \     End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 1,\n    }\n\n    client.TextMagicApi.DeleteOutboundMessagesBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteOutboundMessagesBulkInputObject>\
          \ input(new DeleteOutboundMessagesBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(1);\n\
          \n    try {\n        pplx::task result = api.deleteOutboundMessagesBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"deleteOutboundMessagesBulk() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteOutboundMessagesBulkInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.ids = \"1,2,3\"\ninput.all = 1\n\ntry:\n    api_instance.delete_outbound_messages_bulk(delete_outbound_messages_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_outbound_messages_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteOutboundMessagesBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteOutboundMessagesBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 1,\n);\n\neval {\n    $api_instance->delete_outbound_messages_bulk(delete_outbound_messages_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_outbound_messages_bulk:\
          \ $@\\n\";\n}"
  /api/v2/message/all:
    delete:
      tags:
      - "TextMagic"
      summary: "Delete all messages"
      description: "Delete all messages."
      operationId: "deleteAllOutboundMessages"
      produces: []
      parameters: []
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    $api->deleteAllOutboundMessages();\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteAllOutboundMessages:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            apiInstance.deleteAllOutboundMessages();\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteAllOutboundMessages\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.deleteAllOutboundMessages().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    api.delete_all_outbound_messages()\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_all_outbound_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                apiInstance.DeleteAllOutboundMessages();\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling deleteAllOutboundMessages: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        apiInstance.DeleteAllOutboundMessages()\n            ' ...\n  \
          \      Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling deleteAllOutboundMessages: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    client.TextMagicApi.DeleteAllOutboundMessages(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task result\
          \ = api.deleteAllOutboundMessages();\n        result.wait();\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"deleteAllOutboundMessages()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    api_instance.delete_all_outbound_messages()\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->delete_all_outbound_messages:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    $api_instance->delete_all_outbound_messages();\n};\n\nif ($@) {\n \
          \   warn \"Exception when calling TextMagicApi->delete_all_outbound_messages:\
          \ $@\\n\";\n}"
  /api/v2/messages/price:
    get:
      tags:
      - "TextMagic"
      summary: "Check price"
      description: "Check pricing for a new outbound message."
      operationId: "getMessagePrice"
      parameters:
      - name: "includeBlocked"
        in: "query"
        description: "Should we show pricing for the blocked contacts."
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "IncludeBlocked"
        x-optionalDataType: "Int32"
      - name: "text"
        in: "query"
        description: "Message text. Required if template_id is not set"
        required: false
        type: "string"
        x-example: "Test message test"
        x-exportParamName: "Text"
        x-optionalDataType: "String"
      - name: "templateId"
        in: "query"
        description: "Template used instead of message text. Required if text is not\
          \ set"
        required: false
        type: "integer"
        x-example: 1
        x-exportParamName: "TemplateId"
        x-optionalDataType: "Int32"
      - name: "sendingTime"
        in: "query"
        description: "DEPRECATED, consider using sendingDateTime and sendingTimezone\
          \ parameters instead: Optional (required with rrule set). Message sending\
          \ time in unix timestamp format. Default is now"
        required: false
        type: "integer"
        x-example: 1565606455
        x-exportParamName: "SendingTime"
        x-optionalDataType: "Int32"
      - name: "sendingDateTime"
        in: "query"
        description: "Sending time in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33).\
          \ This time is relative to sendingTimezone"
        required: false
        type: "string"
        x-example: "2020-05-27 13:02:33"
        x-exportParamName: "SendingDateTime"
        x-optionalDataType: "String"
      - name: "sendingTimezone"
        in: "query"
        description: "ID or ISO-name of timezone used for sending when sendingDateTime\
          \ parameter is set. E.g. if you specify sendingDateTime = \\\"2016-05-27\
          \ 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your\
          \ message will be sent at May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33\
          \ UTC. Default is account timezone"
        required: false
        type: "string"
        x-example: "America/Buenos_Aires"
        x-exportParamName: "SendingTimezone"
        x-optionalDataType: "String"
      - name: "contacts"
        in: "query"
        description: "Comma separated array of contact resources id message will be\
          \ sent to"
        required: false
        type: "string"
        x-example: "1,2,3,4"
        x-exportParamName: "Contacts"
        x-optionalDataType: "String"
      - name: "lists"
        in: "query"
        description: "Comma separated array of list resources id message will be sent\
          \ to"
        required: false
        type: "string"
        x-example: "1,2,3,4"
        x-exportParamName: "Lists"
        x-optionalDataType: "String"
      - name: "phones"
        in: "query"
        description: "Comma separated array of E.164 phone numbers message will be\
          \ sent to"
        required: false
        type: "string"
        x-example: "+19993322111,+19993322110"
        x-exportParamName: "Phones"
        x-optionalDataType: "String"
      - name: "cutExtra"
        in: "query"
        description: "Should sending method cut extra characters which not fit supplied\
          \ partsCount or return 400 Bad request response instead. Default is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "CutExtra"
        x-optionalDataType: "Int32"
      - name: "partsCount"
        in: "query"
        description: "Maximum message parts count (TextMagic allows sending 1 to 6\
          \ message parts). Default is 6"
        required: false
        type: "integer"
        default: 6
        x-exportParamName: "PartsCount"
        x-optionalDataType: "Int32"
      - name: "referenceId"
        in: "query"
        description: "Custom message reference id which can be used in your application\
          \ infrastructure"
        required: false
        type: "integer"
        x-example: 1
        x-exportParamName: "ReferenceId"
        x-optionalDataType: "Int32"
      - name: "from"
        in: "query"
        description: "One of allowed Sender ID (phone number or alphanumeric sender\
          \ ID). If specified Sender ID is not allowed for some destinations, a fallback\
          \ default Sender ID will be used to ensure delivery"
        required: false
        type: "string"
        x-example: "Testid1"
        x-exportParamName: "From"
        x-optionalDataType: "String"
      - name: "rule"
        in: "query"
        description: "iCal RRULE parameter to create recurrent scheduled messages.\
          \ When used, sendingTime is mandatory as start point of sending. See https://www.textmagic.com/free-tools/rrule-generator\
          \ for format details"
        required: false
        type: "string"
        x-example: "FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1"
        x-exportParamName: "Rule"
        x-optionalDataType: "String"
      - name: "createChat"
        in: "query"
        description: "Should sending method try to create new Chat(if not exist) with\
          \ specified recipients. Default is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "CreateChat"
        x-optionalDataType: "Int32"
      - name: "tts"
        in: "query"
        description: "Send Text to Speech message. Default is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Tts"
        x-optionalDataType: "Int32"
      - name: "local"
        in: "query"
        description: "Treat phone numbers passed in \\'phones\\' field as local. Default\
          \ is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Local"
        x-optionalDataType: "Int32"
      - name: "localCountry"
        in: "query"
        description: "2-letter ISO country code for local phone numbers, used when\
          \ \\'local\\' is set to true. Default is account country"
        required: false
        type: "string"
        x-example: "US"
        x-exportParamName: "LocalCountry"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessagePriceResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getMessagePrice method\
          \ below, default values will be used\n$includeBlocked = 0;\n$text = \"Test\
          \ message test\";\n$templateId = 1;\n$sendingTime = 1565606455;\n$sendingDateTime\
          \ = \"2020-05-27 13:02:33\";\n$sendingTimezone = \"America/Buenos_Aires\"\
          ;\n$contacts = \"1,2,3,4\";\n$lists = \"1,2,3,4\";\n$phones = \"+19993322111,+19993322110\"\
          ;\n$cutExtra = 0;\n$partsCount = 6;\n$referenceId = 1;\n$from = \"Testid1\"\
          ;\n$rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\";\n$createChat\
          \ = 0;\n$tts = 0;\n$local = 0;\n$localCountry = \"US\";\n\ntry {\n    //\
          \ GetMessagePriceResponse class object\n    $result = $api->getMessagePrice($includeBlocked,\
          \ $text, $templateId, $sendingTime, $sendingDateTime, $sendingTimezone,\
          \ $contacts, $lists, $phones, $cutExtra, $partsCount, $referenceId, $from,\
          \ $rule, $createChat, $tts, $local, $localCountry);\n    // ...\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getMessagePrice:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getMessagePrice\
          \ method below, default values will be used\n        int includeBlocked\
          \ = 0;\n        String text = \"Test message test\";\n        int templateId\
          \ = 1;\n        int sendingTime = 1565606455;\n        String sendingDateTime\
          \ = \"2020-05-27 13:02:33\";\n        String sendingTimezone = \"America/Buenos_Aires\"\
          ;\n        String contacts = \"1,2,3,4\";\n        String lists = \"1,2,3,4\"\
          ;\n        String phones = \"+19993322111,+19993322110\";\n        int cutExtra\
          \ = 0;\n        int partsCount = 6;\n        int referenceId = 1;\n    \
          \    String from = \"Testid1\";\n        String rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ;\n        int createChat = 0;\n        int tts = 0;\n        int local\
          \ = 0;\n        String localCountry = \"US\";\n\n        try {\n       \
          \     // GetMessagePriceResponse class object\n            GetMessagePriceResponse\
          \ obj = apiInstance.getMessagePrice(includeBlocked, text, templateId, sendingTime,\
          \ sendingDateTime, sendingTimezone, contacts, lists, phones, cutExtra, partsCount,\
          \ referenceId, from, rule, createChat, tts, local, localCountry);\n    \
          \        // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getMessagePrice\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    includeBlocked: 0,\n    text: \"Test\
          \ message test\",\n    templateId: 1,\n    sendingTime: 1565606455,\n  \
          \  sendingDateTime: \"2020-05-27 13:02:33\",\n    sendingTimezone: \"America/Buenos_Aires\"\
          ,\n    contacts: \"1,2,3,4\",\n    lists: \"1,2,3,4\",\n    phones: \"+19993322111,+19993322110\"\
          ,\n    cutExtra: 0,\n    partsCount: 6,\n    referenceId: 1,\n    from:\
          \ \"Testid1\",\n    rule: \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ,\n    createChat: 0,\n    tts: 0,\n    local: 0,\n    localCountry: \"\
          US\",\n}\n\napi.getMessagePrice().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  include_blocked: 0,\n  text: 'Test message test',\n  template_id: 1,\n\
          \  sending_time: 1565606455,\n  sending_date_time: '2020-05-27 13:02:33',\n\
          \  sending_timezone: 'America/Buenos_Aires',\n  contacts: '1,2,3,4',\n \
          \ lists: '1,2,3,4',\n  phones: '+19993322111,+19993322110',\n  cut_extra:\
          \ 0,\n  parts_count: 6,\n  reference_id: 1,\n  from: 'Testid1',\n  rule:\
          \ 'FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1',\n  create_chat: 0,\n  tts:\
          \ 0,\n  local: 0,\n  local_country: 'US',\n}\n\nbegin\n    # GetMessagePriceResponse\
          \ object\n    result = api.get_message_price(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_message_price:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getMessagePrice method below, default\
          \ values will be used\n            int includeBlocked = 0;\n           \
          \ string text = \"Test message test\";\n            int templateId = 1;\n\
          \            int sendingTime = 1565606455;\n            string sendingDateTime\
          \ = \"2020-05-27 13:02:33\";\n            string sendingTimezone = \"America/Buenos_Aires\"\
          ;\n            string contacts = \"1,2,3,4\";\n            string lists\
          \ = \"1,2,3,4\";\n            string phones = \"+19993322111,+19993322110\"\
          ;\n            int cutExtra = 0;\n            int partsCount = 6;\n    \
          \        int referenceId = 1;\n            string from = \"Testid1\";\n\
          \            string rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ;\n            int createChat = 0;\n            int tts = 0;\n         \
          \   int local = 0;\n            string localCountry = \"US\";\n\n      \
          \      try {\n                // GetMessagePriceResponse class object\n\
          \                var result = apiInstance.GetMessagePrice(includeBlocked,\
          \ text, templateId, sendingTime, sendingDateTime, sendingTimezone, contacts,\
          \ lists, phones, cutExtra, partsCount, referenceId, from, rule, createChat,\
          \ tts, local, localCountry);\n                // ...\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ getMessagePrice: \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getMessagePrice method below, default\
          \ values will be used\n        Dim includeBlocked As Integer = 0\n     \
          \   Dim text As String = \"Test message test\"\n        Dim templateId As\
          \ Integer = 1\n        Dim sendingTime As Integer = 1565606455\n       \
          \ Dim sendingDateTime As String = \"2020-05-27 13:02:33\"\n        Dim sendingTimezone\
          \ As String = \"America/Buenos_Aires\"\n        Dim contacts As String =\
          \ \"1,2,3,4\"\n        Dim lists As String = \"1,2,3,4\"\n        Dim phones\
          \ As String = \"+19993322111,+19993322110\"\n        Dim cutExtra As Integer\
          \ = 0\n        Dim partsCount As Integer = 6\n        Dim referenceId As\
          \ Integer = 1\n        Dim from As String = \"Testid1\"\n        Dim rule\
          \ As String = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\n        Dim\
          \ createChat As Integer = 0\n        Dim tts As Integer = 0\n        Dim\
          \ local As Integer = 0\n        Dim localCountry As String = \"US\"\n\n\
          \        Try\n            ' GetMessagePriceResponse class object\n     \
          \       Dim result = apiInstance.GetMessagePrice(includeBlocked, text, templateId,\
          \ sendingTime, sendingDateTime, sendingTimezone, contacts, lists, phones,\
          \ cutExtra, partsCount, referenceId, from, rule, createChat, tts, local,\
          \ localCountry)\n            ' ...\n        Catch e As Exception\n     \
          \       Console.WriteLine(\"Exception when calling getMessagePrice: \" +\
          \ e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetMessagePriceOpts{\n  \
          \      // Optional parameters\n        IncludeBlocked: optional.NewInt32(0),\n\
          \        Text: optional.NewString(\"Test message test\"),\n        TemplateId:\
          \ optional.NewInt32(1),\n        SendingTime: optional.NewInt32(1565606455),\n\
          \        SendingDateTime: optional.NewString(\"2020-05-27 13:02:33\"),\n\
          \        SendingTimezone: optional.NewString(\"America/Buenos_Aires\"),\n\
          \        Contacts: optional.NewString(\"1,2,3,4\"),\n        Lists: optional.NewString(\"\
          1,2,3,4\"),\n        Phones: optional.NewString(\"+19993322111,+19993322110\"\
          ),\n        CutExtra: optional.NewInt32(0),\n        PartsCount: optional.NewInt32(6),\n\
          \        ReferenceId: optional.NewInt32(1),\n        From: optional.NewString(\"\
          Testid1\"),\n        Rule: optional.NewString(\"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ),\n        CreateChat: optional.NewInt32(0),\n        Tts: optional.NewInt32(0),\n\
          \        Local: optional.NewInt32(0),\n        LocalCountry: optional.NewString(\"\
          US\"),\n    }\n\n    // tm.GetMessagePriceResponse struct\n    result, _,\
          \ err := client.TextMagicApi.GetMessagePrice(auth, &opts)\n\n    if err\
          \ != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ includeBlocked = 0;\n    std::string text = \"Test message test\";\n \
          \   int templateId = 1;\n    int sendingTime = 1565606455;\n    std::string\
          \ sendingDateTime = \"2020-05-27 13:02:33\";\n    std::string sendingTimezone\
          \ = \"America/Buenos_Aires\";\n    std::string contacts = \"1,2,3,4\";\n\
          \    std::string lists = \"1,2,3,4\";\n    std::string phones = \"+19993322111,+19993322110\"\
          ;\n    int cutExtra = 0;\n    int partsCount = 6;\n    int referenceId =\
          \ 1;\n    std::string from = \"Testid1\";\n    std::string rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ;\n    int createChat = 0;\n    int tts = 0;\n    int local = 0;\n    std::string\
          \ localCountry = \"US\";\n\n    try {\n        pplx::task<std::shared_ptr<GetMessagePriceResponse>>\
          \ result = api.getMessagePrice(includeBlocked, text, templateId, sendingTime,\
          \ sendingDateTime, sendingTimezone, contacts, lists, phones, cutExtra, partsCount,\
          \ referenceId, from, rule, createChat, tts, local, localCountry);\n    \
          \    result.wait();\n        // put operations with result here...\n   \
          \ } catch(const std::exception& e) {\n        std::cout << \"getMessagePrice()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\ninclude_blocked = 0\ntext = \"Test message\
          \ test\"\ntemplate_id = 1\nsending_time = 1565606455\nsending_date_time\
          \ = \"2020-05-27 13:02:33\"\nsending_timezone = \"America/Buenos_Aires\"\
          \ncontacts = \"1,2,3,4\"\nlists = \"1,2,3,4\"\nphones = \"+19993322111,+19993322110\"\
          \ncut_extra = 0\nparts_count = 6\nreference_id = 1\nfrom = \"Testid1\"\n\
          rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\ncreate_chat = 0\n\
          tts = 0\nlocal = 0\nlocal_country = \"US\"\n\ntry:\n    # GetMessagePriceResponse\
          \ object\n    result = api_instance.get_message_price(include_blocked=include_blocked,\
          \ text=text, template_id=template_id, sending_time=sending_time, sending_date_time=sending_date_time,\
          \ sending_timezone=sending_timezone, contacts=contacts, lists=lists, phones=phones,\
          \ cut_extra=cut_extra, parts_count=parts_count, reference_id=reference_id,\
          \ from=from, rule=rule, create_chat=create_chat, tts=tts, local=local, local_country=local_country)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_message_price: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $includeBlocked = 0;\nmy $text = 'Test message\
          \ test';\nmy $templateId = 1;\nmy $sendingTime = 1565606455;\nmy $sendingDateTime\
          \ = '2020-05-27 13:02:33';\nmy $sendingTimezone = 'America/Buenos_Aires';\n\
          my $contacts = '1,2,3,4';\nmy $lists = '1,2,3,4';\nmy $phones = '+19993322111,+19993322110';\n\
          my $cutExtra = 0;\nmy $partsCount = 6;\nmy $referenceId = 1;\nmy $from =\
          \ 'Testid1';\nmy $rule = 'FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1';\n\
          my $createChat = 0;\nmy $tts = 0;\nmy $local = 0;\nmy $localCountry = 'US';\n\
          \neval {\n    # GetMessagePriceResponse object\n    my $result = $api_instance->get_message_price(includeBlocked\
          \ => $includeBlocked, text => $text, templateId => $templateId, sendingTime\
          \ => $sendingTime, sendingDateTime => $sendingDateTime, sendingTimezone\
          \ => $sendingTimezone, contacts => $contacts, lists => $lists, phones =>\
          \ $phones, cutExtra => $cutExtra, partsCount => $partsCount, referenceId\
          \ => $referenceId, from => $from, rule => $rule, createChat => $createChat,\
          \ tts => $tts, local => $local, localCountry => $localCountry);\n    # ...\n\
          };\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_message_price:\
          \ $@\\n\";\n}"
  /api/v2/messages/preview:
    get:
      tags:
      - "TextMagic"
      summary: "Preview message"
      description: "Get messages preview (with tags merged) up to 100 messages per\
        \ session."
      operationId: "getMessagePreview"
      parameters:
      - name: "text"
        in: "query"
        description: "Message text. Required if template_id is not set"
        required: false
        type: "string"
        x-example: "Test message test"
        x-exportParamName: "Text"
        x-optionalDataType: "String"
      - name: "templateId"
        in: "query"
        description: "Template used instead of message text. Required if text is not\
          \ set"
        required: false
        type: "integer"
        x-example: 1
        x-exportParamName: "TemplateId"
        x-optionalDataType: "Int32"
      - name: "sendingTime"
        in: "query"
        description: "DEPRECATED, consider using sendingDateTime and sendingTimezone\
          \ parameters instead: Optional (required with rrule set). Message sending\
          \ time in unix timestamp format. Default is now"
        required: false
        type: "integer"
        x-example: 1565606455
        x-exportParamName: "SendingTime"
        x-optionalDataType: "Int32"
      - name: "sendingDateTime"
        in: "query"
        description: "Sending time in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33).\
          \ This time is relative to sendingTimezone"
        required: false
        type: "string"
        x-example: "2020-05-27 13:02:33"
        x-exportParamName: "SendingDateTime"
        x-optionalDataType: "String"
      - name: "sendingTimezone"
        in: "query"
        description: "ID or ISO-name of timezone used for sending when sendingDateTime\
          \ parameter is set. E.g. if you specify sendingDateTime = \\\"2016-05-27\
          \ 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your\
          \ message will be sent at May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33\
          \ UTC. Default is account timezone"
        required: false
        type: "string"
        x-example: "America/Buenos_Aires"
        x-exportParamName: "SendingTimezone"
        x-optionalDataType: "String"
      - name: "contacts"
        in: "query"
        description: "Comma separated array of contact resources id message will be\
          \ sent to"
        required: false
        type: "string"
        x-example: "1,2,3,4"
        x-exportParamName: "Contacts"
        x-optionalDataType: "String"
      - name: "lists"
        in: "query"
        description: "Comma separated array of list resources id message will be sent\
          \ to"
        required: false
        type: "string"
        x-example: "1,2,3,4"
        x-exportParamName: "Lists"
        x-optionalDataType: "String"
      - name: "phones"
        in: "query"
        description: "Comma separated array of E.164 phone numbers message will be\
          \ sent to"
        required: false
        type: "string"
        x-example: "+19993322111,+19993322110"
        x-exportParamName: "Phones"
        x-optionalDataType: "String"
      - name: "cutExtra"
        in: "query"
        description: "Should sending method cut extra characters which not fit supplied\
          \ partsCount or return 400 Bad request response instead. Default is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "CutExtra"
        x-optionalDataType: "Int32"
      - name: "partsCount"
        in: "query"
        description: "Maximum message parts count (TextMagic allows sending 1 to 6\
          \ message parts). Default is 6"
        required: false
        type: "integer"
        default: 6
        x-exportParamName: "PartsCount"
        x-optionalDataType: "Int32"
      - name: "referenceId"
        in: "query"
        description: "Custom message reference id which can be used in your application\
          \ infrastructure"
        required: false
        type: "integer"
        x-example: 1
        x-exportParamName: "ReferenceId"
        x-optionalDataType: "Int32"
      - name: "from"
        in: "query"
        description: "One of allowed Sender ID (phone number or alphanumeric sender\
          \ ID). If specified Sender ID is not allowed for some destinations, a fallback\
          \ default Sender ID will be used to ensure delivery"
        required: false
        type: "string"
        x-example: "Testid1"
        x-exportParamName: "From"
        x-optionalDataType: "String"
      - name: "rule"
        in: "query"
        description: "iCal RRULE parameter to create recurrent scheduled messages.\
          \ When used, sendingTime is mandatory as start point of sending. See https://www.textmagic.com/free-tools/rrule-generator\
          \ for format details"
        required: false
        type: "string"
        x-example: "FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1"
        x-exportParamName: "Rule"
        x-optionalDataType: "String"
      - name: "createChat"
        in: "query"
        description: "Should sending method try to create new Chat(if not exist) with\
          \ specified recipients. Default is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "CreateChat"
        x-optionalDataType: "Int32"
      - name: "tts"
        in: "query"
        description: "Send Text to Speech message. Default is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Tts"
        x-optionalDataType: "Int32"
      - name: "local"
        in: "query"
        description: "Treat phone numbers passed in \\'phones\\' field as local. Default\
          \ is 0"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Local"
        x-optionalDataType: "Int32"
      - name: "localCountry"
        in: "query"
        description: "2-letter ISO country code for local phone numbers, used when\
          \ \\'local\\' is set to true. Default is account country"
        required: false
        type: "string"
        x-example: "US"
        x-exportParamName: "LocalCountry"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessagePreviewResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getMessagePreview\
          \ method below, default values will be used\n$text = \"Test message test\"\
          ;\n$templateId = 1;\n$sendingTime = 1565606455;\n$sendingDateTime = \"2020-05-27\
          \ 13:02:33\";\n$sendingTimezone = \"America/Buenos_Aires\";\n$contacts =\
          \ \"1,2,3,4\";\n$lists = \"1,2,3,4\";\n$phones = \"+19993322111,+19993322110\"\
          ;\n$cutExtra = 0;\n$partsCount = 6;\n$referenceId = 1;\n$from = \"Testid1\"\
          ;\n$rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\";\n$createChat\
          \ = 0;\n$tts = 0;\n$local = 0;\n$localCountry = \"US\";\n\ntry {\n    //\
          \ GetMessagePreviewResponse class object\n    $result = $api->getMessagePreview($text,\
          \ $templateId, $sendingTime, $sendingDateTime, $sendingTimezone, $contacts,\
          \ $lists, $phones, $cutExtra, $partsCount, $referenceId, $from, $rule, $createChat,\
          \ $tts, $local, $localCountry);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getMessagePreview: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getMessagePreview\
          \ method below, default values will be used\n        String text = \"Test\
          \ message test\";\n        int templateId = 1;\n        int sendingTime\
          \ = 1565606455;\n        String sendingDateTime = \"2020-05-27 13:02:33\"\
          ;\n        String sendingTimezone = \"America/Buenos_Aires\";\n        String\
          \ contacts = \"1,2,3,4\";\n        String lists = \"1,2,3,4\";\n       \
          \ String phones = \"+19993322111,+19993322110\";\n        int cutExtra =\
          \ 0;\n        int partsCount = 6;\n        int referenceId = 1;\n      \
          \  String from = \"Testid1\";\n        String rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ;\n        int createChat = 0;\n        int tts = 0;\n        int local\
          \ = 0;\n        String localCountry = \"US\";\n\n        try {\n       \
          \     // GetMessagePreviewResponse class object\n            GetMessagePreviewResponse\
          \ obj = apiInstance.getMessagePreview(text, templateId, sendingTime, sendingDateTime,\
          \ sendingTimezone, contacts, lists, phones, cutExtra, partsCount, referenceId,\
          \ from, rule, createChat, tts, local, localCountry);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getMessagePreview\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    text: \"Test message test\",\n    templateId:\
          \ 1,\n    sendingTime: 1565606455,\n    sendingDateTime: \"2020-05-27 13:02:33\"\
          ,\n    sendingTimezone: \"America/Buenos_Aires\",\n    contacts: \"1,2,3,4\"\
          ,\n    lists: \"1,2,3,4\",\n    phones: \"+19993322111,+19993322110\",\n\
          \    cutExtra: 0,\n    partsCount: 6,\n    referenceId: 1,\n    from: \"\
          Testid1\",\n    rule: \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\",\n\
          \    createChat: 0,\n    tts: 0,\n    local: 0,\n    localCountry: \"US\"\
          ,\n}\n\napi.getMessagePreview().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  text: 'Test message test',\n  template_id: 1,\n  sending_time: 1565606455,\n\
          \  sending_date_time: '2020-05-27 13:02:33',\n  sending_timezone: 'America/Buenos_Aires',\n\
          \  contacts: '1,2,3,4',\n  lists: '1,2,3,4',\n  phones: '+19993322111,+19993322110',\n\
          \  cut_extra: 0,\n  parts_count: 6,\n  reference_id: 1,\n  from: 'Testid1',\n\
          \  rule: 'FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1',\n  create_chat: 0,\n\
          \  tts: 0,\n  local: 0,\n  local_country: 'US',\n}\n\nbegin\n    # GetMessagePreviewResponse\
          \ object\n    result = api.get_message_preview(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_message_preview:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getMessagePreview method below, default\
          \ values will be used\n            string text = \"Test message test\";\n\
          \            int templateId = 1;\n            int sendingTime = 1565606455;\n\
          \            string sendingDateTime = \"2020-05-27 13:02:33\";\n       \
          \     string sendingTimezone = \"America/Buenos_Aires\";\n            string\
          \ contacts = \"1,2,3,4\";\n            string lists = \"1,2,3,4\";\n   \
          \         string phones = \"+19993322111,+19993322110\";\n            int\
          \ cutExtra = 0;\n            int partsCount = 6;\n            int referenceId\
          \ = 1;\n            string from = \"Testid1\";\n            string rule\
          \ = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\";\n            int createChat\
          \ = 0;\n            int tts = 0;\n            int local = 0;\n         \
          \   string localCountry = \"US\";\n\n            try {\n               \
          \ // GetMessagePreviewResponse class object\n                var result\
          \ = apiInstance.GetMessagePreview(text, templateId, sendingTime, sendingDateTime,\
          \ sendingTimezone, contacts, lists, phones, cutExtra, partsCount, referenceId,\
          \ from, rule, createChat, tts, local, localCountry);\n                //\
          \ ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getMessagePreview: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getMessagePreview method below, default\
          \ values will be used\n        Dim text As String = \"Test message test\"\
          \n        Dim templateId As Integer = 1\n        Dim sendingTime As Integer\
          \ = 1565606455\n        Dim sendingDateTime As String = \"2020-05-27 13:02:33\"\
          \n        Dim sendingTimezone As String = \"America/Buenos_Aires\"\n   \
          \     Dim contacts As String = \"1,2,3,4\"\n        Dim lists As String\
          \ = \"1,2,3,4\"\n        Dim phones As String = \"+19993322111,+19993322110\"\
          \n        Dim cutExtra As Integer = 0\n        Dim partsCount As Integer\
          \ = 6\n        Dim referenceId As Integer = 1\n        Dim from As String\
          \ = \"Testid1\"\n        Dim rule As String = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          \n        Dim createChat As Integer = 0\n        Dim tts As Integer = 0\n\
          \        Dim local As Integer = 0\n        Dim localCountry As String =\
          \ \"US\"\n\n        Try\n            ' GetMessagePreviewResponse class object\n\
          \            Dim result = apiInstance.GetMessagePreview(text, templateId,\
          \ sendingTime, sendingDateTime, sendingTimezone, contacts, lists, phones,\
          \ cutExtra, partsCount, referenceId, from, rule, createChat, tts, local,\
          \ localCountry)\n            ' ...\n        Catch e As Exception\n     \
          \       Console.WriteLine(\"Exception when calling getMessagePreview: \"\
          \ + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetMessagePreviewOpts{\n\
          \        // Optional parameters\n        Text: optional.NewString(\"Test\
          \ message test\"),\n        TemplateId: optional.NewInt32(1),\n        SendingTime:\
          \ optional.NewInt32(1565606455),\n        SendingDateTime: optional.NewString(\"\
          2020-05-27 13:02:33\"),\n        SendingTimezone: optional.NewString(\"\
          America/Buenos_Aires\"),\n        Contacts: optional.NewString(\"1,2,3,4\"\
          ),\n        Lists: optional.NewString(\"1,2,3,4\"),\n        Phones: optional.NewString(\"\
          +19993322111,+19993322110\"),\n        CutExtra: optional.NewInt32(0),\n\
          \        PartsCount: optional.NewInt32(6),\n        ReferenceId: optional.NewInt32(1),\n\
          \        From: optional.NewString(\"Testid1\"),\n        Rule: optional.NewString(\"\
          FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"),\n        CreateChat: optional.NewInt32(0),\n\
          \        Tts: optional.NewInt32(0),\n        Local: optional.NewInt32(0),\n\
          \        LocalCountry: optional.NewString(\"US\"),\n    }\n\n    // tm.GetMessagePreviewResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetMessagePreview(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    std::string\
          \ text = \"Test message test\";\n    int templateId = 1;\n    int sendingTime\
          \ = 1565606455;\n    std::string sendingDateTime = \"2020-05-27 13:02:33\"\
          ;\n    std::string sendingTimezone = \"America/Buenos_Aires\";\n    std::string\
          \ contacts = \"1,2,3,4\";\n    std::string lists = \"1,2,3,4\";\n    std::string\
          \ phones = \"+19993322111,+19993322110\";\n    int cutExtra = 0;\n    int\
          \ partsCount = 6;\n    int referenceId = 1;\n    std::string from = \"Testid1\"\
          ;\n    std::string rule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          ;\n    int createChat = 0;\n    int tts = 0;\n    int local = 0;\n    std::string\
          \ localCountry = \"US\";\n\n    try {\n        pplx::task<std::shared_ptr<GetMessagePreviewResponse>>\
          \ result = api.getMessagePreview(text, templateId, sendingTime, sendingDateTime,\
          \ sendingTimezone, contacts, lists, phones, cutExtra, partsCount, referenceId,\
          \ from, rule, createChat, tts, local, localCountry);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getMessagePreview() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\ntext = \"Test message test\"\ntemplate_id =\
          \ 1\nsending_time = 1565606455\nsending_date_time = \"2020-05-27 13:02:33\"\
          \nsending_timezone = \"America/Buenos_Aires\"\ncontacts = \"1,2,3,4\"\n\
          lists = \"1,2,3,4\"\nphones = \"+19993322111,+19993322110\"\ncut_extra =\
          \ 0\nparts_count = 6\nreference_id = 1\nfrom = \"Testid1\"\nrule = \"FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1\"\
          \ncreate_chat = 0\ntts = 0\nlocal = 0\nlocal_country = \"US\"\n\ntry:\n\
          \    # GetMessagePreviewResponse object\n    result = api_instance.get_message_preview(text=text,\
          \ template_id=template_id, sending_time=sending_time, sending_date_time=sending_date_time,\
          \ sending_timezone=sending_timezone, contacts=contacts, lists=lists, phones=phones,\
          \ cut_extra=cut_extra, parts_count=parts_count, reference_id=reference_id,\
          \ from=from, rule=rule, create_chat=create_chat, tts=tts, local=local, local_country=local_country)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_message_preview: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $text = 'Test message test';\nmy $templateId\
          \ = 1;\nmy $sendingTime = 1565606455;\nmy $sendingDateTime = '2020-05-27\
          \ 13:02:33';\nmy $sendingTimezone = 'America/Buenos_Aires';\nmy $contacts\
          \ = '1,2,3,4';\nmy $lists = '1,2,3,4';\nmy $phones = '+19993322111,+19993322110';\n\
          my $cutExtra = 0;\nmy $partsCount = 6;\nmy $referenceId = 1;\nmy $from =\
          \ 'Testid1';\nmy $rule = 'FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1';\n\
          my $createChat = 0;\nmy $tts = 0;\nmy $local = 0;\nmy $localCountry = 'US';\n\
          \neval {\n    # GetMessagePreviewResponse object\n    my $result = $api_instance->get_message_preview(text\
          \ => $text, templateId => $templateId, sendingTime => $sendingTime, sendingDateTime\
          \ => $sendingDateTime, sendingTimezone => $sendingTimezone, contacts =>\
          \ $contacts, lists => $lists, phones => $phones, cutExtra => $cutExtra,\
          \ partsCount => $partsCount, referenceId => $referenceId, from => $from,\
          \ rule => $rule, createChat => $createChat, tts => $tts, local => $local,\
          \ localCountry => $localCountry);\n    # ...\n};\n\nif ($@) {\n    warn\
          \ \"Exception when calling TextMagicApi->get_message_preview: $@\\n\";\n\
          }"
  /api/v2/messages/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find messages"
      description: "Find outbound messages by given parameters."
      operationId: "searchOutboundMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "lastId"
        in: "query"
        description: "Filter results by ID, selecting all values lesser than the specified\
          \ ID. Note that \\'page\\' parameter is ignored when \\'lastId\\' is specified"
        required: false
        type: "integer"
        x-exportParamName: "LastId"
        x-optionalDataType: "Int32"
      - name: "ids"
        in: "query"
        description: "Find message by ID(s)"
        required: false
        type: "string"
        pattern: "[,\\d]+"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "sessionId"
        in: "query"
        description: "Find messages by session ID"
        required: false
        type: "integer"
        x-exportParamName: "SessionId"
        x-optionalDataType: "Int32"
      - name: "statuses"
        in: "query"
        description: "Find messages by status"
        required: false
        type: "string"
        enum:
        - "q"
        - "s"
        - "e"
        - "r"
        - "a"
        - "d"
        - "b"
        - "f"
        - "u"
        - "j"
        - "i"
        - "p"
        - "h"
        x-example: "q"
        x-exportParamName: "Statuses"
        x-optionalDataType: "String"
      - name: "includeDeleted"
        in: "query"
        description: "Search also in deleted messages"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find messages by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchOutboundMessagesPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchOutboundMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $lastId = 1;\n$ids = \"sampleValue\";\n$sessionId = 1;\n$statuses = \"q\"\
          ;\n$includeDeleted = 0;\n$query = \"sampleValue\";\n\ntry {\n    // SearchOutboundMessagesPaginatedResponse\
          \ class object\n    $result = $api->searchOutboundMessages($page, $limit,\
          \ $lastId, $ids, $sessionId, $statuses, $includeDeleted, $query);\n    //\
          \ ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->searchOutboundMessages:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchOutboundMessages\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        int lastId = 1;\n        String ids = \"\
          sampleValue\";\n        int sessionId = 1;\n        String statuses = \"\
          q\";\n        int includeDeleted = 0;\n        String query = \"sampleValue\"\
          ;\n\n        try {\n            // SearchOutboundMessagesPaginatedResponse\
          \ class object\n            SearchOutboundMessagesPaginatedResponse obj\
          \ = apiInstance.searchOutboundMessages(page, limit, lastId, ids, sessionId,\
          \ statuses, includeDeleted, query);\n            // ...\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ searchOutboundMessages\");\n            e.printStackTrace();\n       \
          \ }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    lastId:\
          \ 1,\n    ids: \"sampleValue\",\n    sessionId: 1,\n    statuses: \"q\"\
          ,\n    includeDeleted: 0,\n    query: \"sampleValue\",\n}\n\napi.searchOutboundMessages().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  last_id: 1,\n  ids: 'sampleValue',\n  session_id:\
          \ 1,\n  statuses: 'q',\n  include_deleted: 0,\n  query: 'sampleValue',\n\
          }\n\nbegin\n    # SearchOutboundMessagesPaginatedResponse object\n    result\
          \ = api.search_outbound_messages(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->search_outbound_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchOutboundMessages method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            int lastId = 1;\n            string ids = \"\
          sampleValue\";\n            int sessionId = 1;\n            string statuses\
          \ = \"q\";\n            int includeDeleted = 0;\n            string query\
          \ = \"sampleValue\";\n\n            try {\n                // SearchOutboundMessagesPaginatedResponse\
          \ class object\n                var result = apiInstance.SearchOutboundMessages(page,\
          \ limit, lastId, ids, sessionId, statuses, includeDeleted, query);\n   \
          \             // ...\n            } catch (Exception e) {\n            \
          \    Console.WriteLine(\"Exception when calling searchOutboundMessages:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchOutboundMessages method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim lastId As Integer = 1\n       \
          \ Dim ids As String = \"sampleValue\"\n        Dim sessionId As Integer\
          \ = 1\n        Dim statuses As String = \"q\"\n        Dim includeDeleted\
          \ As Integer = 0\n        Dim query As String = \"sampleValue\"\n\n    \
          \    Try\n            ' SearchOutboundMessagesPaginatedResponse class object\n\
          \            Dim result = apiInstance.SearchOutboundMessages(page, limit,\
          \ lastId, ids, sessionId, statuses, includeDeleted, query)\n           \
          \ ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling searchOutboundMessages: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchOutboundMessagesOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        LastId: optional.NewInt32(1),\n\
          \        Ids: optional.NewString(\"sampleValue\"),\n        SessionId: optional.NewInt32(1),\n\
          \        Statuses: optional.NewString(\"q\"),\n        IncludeDeleted: optional.NewInt32(0),\n\
          \        Query: optional.NewString(\"sampleValue\"),\n    }\n\n    // tm.SearchOutboundMessagesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.SearchOutboundMessages(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    int lastId = 1;\n    std::string ids\
          \ = \"sampleValue\";\n    int sessionId = 1;\n    std::string statuses =\
          \ \"q\";\n    int includeDeleted = 0;\n    std::string query = \"sampleValue\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<SearchOutboundMessagesPaginatedResponse>>\
          \ result = api.searchOutboundMessages(page, limit, lastId, ids, sessionId,\
          \ statuses, includeDeleted, query);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"searchOutboundMessages() exception: \" <<\
          \ e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nlast_id = 1\nids = \"\
          sampleValue\"\nsession_id = 1\nstatuses = \"q\"\ninclude_deleted = 0\nquery\
          \ = \"sampleValue\"\n\ntry:\n    # SearchOutboundMessagesPaginatedResponse\
          \ object\n    result = api_instance.search_outbound_messages(page=page,\
          \ limit=limit, last_id=last_id, ids=ids, session_id=session_id, statuses=statuses,\
          \ include_deleted=include_deleted, query=query)\n    # ...\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->search_outbound_messages:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $lastId\
          \ = 1;\nmy $ids = 'sampleValue';\nmy $sessionId = 1;\nmy $statuses = 'q';\n\
          my $includeDeleted = 0;\nmy $query = 'sampleValue';\n\neval {\n    # SearchOutboundMessagesPaginatedResponse\
          \ object\n    my $result = $api_instance->search_outbound_messages(page\
          \ => $page, limit => $limit, lastId => $lastId, ids => $ids, sessionId =>\
          \ $sessionId, statuses => $statuses, includeDeleted => $includeDeleted,\
          \ query => $query);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when\
          \ calling TextMagicApi->search_outbound_messages: $@\\n\";\n}"
  /api/v2/messages/attachment: {}
  /api/v2/messages/prices:
    get:
      tags:
      - "TextMagic"
      summary: "Get pricing"
      description: "Get message prices for all countries."
      operationId: "getMessagePrices"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessagePricesResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetMessagePricesResponse class object\n    $result\
          \ = $api->getMessagePrices();\n    // ...\n} catch (Exception $e) {\n  \
          \  echo 'Exception when calling TextMagicApi->getMessagePrices: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetMessagePricesResponse class object\n\
          \            GetMessagePricesResponse obj = apiInstance.getMessagePrices();\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getMessagePrices\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getMessagePrices().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetMessagePricesResponse\
          \ object\n    result = api.get_message_prices()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_message_prices:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetMessagePricesResponse class object\n        \
          \        var result = apiInstance.GetMessagePrices();\n                //\
          \ ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getMessagePrices: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetMessagePricesResponse class object\n            Dim result\
          \ = apiInstance.GetMessagePrices()\n            ' ...\n        Catch e As\
          \ Exception\n            Console.WriteLine(\"Exception when calling getMessagePrices:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetMessagePricesResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetMessagePrices(auth, )\n\n\
          \    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetMessagePricesResponse>>\
          \ result = api.getMessagePrices();\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"getMessagePrices() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetMessagePricesResponse object\n    result = api_instance.get_message_prices()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_message_prices: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetMessagePricesResponse object\n    my $result = $api_instance->get_message_prices();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_message_prices:\
          \ $@\\n\";\n}"
  /api/v2/history:
    get:
      tags:
      - "TextMagic"
      summary: "Get history"
      description: "Get outbound messages history."
      operationId: "getOutboundMessagesHistory"
      parameters:
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "lastId"
        in: "query"
        description: "Filter results by ID, selecting all values lesser than the specified\
          \ ID."
        required: false
        type: "integer"
        x-exportParamName: "LastId"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find message by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "phone"
        - "sender"
        - "firstName"
        - "lastName"
        - "messageTime"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetOutboundMessagesHistoryPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getOutboundMessagesHistory\
          \ method below, default values will be used\n$limit = 10;\n$lastId = 1;\n\
          $query = \"sampleValue\";\n$orderBy = \"id\";\n$direction = \"desc\";\n\n\
          try {\n    // GetOutboundMessagesHistoryPaginatedResponse class object\n\
          \    $result = $api->getOutboundMessagesHistory($limit, $lastId, $query,\
          \ $orderBy, $direction);\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getOutboundMessagesHistory: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getOutboundMessagesHistory\
          \ method below, default values will be used\n        int limit = 10;\n \
          \       int lastId = 1;\n        String query = \"sampleValue\";\n     \
          \   String orderBy = \"id\";\n        String direction = \"desc\";\n\n \
          \       try {\n            // GetOutboundMessagesHistoryPaginatedResponse\
          \ class object\n            GetOutboundMessagesHistoryPaginatedResponse\
          \ obj = apiInstance.getOutboundMessagesHistory(limit, lastId, query, orderBy,\
          \ direction);\n            // ...\n        } catch (ApiException e) {\n\
          \            System.err.println(\"Exception when calling getOutboundMessagesHistory\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    limit: 10,\n    lastId: 1,\n    query:\
          \ \"sampleValue\",\n    orderBy: \"id\",\n    direction: \"desc\",\n}\n\n\
          api.getOutboundMessagesHistory().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  limit: 10,\n  last_id: 1,\n  query: 'sampleValue',\n  order_by: 'id',\n\
          \  direction: 'desc',\n}\n\nbegin\n    # GetOutboundMessagesHistoryPaginatedResponse\
          \ object\n    result = api.get_outbound_messages_history(params)\n    #\
          \ ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_outbound_messages_history: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getOutboundMessagesHistory method\
          \ below, default values will be used\n            int limit = 10;\n    \
          \        int lastId = 1;\n            string query = \"sampleValue\";\n\
          \            string orderBy = \"id\";\n            string direction = \"\
          desc\";\n\n            try {\n                // GetOutboundMessagesHistoryPaginatedResponse\
          \ class object\n                var result = apiInstance.GetOutboundMessagesHistory(limit,\
          \ lastId, query, orderBy, direction);\n                // ...\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling getOutboundMessagesHistory: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getOutboundMessagesHistory method\
          \ below, default values will be used\n        Dim limit As Integer = 10\n\
          \        Dim lastId As Integer = 1\n        Dim query As String = \"sampleValue\"\
          \n        Dim orderBy As String = \"id\"\n        Dim direction As String\
          \ = \"desc\"\n\n        Try\n            ' GetOutboundMessagesHistoryPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetOutboundMessagesHistory(limit,\
          \ lastId, query, orderBy, direction)\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling getOutboundMessagesHistory:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetOutboundMessagesHistoryOpts{\n\
          \        // Optional parameters\n        Limit: optional.NewInt32(10),\n\
          \        LastId: optional.NewInt32(1),\n        Query: optional.NewString(\"\
          sampleValue\"),\n        OrderBy: optional.NewString(\"id\"),\n        Direction:\
          \ optional.NewString(\"desc\"),\n    }\n\n    // tm.GetOutboundMessagesHistoryPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetOutboundMessagesHistory(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ limit = 10;\n    int lastId = 1;\n    std::string query = \"sampleValue\"\
          ;\n    std::string orderBy = \"id\";\n    std::string direction = \"desc\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<GetOutboundMessagesHistoryPaginatedResponse>>\
          \ result = api.getOutboundMessagesHistory(limit, lastId, query, orderBy,\
          \ direction);\n        result.wait();\n        // put operations with result\
          \ here...\n    } catch(const std::exception& e) {\n        std::cout <<\
          \ \"getOutboundMessagesHistory() exception: \" << e.what() << '\\n';\n \
          \   }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\nlimit = 10\nlast_id = 1\nquery = \"sampleValue\"\
          \norder_by = \"id\"\ndirection = \"desc\"\n\ntry:\n    # GetOutboundMessagesHistoryPaginatedResponse\
          \ object\n    result = api_instance.get_outbound_messages_history(limit=limit,\
          \ last_id=last_id, query=query, order_by=order_by, direction=direction)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_outbound_messages_history: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $limit = 10;\nmy $lastId = 1;\nmy $query\
          \ = 'sampleValue';\nmy $orderBy = 'id';\nmy $direction = 'desc';\n\neval\
          \ {\n    # GetOutboundMessagesHistoryPaginatedResponse object\n    my $result\
          \ = $api_instance->get_outbound_messages_history(limit => $limit, lastId\
          \ => $lastId, query => $query, orderBy => $orderBy, direction => $direction);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_outbound_messages_history:\
          \ $@\\n\";\n}"
  /api/v2/sessions:
    get:
      tags:
      - "TextMagic"
      summary: "Get all sessions"
      description: ""
      operationId: "getAllMessageSessions"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllMessageSessionsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllMessageSessions\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\n\
          try {\n    // GetAllMessageSessionsPaginatedResponse class object\n    $result\
          \ = $api->getAllMessageSessions($page, $limit);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getAllMessageSessions:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllMessageSessions\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // GetAllMessageSessionsPaginatedResponse\
          \ class object\n            GetAllMessageSessionsPaginatedResponse obj =\
          \ apiInstance.getAllMessageSessions(page, limit);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getAllMessageSessions\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getAllMessageSessions().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetAllMessageSessionsPaginatedResponse\
          \ object\n    result = api.get_all_message_sessions(params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_all_message_sessions:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllMessageSessions method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n\n            try {\n                // GetAllMessageSessionsPaginatedResponse\
          \ class object\n                var result = apiInstance.GetAllMessageSessions(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getAllMessageSessions:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllMessageSessions method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n\n        Try\n            ' GetAllMessageSessionsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetAllMessageSessions(page,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getAllMessageSessions: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllMessageSessionsOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetAllMessageSessionsPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetAllMessageSessions(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetAllMessageSessionsPaginatedResponse>>\
          \ result = api.getAllMessageSessions(page, limit);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getAllMessageSessions() exception: \" <<\
          \ e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetAllMessageSessionsPaginatedResponse\
          \ object\n    result = api_instance.get_all_message_sessions(page=page,\
          \ limit=limit)\n    # ...\nexcept ApiException as e:\n    print(\"Exception\
          \ when calling TextMagicApi->get_all_message_sessions: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetAllMessageSessionsPaginatedResponse object\n    my $result = $api_instance->get_all_message_sessions(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_all_message_sessions: $@\\n\";\n}"
  /api/v2/bulks/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get bulk message session status."
      description: ""
      operationId: "getBulkSession"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/BulkSession"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // BulkSession class object\n    $result =\
          \ $api->getBulkSession($id);\n    // ...\n} catch (Exception $e) {\n   \
          \ echo 'Exception when calling TextMagicApi->getBulkSession: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // BulkSession class\
          \ object\n            BulkSession obj = apiInstance.getBulkSession(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getBulkSession\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getBulkSession(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # BulkSession\
          \ object\n    result = api.get_bulk_session(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_bulk_session:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // BulkSession class object\n\
          \                var result = apiInstance.GetBulkSession(id);\n        \
          \        // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getBulkSession: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' BulkSession class object\n         \
          \   Dim result = apiInstance.GetBulkSession(id)\n            ' ...\n   \
          \     Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling getBulkSession: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.BulkSession struct\n    result, _, err := client.TextMagicApi.GetBulkSession(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<BulkSession>> result = api.getBulkSession(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getBulkSession()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # BulkSession object\n    result = api_instance.get_bulk_session(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_bulk_session: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # BulkSession object\n    my $result = $api_instance->get_bulk_session(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_bulk_session: $@\\n\";\n}"
  /api/v2/bulks:
    get:
      tags:
      - "TextMagic"
      summary: "Get all bulk sending sessions."
      description: ""
      operationId: "getAllBulkSessions"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllBulkSessionsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllBulkSessions\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\n\
          try {\n    // GetAllBulkSessionsPaginatedResponse class object\n    $result\
          \ = $api->getAllBulkSessions($page, $limit);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getAllBulkSessions:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllBulkSessions\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n\n        try {\n            // GetAllBulkSessionsPaginatedResponse\
          \ class object\n            GetAllBulkSessionsPaginatedResponse obj = apiInstance.getAllBulkSessions(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getAllBulkSessions\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getAllBulkSessions().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetAllBulkSessionsPaginatedResponse\
          \ object\n    result = api.get_all_bulk_sessions(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_all_bulk_sessions:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllBulkSessions method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // GetAllBulkSessionsPaginatedResponse\
          \ class object\n                var result = apiInstance.GetAllBulkSessions(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getAllBulkSessions:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllBulkSessions method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' GetAllBulkSessionsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetAllBulkSessions(page,\
          \ limit)\n            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getAllBulkSessions: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllBulkSessionsOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetAllBulkSessionsPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetAllBulkSessions(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetAllBulkSessionsPaginatedResponse>>\
          \ result = api.getAllBulkSessions(page, limit);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getAllBulkSessions() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetAllBulkSessionsPaginatedResponse\
          \ object\n    result = api_instance.get_all_bulk_sessions(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_all_bulk_sessions: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetAllBulkSessionsPaginatedResponse object\n    my $result = $api_instance->get_all_bulk_sessions(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_all_bulk_sessions: $@\\n\";\n}"
  /api/v2/sessions/{id}/messages:
    get:
      tags:
      - "TextMagic"
      summary: "Get a session messages"
      description: "A useful synonym for \"messages/search\" command with provided\
        \ \"sessionId\" parameter."
      operationId: "getMessagesBySessionId"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "statuses"
        in: "query"
        description: "Find messages by status"
        required: false
        type: "string"
        enum:
        - "q"
        - "s"
        - "e"
        - "r"
        - "a"
        - "d"
        - "b"
        - "f"
        - "u"
        - "j"
        - "i"
        - "p"
        - "h"
        x-exportParamName: "Statuses"
        x-optionalDataType: "String"
      - name: "includeDeleted"
        in: "query"
        description: "Search also in deleted messages"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessagesBySessionIdPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n// Optional, you can pass them as null values to getMessagesBySessionId\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $statuses = \"sampleValue\";\n$includeDeleted = 0;\n\ntry {\n    // GetMessagesBySessionIdPaginatedResponse\
          \ class object\n    $result = $api->getMessagesBySessionId($id, $page, $limit,\
          \ $statuses, $includeDeleted);\n    // ...\n} catch (Exception $e) {\n \
          \   echo 'Exception when calling TextMagicApi->getMessagesBySessionId: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n        // Optional, you can pass them as null values\
          \ to getMessagesBySessionId method below, default values will be used\n\
          \        int page = 1;\n        int limit = 10;\n        String statuses\
          \ = \"sampleValue\";\n        int includeDeleted = 0;\n\n        try {\n\
          \            // GetMessagesBySessionIdPaginatedResponse class object\n \
          \           GetMessagesBySessionIdPaginatedResponse obj = apiInstance.getMessagesBySessionId(id,\
          \ page, limit, statuses, includeDeleted);\n            // ...\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling getMessagesBySessionId\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\nparams = {\n// Optional parameters\n    page: 1,\n    limit:\
          \ 10,\n    statuses: \"sampleValue\",\n    includeDeleted: 0,\n}\n\napi.getMessagesBySessionId(id,\
          \ ).then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\nparams = {\n  # Optional\
          \ parameters\n  page: 1,\n  limit: 10,\n  statuses: 'sampleValue',\n  include_deleted:\
          \ 0,\n}\n\nbegin\n    # GetMessagesBySessionIdPaginatedResponse object\n\
          \    result = api.get_messages_by_session_id(id, params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_messages_by_session_id:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n            // Optional, you can pass them as null values to getMessagesBySessionId\
          \ method below, default values will be used\n            int page = 1;\n\
          \            int limit = 10;\n            string statuses = \"sampleValue\"\
          ;\n            int includeDeleted = 0;\n\n            try {\n          \
          \      // GetMessagesBySessionIdPaginatedResponse class object\n       \
          \         var result = apiInstance.GetMessagesBySessionId(id, page, limit,\
          \ statuses, includeDeleted);\n                // ...\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ getMessagesBySessionId: \"+e.Message);\n            }\n        }\n   \
          \ }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n        ' Optional, you can pass them as null values to getMessagesBySessionId\
          \ method below, default values will be used\n        Dim page As Integer\
          \ = 1\n        Dim limit As Integer = 10\n        Dim statuses As String\
          \ = \"sampleValue\"\n        Dim includeDeleted As Integer = 0\n\n     \
          \   Try\n            ' GetMessagesBySessionIdPaginatedResponse class object\n\
          \            Dim result = apiInstance.GetMessagesBySessionId(id, page, limit,\
          \ statuses, includeDeleted)\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling getMessagesBySessionId:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    opts := tm.GetMessagesBySessionIdOpts{\n        // Optional parameters\n\
          \        Page: optional.NewInt32(1),\n        Limit: optional.NewInt32(10),\n\
          \        Statuses: optional.NewString(\"sampleValue\"),\n        IncludeDeleted:\
          \ optional.NewInt32(0),\n    }\n\n    // tm.GetMessagesBySessionIdPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetMessagesBySessionId(auth,\
          \ id, &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n    // Optional parameters.\
          \ Important: if you want to use default value then pass boost::none value\n\
          \    int page = 1;\n    int limit = 10;\n    std::string statuses = \"sampleValue\"\
          ;\n    int includeDeleted = 0;\n\n    try {\n        pplx::task<std::shared_ptr<GetMessagesBySessionIdPaginatedResponse>>\
          \ result = api.getMessagesBySessionId(id, page, limit, statuses, includeDeleted);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getMessagesBySessionId()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          # Optional params, you can skip them\npage = 1\nlimit = 10\nstatuses = \"\
          sampleValue\"\ninclude_deleted = 0\n\ntry:\n    # GetMessagesBySessionIdPaginatedResponse\
          \ object\n    result = api_instance.get_messages_by_session_id(id=id, page=page,\
          \ limit=limit, statuses=statuses, include_deleted=include_deleted)\n   \
          \ # ...\nexcept ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_messages_by_session_id:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          # Optional params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy\
          \ $statuses = 'sampleValue';\nmy $includeDeleted = 0;\n\neval {\n    # GetMessagesBySessionIdPaginatedResponse\
          \ object\n    my $result = $api_instance->get_messages_by_session_id(id\
          \ => $id, page => $page, limit => $limit, statuses => $statuses, includeDeleted\
          \ => $includeDeleted);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_messages_by_session_id: $@\\n\";\n}"
  /api/v2/sessions/{id}/stat:
    get:
      tags:
      - "TextMagic"
      summary: "Get a session statistics"
      description: ""
      operationId: "getMessageSessionStat"
      parameters:
      - name: "includeDeleted"
        in: "query"
        description: "Search also in deleted messages"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessageSessionStatResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n// Optional, you can pass them as null values to getMessageSessionStat\
          \ method below, default values will be used\n$includeDeleted = 0;\n\ntry\
          \ {\n    // GetMessageSessionStatResponse class object\n    $result = $api->getMessageSessionStat($id,\
          \ $includeDeleted);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception\
          \ when calling TextMagicApi->getMessageSessionStat: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n        // Optional, you can pass them as null values\
          \ to getMessageSessionStat method below, default values will be used\n \
          \       int includeDeleted = 0;\n\n        try {\n            // GetMessageSessionStatResponse\
          \ class object\n            GetMessageSessionStatResponse obj = apiInstance.getMessageSessionStat(id,\
          \ includeDeleted);\n            // ...\n        } catch (ApiException e)\
          \ {\n            System.err.println(\"Exception when calling getMessageSessionStat\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\nparams = {\n// Optional parameters\n    includeDeleted: 0,\n\
          }\n\napi.getMessageSessionStat(id, ).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\nparams = {\n  # Optional\
          \ parameters\n  include_deleted: 0,\n}\n\nbegin\n    # GetMessageSessionStatResponse\
          \ object\n    result = api.get_message_session_stat(id, params)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_message_session_stat:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n            // Optional, you can pass them as null values to getMessageSessionStat\
          \ method below, default values will be used\n            int includeDeleted\
          \ = 0;\n\n            try {\n                // GetMessageSessionStatResponse\
          \ class object\n                var result = apiInstance.GetMessageSessionStat(id,\
          \ includeDeleted);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getMessageSessionStat:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n        ' Optional, you can pass them as null values to getMessageSessionStat\
          \ method below, default values will be used\n        Dim includeDeleted\
          \ As Integer = 0\n\n        Try\n            ' GetMessageSessionStatResponse\
          \ class object\n            Dim result = apiInstance.GetMessageSessionStat(id,\
          \ includeDeleted)\n            ' ...\n        Catch e As Exception\n   \
          \         Console.WriteLine(\"Exception when calling getMessageSessionStat:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    opts := tm.GetMessageSessionStatOpts{\n        // Optional parameters\n\
          \        IncludeDeleted: optional.NewInt32(0),\n    }\n\n    // tm.GetMessageSessionStatResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetMessageSessionStat(auth,\
          \ id, &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n    // Optional parameters.\
          \ Important: if you want to use default value then pass boost::none value\n\
          \    int includeDeleted = 0;\n\n    try {\n        pplx::task<std::shared_ptr<GetMessageSessionStatResponse>>\
          \ result = api.getMessageSessionStat(id, includeDeleted);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getMessageSessionStat() exception: \" <<\
          \ e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          # Optional params, you can skip them\ninclude_deleted = 0\n\ntry:\n    #\
          \ GetMessageSessionStatResponse object\n    result = api_instance.get_message_session_stat(id=id,\
          \ include_deleted=include_deleted)\n    # ...\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->get_message_session_stat:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          # Optional params, you can skip them\nmy $includeDeleted = 0;\n\neval {\n\
          \    # GetMessageSessionStatResponse object\n    my $result = $api_instance->get_message_session_stat(id\
          \ => $id, includeDeleted => $includeDeleted);\n    # ...\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->get_message_session_stat:\
          \ $@\\n\";\n}"
  /api/v2/sessions/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a session details"
      description: ""
      operationId: "getMessageSession"
      parameters:
      - name: "id"
        in: "path"
        description: "a session ID"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/MessageSession"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // MessageSession class object\n    $result\
          \ = $api->getMessageSession($id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getMessageSession: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // MessageSession class\
          \ object\n            MessageSession obj = apiInstance.getMessageSession(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getMessageSession\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getMessageSession(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # MessageSession\
          \ object\n    result = api.get_message_session(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_message_session:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // MessageSession class object\n\
          \                var result = apiInstance.GetMessageSession(id);\n     \
          \           // ...\n            } catch (Exception e) {\n              \
          \  Console.WriteLine(\"Exception when calling getMessageSession: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' MessageSession class object\n      \
          \      Dim result = apiInstance.GetMessageSession(id)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getMessageSession: \" + e.Message)\n        End Try\n   \
          \ End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.MessageSession struct\n    result, _, err := client.TextMagicApi.GetMessageSession(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<MessageSession>> result = api.getMessageSession(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getMessageSession()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # MessageSession object\n    result = api_instance.get_message_session(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_message_session: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # MessageSession object\n    my $result = $api_instance->get_message_session(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_message_session: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a session"
      description: ""
      operationId: "deleteMessageSession"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteMessageSession($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteMessageSession:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteMessageSession(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteMessageSession\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteMessageSession(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_message_session(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_message_session:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteMessageSession(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteMessageSession: \"+e.Message);\n          \
          \  }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteMessageSession(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteMessageSession: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteMessageSession(auth, id)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteMessageSession(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteMessageSession()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_message_session(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_message_session:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_message_session(id => $id);\n};\n\n\
          if ($@) {\n    warn \"Exception when calling TextMagicApi->delete_message_session:\
          \ $@\\n\";\n}"
  /api/v2/sessions/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete sessions (bulk)"
      description: ""
      operationId: "deleteMessageSessionsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteMessageSessionsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteMessageSessionsBulkInputObject"
        x-exportParamName: "DeleteMessageSessionsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteMessageSessionsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(0);\n\ntry {\n    $api->deleteMessageSessionsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteMessageSessionsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteMessageSessionsBulkInputObject input = new DeleteMessageSessionsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(0);\n\n        try\
          \ {\n            apiInstance.deleteMessageSessionsBulk(input);\n       \
          \ } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteMessageSessionsBulk\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 0,\n\
          }\n\napi.deleteMessageSessionsBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteMessageSessionsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 0\n\nbegin\n    api.delete_message_sessions_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_message_sessions_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteMessageSessionsBulkInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Ids = \"\
          1,2,3\";\n            obj.All = 0;\n\n            try {\n              \
          \  apiInstance.DeleteMessageSessionsBulk(obj);\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling deleteMessageSessionsBulk:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteMessageSessionsBulkInputObject With {\n            .Ids = \"1,2,3\"\
          ,\n            .All = 0\n        }\n\n        Try\n            apiInstance.DeleteMessageSessionsBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteMessageSessionsBulk: \" + e.Message)\n    \
          \    End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 0,\n    }\n\n    client.TextMagicApi.DeleteMessageSessionsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteMessageSessionsBulkInputObject>\
          \ input(new DeleteMessageSessionsBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(0);\n\
          \n    try {\n        pplx::task result = api.deleteMessageSessionsBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"deleteMessageSessionsBulk() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteMessageSessionsBulkInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.ids = \"1,2,3\"\ninput.all = 0\n\ntry:\n    api_instance.delete_message_sessions_bulk(delete_message_sessions_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_message_sessions_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteMessageSessionsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteMessageSessionsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->delete_message_sessions_bulk(delete_message_sessions_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_message_sessions_bulk:\
          \ $@\\n\";\n}"
  /api/v2/schedules:
    get:
      tags:
      - "TextMagic"
      summary: "Get all scheduled messages"
      description: ""
      operationId: "getAllScheduledMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "status"
        in: "query"
        description: "Fetch schedules with the specific status: a - actual, c - completed,\
          \ x - all"
        required: false
        type: "string"
        default: "x"
        enum:
        - "a"
        - "c"
        - "x"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "nextSend"
        - "lastSend"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllScheduledMessagesPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllScheduledMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $status = \"x\";\n$orderBy = \"id\";\n$direction = \"desc\";\n\ntry {\n\
          \    // GetAllScheduledMessagesPaginatedResponse class object\n    $result\
          \ = $api->getAllScheduledMessages($page, $limit, $status, $orderBy, $direction);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getAllScheduledMessages: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllScheduledMessages\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String status = \"x\";\n        String orderBy\
          \ = \"id\";\n        String direction = \"desc\";\n\n        try {\n   \
          \         // GetAllScheduledMessagesPaginatedResponse class object\n   \
          \         GetAllScheduledMessagesPaginatedResponse obj = apiInstance.getAllScheduledMessages(page,\
          \ limit, status, orderBy, direction);\n            // ...\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ getAllScheduledMessages\");\n            e.printStackTrace();\n      \
          \  }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    status:\
          \ \"x\",\n    orderBy: \"id\",\n    direction: \"desc\",\n}\n\napi.getAllScheduledMessages().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  status: 'x',\n  order_by: 'id',\n  direction:\
          \ 'desc',\n}\n\nbegin\n    # GetAllScheduledMessagesPaginatedResponse object\n\
          \    result = api.get_all_scheduled_messages(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_all_scheduled_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllScheduledMessages method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            string status = \"x\";\n            string orderBy\
          \ = \"id\";\n            string direction = \"desc\";\n\n            try\
          \ {\n                // GetAllScheduledMessagesPaginatedResponse class object\n\
          \                var result = apiInstance.GetAllScheduledMessages(page,\
          \ limit, status, orderBy, direction);\n                // ...\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling getAllScheduledMessages: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllScheduledMessages method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim status As String = \"x\"\n    \
          \    Dim orderBy As String = \"id\"\n        Dim direction As String = \"\
          desc\"\n\n        Try\n            ' GetAllScheduledMessagesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetAllScheduledMessages(page,\
          \ limit, status, orderBy, direction)\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling getAllScheduledMessages:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllScheduledMessagesOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        Status: optional.NewString(\"\
          x\"),\n        OrderBy: optional.NewString(\"id\"),\n        Direction:\
          \ optional.NewString(\"desc\"),\n    }\n\n    // tm.GetAllScheduledMessagesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetAllScheduledMessages(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string status = \"x\";\n    std::string\
          \ orderBy = \"id\";\n    std::string direction = \"desc\";\n\n    try {\n\
          \        pplx::task<std::shared_ptr<GetAllScheduledMessagesPaginatedResponse>>\
          \ result = api.getAllScheduledMessages(page, limit, status, orderBy, direction);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getAllScheduledMessages()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nstatus = \"x\"\norder_by\
          \ = \"id\"\ndirection = \"desc\"\n\ntry:\n    # GetAllScheduledMessagesPaginatedResponse\
          \ object\n    result = api_instance.get_all_scheduled_messages(page=page,\
          \ limit=limit, status=status, order_by=order_by, direction=direction)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_all_scheduled_messages: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $status\
          \ = 'x';\nmy $orderBy = 'id';\nmy $direction = 'desc';\n\neval {\n    #\
          \ GetAllScheduledMessagesPaginatedResponse object\n    my $result = $api_instance->get_all_scheduled_messages(page\
          \ => $page, limit => $limit, status => $status, orderBy => $orderBy, direction\
          \ => $direction);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when\
          \ calling TextMagicApi->get_all_scheduled_messages: $@\\n\";\n}"
  /api/v2/schedules/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find scheduled messages"
      description: ""
      operationId: "searchScheduledMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find messages by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "ids"
        in: "query"
        description: "Find schedules by ID(s)"
        required: false
        type: "string"
        pattern: "[,\\d]+"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Fetch schedules with the specific status: a - actual, c - completed,\
          \ x - all"
        required: false
        type: "string"
        default: "x"
        enum:
        - "x"
        - "a"
        - "c"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "nextSend"
        - "lastSend"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchScheduledMessagesPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchScheduledMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $query = \"sampleValue\";\n$ids = \"sampleValue\";\n$status = \"x\";\n$orderBy\
          \ = \"id\";\n$direction = \"desc\";\n\ntry {\n    // SearchScheduledMessagesPaginatedResponse\
          \ class object\n    $result = $api->searchScheduledMessages($page, $limit,\
          \ $query, $ids, $status, $orderBy, $direction);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->searchScheduledMessages:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchScheduledMessages\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String query = \"sampleValue\";\n       \
          \ String ids = \"sampleValue\";\n        String status = \"x\";\n      \
          \  String orderBy = \"id\";\n        String direction = \"desc\";\n\n  \
          \      try {\n            // SearchScheduledMessagesPaginatedResponse class\
          \ object\n            SearchScheduledMessagesPaginatedResponse obj = apiInstance.searchScheduledMessages(page,\
          \ limit, query, ids, status, orderBy, direction);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling searchScheduledMessages\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    query:\
          \ \"sampleValue\",\n    ids: \"sampleValue\",\n    status: \"x\",\n    orderBy:\
          \ \"id\",\n    direction: \"desc\",\n}\n\napi.searchScheduledMessages().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  query: 'sampleValue',\n  ids: 'sampleValue',\n\
          \  status: 'x',\n  order_by: 'id',\n  direction: 'desc',\n}\n\nbegin\n \
          \   # SearchScheduledMessagesPaginatedResponse object\n    result = api.search_scheduled_messages(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->search_scheduled_messages: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchScheduledMessages method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            string query = \"sampleValue\";\n           \
          \ string ids = \"sampleValue\";\n            string status = \"x\";\n  \
          \          string orderBy = \"id\";\n            string direction = \"desc\"\
          ;\n\n            try {\n                // SearchScheduledMessagesPaginatedResponse\
          \ class object\n                var result = apiInstance.SearchScheduledMessages(page,\
          \ limit, query, ids, status, orderBy, direction);\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling searchScheduledMessages: \"+e.Message);\n       \
          \     }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchScheduledMessages method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim query As String = \"sampleValue\"\
          \n        Dim ids As String = \"sampleValue\"\n        Dim status As String\
          \ = \"x\"\n        Dim orderBy As String = \"id\"\n        Dim direction\
          \ As String = \"desc\"\n\n        Try\n            ' SearchScheduledMessagesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.SearchScheduledMessages(page,\
          \ limit, query, ids, status, orderBy, direction)\n            ' ...\n  \
          \      Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling searchScheduledMessages: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchScheduledMessagesOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        Query: optional.NewString(\"\
          sampleValue\"),\n        Ids: optional.NewString(\"sampleValue\"),\n   \
          \     Status: optional.NewString(\"x\"),\n        OrderBy: optional.NewString(\"\
          id\"),\n        Direction: optional.NewString(\"desc\"),\n    }\n\n    //\
          \ tm.SearchScheduledMessagesPaginatedResponse struct\n    result, _, err\
          \ := client.TextMagicApi.SearchScheduledMessages(auth, &opts)\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string query = \"sampleValue\"\
          ;\n    std::string ids = \"sampleValue\";\n    std::string status = \"x\"\
          ;\n    std::string orderBy = \"id\";\n    std::string direction = \"desc\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<SearchScheduledMessagesPaginatedResponse>>\
          \ result = api.searchScheduledMessages(page, limit, query, ids, status,\
          \ orderBy, direction);\n        result.wait();\n        // put operations\
          \ with result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"searchScheduledMessages() exception: \" << e.what() << '\\n';\n \
          \   }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nquery = \"sampleValue\"\
          \nids = \"sampleValue\"\nstatus = \"x\"\norder_by = \"id\"\ndirection =\
          \ \"desc\"\n\ntry:\n    # SearchScheduledMessagesPaginatedResponse object\n\
          \    result = api_instance.search_scheduled_messages(page=page, limit=limit,\
          \ query=query, ids=ids, status=status, order_by=order_by, direction=direction)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->search_scheduled_messages: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $query =\
          \ 'sampleValue';\nmy $ids = 'sampleValue';\nmy $status = 'x';\nmy $orderBy\
          \ = 'id';\nmy $direction = 'desc';\n\neval {\n    # SearchScheduledMessagesPaginatedResponse\
          \ object\n    my $result = $api_instance->search_scheduled_messages(page\
          \ => $page, limit => $limit, query => $query, ids => $ids, status => $status,\
          \ orderBy => $orderBy, direction => $direction);\n    # ...\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->search_scheduled_messages:\
          \ $@\\n\";\n}"
  /api/v2/schedules/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single scheduled message"
      description: ""
      operationId: "getScheduledMessage"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/MessagesIcs"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // MessagesIcs class object\n    $result =\
          \ $api->getScheduledMessage($id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getScheduledMessage: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // MessagesIcs class\
          \ object\n            MessagesIcs obj = apiInstance.getScheduledMessage(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getScheduledMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getScheduledMessage(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # MessagesIcs\
          \ object\n    result = api.get_scheduled_message(id)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_scheduled_message:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // MessagesIcs class object\n\
          \                var result = apiInstance.GetScheduledMessage(id);\n   \
          \             // ...\n            } catch (Exception e) {\n            \
          \    Console.WriteLine(\"Exception when calling getScheduledMessage: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' MessagesIcs class object\n         \
          \   Dim result = apiInstance.GetScheduledMessage(id)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getScheduledMessage: \" + e.Message)\n        End Try\n \
          \   End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.MessagesIcs struct\n    result, _, err := client.TextMagicApi.GetScheduledMessage(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<MessagesIcs>> result = api.getScheduledMessage(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getScheduledMessage()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # MessagesIcs object\n    result = api_instance.get_scheduled_message(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_scheduled_message: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # MessagesIcs object\n    my $result = $api_instance->get_scheduled_message(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_scheduled_message: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a single scheduled message"
      description: ""
      operationId: "deleteScheduledMessage"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteScheduledMessage($id);\n} catch\
          \ (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteScheduledMessage:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteScheduledMessage(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteScheduledMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteScheduledMessage(id).then(function (data) {\n   \
          \ console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_scheduled_message(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_scheduled_message:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteScheduledMessage(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteScheduledMessage: \"+e.Message);\n        \
          \    }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteScheduledMessage(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteScheduledMessage: \" + e.Message)\n       \
          \ End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteScheduledMessage(auth, id)\n\n    if err\
          \ != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n\
          }\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteScheduledMessage(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteScheduledMessage()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_scheduled_message(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_scheduled_message:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_scheduled_message(id => $id);\n};\n\n\
          if ($@) {\n    warn \"Exception when calling TextMagicApi->delete_scheduled_message:\
          \ $@\\n\";\n}"
  /api/v2/schedules/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete scheduled messages (bulk)"
      description: ""
      operationId: "deleteScheduledMessagesBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteScheduledMessagesBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteScheduledMessagesBulkInputObject"
        x-exportParamName: "DeleteScheduledMessagesBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteScheduledMessagesBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(0);\n$input->setStatus(\"undefined\");\n\ntry\
          \ {\n    $api->deleteScheduledMessagesBulk($input);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteScheduledMessagesBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteScheduledMessagesBulkInputObject input = new DeleteScheduledMessagesBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(0);\n        input.setStatus(\"\
          undefined\");\n\n        try {\n            apiInstance.deleteScheduledMessagesBulk(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteScheduledMessagesBulk\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 0,\n\
          \    status: \"undefined\",\n}\n\napi.deleteScheduledMessagesBulk(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteScheduledMessagesBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 0\nobj.status = \"undefined\"\n\nbegin\n    api.delete_scheduled_messages_bulk(input)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_scheduled_messages_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteScheduledMessagesBulkInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Ids = \"\
          1,2,3\";\n            obj.All = 0;\n            obj.Status = \"undefined\"\
          ;\n\n            try {\n                apiInstance.DeleteScheduledMessagesBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteScheduledMessagesBulk: \"+e.Message);\n   \
          \         }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteScheduledMessagesBulkInputObject With {\n            .Ids = \"1,2,3\"\
          ,\n            .All = 0,\n            .Status = \"undefined\"\n        }\n\
          \n        Try\n            apiInstance.DeleteScheduledMessagesBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteScheduledMessagesBulk: \" + e.Message)\n  \
          \      End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 0,\n        Status: \"undefined\",\n    }\n\n    client.TextMagicApi.DeleteScheduledMessagesBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteScheduledMessagesBulkInputObject>\
          \ input(new DeleteScheduledMessagesBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(0);\n\
          \    input->setStatus(\"undefined\");\n\n    try {\n        pplx::task result\
          \ = api.deleteScheduledMessagesBulk(input);\n        result.wait();\n  \
          \  } catch(const std::exception& e) {\n        std::cout << \"deleteScheduledMessagesBulk()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteScheduledMessagesBulkInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.ids = \"1,2,3\"\ninput.all = 0\ninput.status\
          \ = \"undefined\"\n\ntry:\n    api_instance.delete_scheduled_messages_bulk(delete_scheduled_messages_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_scheduled_messages_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteScheduledMessagesBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteScheduledMessagesBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n    status => 'undefined',\n);\n\neval {\n    $api_instance->delete_scheduled_messages_bulk(delete_scheduled_messages_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_scheduled_messages_bulk:\
          \ $@\\n\";\n}"
  /api/v2/replies:
    get:
      tags:
      - "TextMagic"
      summary: "Get all inbound messages"
      description: ""
      operationId: "getAllInboundMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "sender"
        - "receiver"
        - "messageTime"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllInboundMessagesPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllInboundMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $orderBy = \"id\";\n$direction = \"desc\";\n\ntry {\n    // GetAllInboundMessagesPaginatedResponse\
          \ class object\n    $result = $api->getAllInboundMessages($page, $limit,\
          \ $orderBy, $direction);\n    // ...\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->getAllInboundMessages: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllInboundMessages\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String orderBy = \"id\";\n        String\
          \ direction = \"desc\";\n\n        try {\n            // GetAllInboundMessagesPaginatedResponse\
          \ class object\n            GetAllInboundMessagesPaginatedResponse obj =\
          \ apiInstance.getAllInboundMessages(page, limit, orderBy, direction);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getAllInboundMessages\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    orderBy:\
          \ \"id\",\n    direction: \"desc\",\n}\n\napi.getAllInboundMessages().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  order_by: 'id',\n  direction: 'desc',\n}\n\n\
          begin\n    # GetAllInboundMessagesPaginatedResponse object\n    result =\
          \ api.get_all_inbound_messages(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_all_inbound_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllInboundMessages method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            string orderBy = \"id\";\n            string\
          \ direction = \"desc\";\n\n            try {\n                // GetAllInboundMessagesPaginatedResponse\
          \ class object\n                var result = apiInstance.GetAllInboundMessages(page,\
          \ limit, orderBy, direction);\n                // ...\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ getAllInboundMessages: \"+e.Message);\n            }\n        }\n    }\n\
          }"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllInboundMessages method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim orderBy As String = \"id\"\n  \
          \      Dim direction As String = \"desc\"\n\n        Try\n            '\
          \ GetAllInboundMessagesPaginatedResponse class object\n            Dim result\
          \ = apiInstance.GetAllInboundMessages(page, limit, orderBy, direction)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getAllInboundMessages: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllInboundMessagesOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        OrderBy: optional.NewString(\"\
          id\"),\n        Direction: optional.NewString(\"desc\"),\n    }\n\n    //\
          \ tm.GetAllInboundMessagesPaginatedResponse struct\n    result, _, err :=\
          \ client.TextMagicApi.GetAllInboundMessages(auth, &opts)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\\
          n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string orderBy = \"id\";\n  \
          \  std::string direction = \"desc\";\n\n    try {\n        pplx::task<std::shared_ptr<GetAllInboundMessagesPaginatedResponse>>\
          \ result = api.getAllInboundMessages(page, limit, orderBy, direction);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getAllInboundMessages()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\norder_by = \"id\"\ndirection\
          \ = \"desc\"\n\ntry:\n    # GetAllInboundMessagesPaginatedResponse object\n\
          \    result = api_instance.get_all_inbound_messages(page=page, limit=limit,\
          \ order_by=order_by, direction=direction)\n    # ...\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->get_all_inbound_messages:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $orderBy\
          \ = 'id';\nmy $direction = 'desc';\n\neval {\n    # GetAllInboundMessagesPaginatedResponse\
          \ object\n    my $result = $api_instance->get_all_inbound_messages(page\
          \ => $page, limit => $limit, orderBy => $orderBy, direction => $direction);\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_all_inbound_messages:\
          \ $@\\n\";\n}"
  /api/v2/replies/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find inbound messages"
      description: "Find inbound messages by given parameters."
      operationId: "searchInboundMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "ids"
        in: "query"
        description: "Find message by ID(s)"
        required: false
        type: "string"
        pattern: "[,\\d]+"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "query"
        in: "query"
        description: "Find recipients by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "sender"
        - "receiver"
        - "messageTime"
        - "firstName"
        - "lastName"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      - name: "expand"
        in: "query"
        description: "Expand by adding firstName, lastName and contactId"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Expand"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchInboundMessagesPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchInboundMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $ids = \"sampleValue\";\n$query = \"sampleValue\";\n$orderBy = \"id\";\n\
          $direction = \"desc\";\n$expand = 0;\n\ntry {\n    // SearchInboundMessagesPaginatedResponse\
          \ class object\n    $result = $api->searchInboundMessages($page, $limit,\
          \ $ids, $query, $orderBy, $direction, $expand);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->searchInboundMessages:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchInboundMessages\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String ids = \"sampleValue\";\n        String\
          \ query = \"sampleValue\";\n        String orderBy = \"id\";\n        String\
          \ direction = \"desc\";\n        int expand = 0;\n\n        try {\n    \
          \        // SearchInboundMessagesPaginatedResponse class object\n      \
          \      SearchInboundMessagesPaginatedResponse obj = apiInstance.searchInboundMessages(page,\
          \ limit, ids, query, orderBy, direction, expand);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling searchInboundMessages\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    ids: \"\
          sampleValue\",\n    query: \"sampleValue\",\n    orderBy: \"id\",\n    direction:\
          \ \"desc\",\n    expand: 0,\n}\n\napi.searchInboundMessages().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  ids: 'sampleValue',\n  query: 'sampleValue',\n\
          \  order_by: 'id',\n  direction: 'desc',\n  expand: 0,\n}\n\nbegin\n   \
          \ # SearchInboundMessagesPaginatedResponse object\n    result = api.search_inbound_messages(params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->search_inbound_messages: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchInboundMessages method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            string ids = \"sampleValue\";\n            string\
          \ query = \"sampleValue\";\n            string orderBy = \"id\";\n     \
          \       string direction = \"desc\";\n            int expand = 0;\n\n  \
          \          try {\n                // SearchInboundMessagesPaginatedResponse\
          \ class object\n                var result = apiInstance.SearchInboundMessages(page,\
          \ limit, ids, query, orderBy, direction, expand);\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling searchInboundMessages: \"+e.Message);\n         \
          \   }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchInboundMessages method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim ids As String = \"sampleValue\"\
          \n        Dim query As String = \"sampleValue\"\n        Dim orderBy As\
          \ String = \"id\"\n        Dim direction As String = \"desc\"\n        Dim\
          \ expand As Integer = 0\n\n        Try\n            ' SearchInboundMessagesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.SearchInboundMessages(page,\
          \ limit, ids, query, orderBy, direction, expand)\n            ' ...\n  \
          \      Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling searchInboundMessages: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchInboundMessagesOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        Ids: optional.NewString(\"\
          sampleValue\"),\n        Query: optional.NewString(\"sampleValue\"),\n \
          \       OrderBy: optional.NewString(\"id\"),\n        Direction: optional.NewString(\"\
          desc\"),\n        Expand: optional.NewInt32(0),\n    }\n\n    // tm.SearchInboundMessagesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.SearchInboundMessages(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string ids = \"sampleValue\"\
          ;\n    std::string query = \"sampleValue\";\n    std::string orderBy = \"\
          id\";\n    std::string direction = \"desc\";\n    int expand = 0;\n\n  \
          \  try {\n        pplx::task<std::shared_ptr<SearchInboundMessagesPaginatedResponse>>\
          \ result = api.searchInboundMessages(page, limit, ids, query, orderBy, direction,\
          \ expand);\n        result.wait();\n        // put operations with result\
          \ here...\n    } catch(const std::exception& e) {\n        std::cout <<\
          \ \"searchInboundMessages() exception: \" << e.what() << '\\n';\n    }\n\
          \n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nids = \"sampleValue\"\
          \nquery = \"sampleValue\"\norder_by = \"id\"\ndirection = \"desc\"\nexpand\
          \ = 0\n\ntry:\n    # SearchInboundMessagesPaginatedResponse object\n   \
          \ result = api_instance.search_inbound_messages(page=page, limit=limit,\
          \ ids=ids, query=query, order_by=order_by, direction=direction, expand=expand)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->search_inbound_messages: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $ids = 'sampleValue';\n\
          my $query = 'sampleValue';\nmy $orderBy = 'id';\nmy $direction = 'desc';\n\
          my $expand = 0;\n\neval {\n    # SearchInboundMessagesPaginatedResponse\
          \ object\n    my $result = $api_instance->search_inbound_messages(page =>\
          \ $page, limit => $limit, ids => $ids, query => $query, orderBy => $orderBy,\
          \ direction => $direction, expand => $expand);\n    # ...\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->search_inbound_messages:\
          \ $@\\n\";\n}"
  /api/v2/replies/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single inbound message"
      description: ""
      operationId: "getInboundMessage"
      parameters:
      - name: "id"
        in: "path"
        description: "The unique numeric ID for the inbound message."
        required: true
        type: "integer"
        x-example: 1782832
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/MessageIn"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1782832;\n\ntry {\n    // MessageIn class object\n    $result\
          \ = $api->getInboundMessage($id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getInboundMessage: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1782832;\n\n        try {\n            // MessageIn class\
          \ object\n            MessageIn obj = apiInstance.getInboundMessage(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getInboundMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1782832;\n\napi.getInboundMessage(id).then(function (data) {\n  \
          \  console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1782832\n\nbegin\n    #\
          \ MessageIn object\n    result = api.get_inbound_message(id)\n    # ...\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_inbound_message:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1782832;\n\n            try {\n                // MessageIn class object\n\
          \                var result = apiInstance.GetInboundMessage(id);\n     \
          \           // ...\n            } catch (Exception e) {\n              \
          \  Console.WriteLine(\"Exception when calling getInboundMessage: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1782832\n\n        Try\n            ' MessageIn class object\n     \
          \       Dim result = apiInstance.GetInboundMessage(id)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getInboundMessage: \" + e.Message)\n        End Try\n   \
          \ End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1782832\n\
          \n    // tm.MessageIn struct\n    result, _, err := client.TextMagicApi.GetInboundMessage(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1782832;\n\n    try {\n\
          \        pplx::task<std::shared_ptr<MessageIn>> result = api.getInboundMessage(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getInboundMessage()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1782832\n\
          \ntry:\n    # MessageIn object\n    result = api_instance.get_inbound_message(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_inbound_message: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1782832;\n\
          \neval {\n    # MessageIn object\n    my $result = $api_instance->get_inbound_message(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_inbound_message: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a single inbound message"
      description: "> Note, deleted inbound message will disappear from TextMagic\
        \ Online, chats, and any other place they are referenced.  So, be careful!\n"
      operationId: "deleteInboundMessage"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        description: "The unique numeric ID for the inbound message."
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteInboundMessage($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteInboundMessage:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteInboundMessage(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteInboundMessage\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteInboundMessage(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_inbound_message(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_inbound_message:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteInboundMessage(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteInboundMessage: \"+e.Message);\n          \
          \  }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteInboundMessage(id)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteInboundMessage: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteInboundMessage(auth, id)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteInboundMessage(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteInboundMessage()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_inbound_message(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_inbound_message:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_inbound_message(id => $id);\n};\n\n\
          if ($@) {\n    warn \"Exception when calling TextMagicApi->delete_inbound_message:\
          \ $@\\n\";\n}"
  /api/v2/replies/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete inbound messages (bulk)"
      description: "> Note, deleted inbound message will disappear from TextMagic\
        \ Online, chats, and any other place they are referenced.  So, be careful!\n"
      operationId: "deleteInboundMessagesBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteInboundMessagesBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteInboundMessagesBulkInputObject"
        x-exportParamName: "DeleteInboundMessagesBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteInboundMessagesBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(0);\n\ntry {\n    $api->deleteInboundMessagesBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteInboundMessagesBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteInboundMessagesBulkInputObject input = new DeleteInboundMessagesBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(0);\n\n        try\
          \ {\n            apiInstance.deleteInboundMessagesBulk(input);\n       \
          \ } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteInboundMessagesBulk\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: 0,\n\
          }\n\napi.deleteInboundMessagesBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteInboundMessagesBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ 0\n\nbegin\n    api.delete_inbound_messages_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_inbound_messages_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteInboundMessagesBulkInputObject();\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Ids = \"\
          1,2,3\";\n            obj.All = 0;\n\n            try {\n              \
          \  apiInstance.DeleteInboundMessagesBulk(obj);\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling deleteInboundMessagesBulk:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteInboundMessagesBulkInputObject With {\n            .Ids = \"1,2,3\"\
          ,\n            .All = 0\n        }\n\n        Try\n            apiInstance.DeleteInboundMessagesBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteInboundMessagesBulk: \" + e.Message)\n    \
          \    End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: 0,\n    }\n\n    client.TextMagicApi.DeleteInboundMessagesBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteInboundMessagesBulkInputObject>\
          \ input(new DeleteInboundMessagesBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(0);\n\
          \n    try {\n        pplx::task result = api.deleteInboundMessagesBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"deleteInboundMessagesBulk() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteInboundMessagesBulkInputObject()\n# Optional parameters,\
          \ you can skip them\ninput.ids = \"1,2,3\"\ninput.all = 0\n\ntry:\n    api_instance.delete_inbound_messages_bulk(delete_inbound_messages_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_inbound_messages_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteInboundMessagesBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteInboundMessagesBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->delete_inbound_messages_bulk(delete_inbound_messages_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_inbound_messages_bulk:\
          \ $@\\n\";\n}"
  /api/v2/stats/messaging:
    get:
      tags:
      - "TextMagic"
      summary: "Return messaging statistics."
      description: ""
      operationId: "getMessagingStat"
      parameters:
      - name: "by"
        in: "query"
        description: "Group results by specified period: off, day, month or year.\
          \ Default is off"
        required: false
        type: "string"
        default: "off"
        enum:
        - "off"
        - "day"
        - "month"
        - "year"
        x-exportParamName: "By"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Start date in unix timestamp format. Default is 7 days ago"
        required: false
        type: "integer"
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End date in unix timestamp format. Default is now"
        required: false
        type: "string"
        x-exportParamName: "End"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessagingStatResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getMessagingStat\
          \ method below, default values will be used\n$by = \"off\";\n$start = 1;\n\
          $end = \"sampleValue\";\n\ntry {\n    // GetMessagingStatResponse class\
          \ object\n    $result = $api->getMessagingStat($by, $start, $end);\n   \
          \ // ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->getMessagingStat:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getMessagingStat\
          \ method below, default values will be used\n        String by = \"off\"\
          ;\n        int start = 1;\n        String end = \"sampleValue\";\n\n   \
          \     try {\n            // GetMessagingStatResponse class object\n    \
          \        GetMessagingStatResponse obj = apiInstance.getMessagingStat(by,\
          \ start, end);\n            // ...\n        } catch (ApiException e) {\n\
          \            System.err.println(\"Exception when calling getMessagingStat\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    by: \"off\",\n    start: 1,\n    end:\
          \ \"sampleValue\",\n}\n\napi.getMessagingStat().then(function (data) {\n\
          \    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  by: 'off',\n  start: 1,\n  end: 'sampleValue',\n}\n\nbegin\n    # GetMessagingStatResponse\
          \ object\n    result = api.get_messaging_stat(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_messaging_stat:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getMessagingStat method below, default\
          \ values will be used\n            string by = \"off\";\n            int\
          \ start = 1;\n            string end = \"sampleValue\";\n\n            try\
          \ {\n                // GetMessagingStatResponse class object\n        \
          \        var result = apiInstance.GetMessagingStat(by, start, end);\n  \
          \              // ...\n            } catch (Exception e) {\n           \
          \     Console.WriteLine(\"Exception when calling getMessagingStat: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getMessagingStat method below, default\
          \ values will be used\n        Dim by As String = \"off\"\n        Dim start\
          \ As Integer = 1\n        Dim end As String = \"sampleValue\"\n\n      \
          \  Try\n            ' GetMessagingStatResponse class object\n          \
          \  Dim result = apiInstance.GetMessagingStat(by, start, end)\n         \
          \   ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getMessagingStat: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetMessagingStatOpts{\n \
          \       // Optional parameters\n        By: optional.NewString(\"off\"),\n\
          \        Start: optional.NewInt32(1),\n        End: optional.NewString(\"\
          sampleValue\"),\n    }\n\n    // tm.GetMessagingStatResponse struct\n  \
          \  result, _, err := client.TextMagicApi.GetMessagingStat(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    std::string\
          \ by = \"off\";\n    int start = 1;\n    std::string end = \"sampleValue\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<GetMessagingStatResponse>>\
          \ result = api.getMessagingStat(by, start, end);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getMessagingStat() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\nby = \"off\"\nstart = 1\nend = \"sampleValue\"\
          \n\ntry:\n    # GetMessagingStatResponse object\n    result = api_instance.get_messaging_stat(by=by,\
          \ start=start, end=end)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->get_messaging_stat: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $by = 'off';\nmy $start = 1;\nmy $end =\
          \ 'sampleValue';\n\neval {\n    # GetMessagingStatResponse object\n    my\
          \ $result = $api_instance->get_messaging_stat(by => $by, start => $start,\
          \ end => $end);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_messaging_stat: $@\\n\";\n}"
  /api/v2/stats/spending:
    get:
      tags:
      - "TextMagic"
      summary: "Return account spending statistics."
      description: ""
      operationId: "getSpendingStat"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "start"
        in: "query"
        description: "Optional. Start date in unix timestamp format. Default is 7\
          \ days ago"
        required: false
        type: "integer"
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "Optional. End date in unix timestamp format. Default is now"
        required: false
        type: "integer"
        allowEmptyValue: false
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetSpendingStatPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getSpendingStat method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$start =\
          \ 1;\n$end = 1;\n\ntry {\n    // GetSpendingStatPaginatedResponse class\
          \ object\n    $result = $api->getSpendingStat($page, $limit, $start, $end);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getSpendingStat: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getSpendingStat\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        int start = 1;\n        int end = 1;\n\n\
          \        try {\n            // GetSpendingStatPaginatedResponse class object\n\
          \            GetSpendingStatPaginatedResponse obj = apiInstance.getSpendingStat(page,\
          \ limit, start, end);\n            // ...\n        } catch (ApiException\
          \ e) {\n            System.err.println(\"Exception when calling getSpendingStat\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    start:\
          \ 1,\n    end: 1,\n}\n\napi.getSpendingStat().then(function (data) {\n \
          \   console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  start: 1,\n  end: 1,\n}\n\nbegin\n    # GetSpendingStatPaginatedResponse\
          \ object\n    result = api.get_spending_stat(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_spending_stat:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getSpendingStat method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            int start = 1;\n            int end = 1;\n\n      \
          \      try {\n                // GetSpendingStatPaginatedResponse class\
          \ object\n                var result = apiInstance.GetSpendingStat(page,\
          \ limit, start, end);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling getSpendingStat:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getSpendingStat method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim start As Integer = 1\n        Dim end As\
          \ Integer = 1\n\n        Try\n            ' GetSpendingStatPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetSpendingStat(page,\
          \ limit, start, end)\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling getSpendingStat:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetSpendingStatOpts{\n  \
          \      // Optional parameters\n        Page: optional.NewInt32(1),\n   \
          \     Limit: optional.NewInt32(10),\n        Start: optional.NewInt32(1),\n\
          \        End: optional.NewInt32(1),\n    }\n\n    // tm.GetSpendingStatPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetSpendingStat(auth,\
          \ &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    int start = 1;\n    int end = 1;\n\
          \n    try {\n        pplx::task<std::shared_ptr<GetSpendingStatPaginatedResponse>>\
          \ result = api.getSpendingStat(page, limit, start, end);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getSpendingStat() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nstart = 1\nend = 1\n\n\
          try:\n    # GetSpendingStatPaginatedResponse object\n    result = api_instance.get_spending_stat(page=page,\
          \ limit=limit, start=start, end=end)\n    # ...\nexcept ApiException as\
          \ e:\n    print(\"Exception when calling TextMagicApi->get_spending_stat:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $start =\
          \ 1;\nmy $end = 1;\n\neval {\n    # GetSpendingStatPaginatedResponse object\n\
          \    my $result = $api_instance->get_spending_stat(page => $page, limit\
          \ => $limit, start => $start, end => $end);\n    # ...\n};\n\nif ($@) {\n\
          \    warn \"Exception when calling TextMagicApi->get_spending_stat: $@\\\
          n\";\n}"
  /api/v2/invoices:
    get:
      tags:
      - "TextMagic"
      summary: "Return account invoices."
      description: ""
      operationId: "getInvoices"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetInvoicesPaginatedResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        403:
          description: "Returned when current user is not allowed to manage invoices"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getInvoices method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n\ntry {\n\
          \    // GetInvoicesPaginatedResponse class object\n    $result = $api->getInvoices($page,\
          \ $limit);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception when\
          \ calling TextMagicApi->getInvoices: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getInvoices method\
          \ below, default values will be used\n        int page = 1;\n        int\
          \ limit = 10;\n\n        try {\n            // GetInvoicesPaginatedResponse\
          \ class object\n            GetInvoicesPaginatedResponse obj = apiInstance.getInvoices(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getInvoices\");\n \
          \           e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getInvoices().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetInvoicesPaginatedResponse\
          \ object\n    result = api.get_invoices(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_invoices: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getInvoices method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n\n            try {\n                // GetInvoicesPaginatedResponse\
          \ class object\n                var result = apiInstance.GetInvoices(page,\
          \ limit);\n                // ...\n            } catch (Exception e) {\n\
          \                Console.WriteLine(\"Exception when calling getInvoices:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getInvoices method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n\n        Try\n            ' GetInvoicesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetInvoices(page, limit)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getInvoices: \" + e.Message)\n        End Try\n \
          \   End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetInvoicesOpts{\n      \
          \  // Optional parameters\n        Page: optional.NewInt32(1),\n       \
          \ Limit: optional.NewInt32(10),\n    }\n\n    // tm.GetInvoicesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetInvoices(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetInvoicesPaginatedResponse>>\
          \ result = api.getInvoices(page, limit);\n        result.wait();\n     \
          \   // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getInvoices() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetInvoicesPaginatedResponse\
          \ object\n    result = api_instance.get_invoices(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_invoices: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetInvoicesPaginatedResponse object\n    my $result = $api_instance->get_invoices(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_invoices: $@\\n\";\n}"
  /api/v2/stats/messaging/data:
    get:
      tags:
      - "TextMagic"
      summary: "Return counters for messaging data views."
      description: ""
      operationId: "getMessagingCounters"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetMessagingCountersResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetMessagingCountersResponse class object\n    $result\
          \ = $api->getMessagingCounters();\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->getMessagingCounters: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetMessagingCountersResponse class object\n\
          \            GetMessagingCountersResponse obj = apiInstance.getMessagingCounters();\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getMessagingCounters\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getMessagingCounters().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetMessagingCountersResponse\
          \ object\n    result = api.get_messaging_counters()\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_messaging_counters:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetMessagingCountersResponse class object\n    \
          \            var result = apiInstance.GetMessagingCounters();\n        \
          \        // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getMessagingCounters: \"+e.Message);\n          \
          \  }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetMessagingCountersResponse class object\n            Dim result\
          \ = apiInstance.GetMessagingCounters()\n            ' ...\n        Catch\
          \ e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ getMessagingCounters: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetMessagingCountersResponse struct\n\
          \    result, _, err := client.TextMagicApi.GetMessagingCounters(auth, )\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetMessagingCountersResponse>>\
          \ result = api.getMessagingCounters();\n        result.wait();\n       \
          \ // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getMessagingCounters() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetMessagingCountersResponse object\n    result = api_instance.get_messaging_counters()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_messaging_counters: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetMessagingCountersResponse object\n    my $result = $api_instance->get_messaging_counters();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_messaging_counters:\
          \ $@\\n\";\n}"
  /api/v2/chats:
    get:
      tags:
      - "TextMagic"
      summary: "Get all chats"
      description: ""
      operationId: "getAllChats"
      parameters:
      - name: "status"
        in: "query"
        description: "Fetch only (a)ctive, (c)losed or (d)eleted chats"
        required: false
        type: "string"
        enum:
        - "a"
        - "c"
        - "d"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "unread"
        - "messageTime"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "voice"
        in: "query"
        description: "Fetch results with voice calls"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Voice"
        x-optionalDataType: "Int32"
      - name: "flat"
        in: "query"
        description: "Should additional contact info be included"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-example: 1
        x-exportParamName: "Flat"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetAllChatsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getAllChats method\
          \ below, default values will be used\n$status = \"sampleValue\";\n$page\
          \ = 1;\n$limit = 10;\n$orderBy = \"id\";\n$voice = 0;\n$flat = 1;\n\ntry\
          \ {\n    // GetAllChatsPaginatedResponse class object\n    $result = $api->getAllChats($status,\
          \ $page, $limit, $orderBy, $voice, $flat);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getAllChats: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getAllChats method\
          \ below, default values will be used\n        String status = \"sampleValue\"\
          ;\n        int page = 1;\n        int limit = 10;\n        String orderBy\
          \ = \"id\";\n        int voice = 0;\n        int flat = 1;\n\n        try\
          \ {\n            // GetAllChatsPaginatedResponse class object\n        \
          \    GetAllChatsPaginatedResponse obj = apiInstance.getAllChats(status,\
          \ page, limit, orderBy, voice, flat);\n            // ...\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ getAllChats\");\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    status: \"sampleValue\",\n    page: 1,\n\
          \    limit: 10,\n    orderBy: \"id\",\n    voice: 0,\n    flat: 1,\n}\n\n\
          api.getAllChats().then(function (data) {\n    console.log(data);\n}).catch(function(err){\n\
          \    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  status: 'sampleValue',\n  page: 1,\n  limit: 10,\n  order_by: 'id',\n\
          \  voice: 0,\n  flat: 1,\n}\n\nbegin\n    # GetAllChatsPaginatedResponse\
          \ object\n    result = api.get_all_chats(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_all_chats: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getAllChats method below, default\
          \ values will be used\n            string status = \"sampleValue\";\n  \
          \          int page = 1;\n            int limit = 10;\n            string\
          \ orderBy = \"id\";\n            int voice = 0;\n            int flat =\
          \ 1;\n\n            try {\n                // GetAllChatsPaginatedResponse\
          \ class object\n                var result = apiInstance.GetAllChats(status,\
          \ page, limit, orderBy, voice, flat);\n                // ...\n        \
          \    } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling getAllChats: \"+e.Message);\n            }\n        }\n \
          \   }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getAllChats method below, default\
          \ values will be used\n        Dim status As String = \"sampleValue\"\n\
          \        Dim page As Integer = 1\n        Dim limit As Integer = 10\n  \
          \      Dim orderBy As String = \"id\"\n        Dim voice As Integer = 0\n\
          \        Dim flat As Integer = 1\n\n        Try\n            ' GetAllChatsPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetAllChats(status,\
          \ page, limit, orderBy, voice, flat)\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling getAllChats:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetAllChatsOpts{\n      \
          \  // Optional parameters\n        Status: optional.NewString(\"sampleValue\"\
          ),\n        Page: optional.NewInt32(1),\n        Limit: optional.NewInt32(10),\n\
          \        OrderBy: optional.NewString(\"id\"),\n        Voice: optional.NewInt32(0),\n\
          \        Flat: optional.NewInt32(1),\n    }\n\n    // tm.GetAllChatsPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetAllChats(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    std::string\
          \ status = \"sampleValue\";\n    int page = 1;\n    int limit = 10;\n  \
          \  std::string orderBy = \"id\";\n    int voice = 0;\n    int flat = 1;\n\
          \n    try {\n        pplx::task<std::shared_ptr<GetAllChatsPaginatedResponse>>\
          \ result = api.getAllChats(status, page, limit, orderBy, voice, flat);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getAllChats()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\nstatus = \"sampleValue\"\npage = 1\nlimit =\
          \ 10\norder_by = \"id\"\nvoice = 0\nflat = 1\n\ntry:\n    # GetAllChatsPaginatedResponse\
          \ object\n    result = api_instance.get_all_chats(status=status, page=page,\
          \ limit=limit, order_by=order_by, voice=voice, flat=flat)\n    # ...\nexcept\
          \ ApiException as e:\n    print(\"Exception when calling TextMagicApi->get_all_chats:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $status = 'sampleValue';\nmy $page = 1;\n\
          my $limit = 10;\nmy $orderBy = 'id';\nmy $voice = 0;\nmy $flat = 1;\n\n\
          eval {\n    # GetAllChatsPaginatedResponse object\n    my $result = $api_instance->get_all_chats(status\
          \ => $status, page => $page, limit => $limit, orderBy => $orderBy, voice\
          \ => $voice, flat => $flat);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_all_chats: $@\\n\";\n}"
  /api/v2/chats/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a single chat"
      description: ""
      operationId: "getChat"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/Chat"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // Chat class object\n    $result = $api->getChat($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getChat: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // Chat class object\n\
          \            Chat obj = apiInstance.getChat(id);\n            // ...\n \
          \       } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getChat\");\n            e.printStackTrace();\n        }\n\
          \    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getChat(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # Chat\
          \ object\n    result = api.get_chat(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_chat: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // Chat class object\n    \
          \            var result = apiInstance.GetChat(id);\n                // ...\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getChat: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' Chat class object\n            Dim result\
          \ = apiInstance.GetChat(id)\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling getChat: \" + e.Message)\n\
          \        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.Chat struct\n    result, _, err := client.TextMagicApi.GetChat(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<Chat>> result = api.getChat(id);\n     \
          \   result.wait();\n        // put operations with result here...\n    }\
          \ catch(const std::exception& e) {\n        std::cout << \"getChat() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # Chat object\n    result = api_instance.get_chat(id=id)\n \
          \   # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_chat: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # Chat object\n    my $result = $api_instance->get_chat(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_chat: $@\\n\";\n}"
  /api/v2/chats/{id}/message:
    get:
      tags:
      - "TextMagic"
      summary: "Get chat messages"
      description: ""
      operationId: "getChatMessages"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find messages by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Return messages since specified timestamp only"
        required: false
        type: "integer"
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "Return messages up to specified timestamp only"
        required: false
        type: "integer"
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "direction"
        in: "query"
        description: "Order direction. Default is desc"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      - name: "voice"
        in: "query"
        description: "Fetch results with voice calls"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Voice"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetChatMessagesPaginatedResponse"
        400:
          description: "Returned when invalid phone number specified"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n// Optional, you can pass them as null values to getChatMessages\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $query = \"sampleValue\";\n$start = 1;\n$end = 1;\n$direction = \"desc\"\
          ;\n$voice = 0;\n\ntry {\n    // GetChatMessagesPaginatedResponse class object\n\
          \    $result = $api->getChatMessages($id, $page, $limit, $query, $start,\
          \ $end, $direction, $voice);\n    // ...\n} catch (Exception $e) {\n   \
          \ echo 'Exception when calling TextMagicApi->getChatMessages: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n        // Optional, you can pass them as null values\
          \ to getChatMessages method below, default values will be used\n       \
          \ int page = 1;\n        int limit = 10;\n        String query = \"sampleValue\"\
          ;\n        int start = 1;\n        int end = 1;\n        String direction\
          \ = \"desc\";\n        int voice = 0;\n\n        try {\n            // GetChatMessagesPaginatedResponse\
          \ class object\n            GetChatMessagesPaginatedResponse obj = apiInstance.getChatMessages(id,\
          \ page, limit, query, start, end, direction, voice);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getChatMessages\");\n            e.printStackTrace();\n \
          \       }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\nparams = {\n// Optional parameters\n    page: 1,\n    limit:\
          \ 10,\n    query: \"sampleValue\",\n    start: 1,\n    end: 1,\n    direction:\
          \ \"desc\",\n    voice: 0,\n}\n\napi.getChatMessages(id, ).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\nparams = {\n  # Optional\
          \ parameters\n  page: 1,\n  limit: 10,\n  query: 'sampleValue',\n  start:\
          \ 1,\n  end: 1,\n  direction: 'desc',\n  voice: 0,\n}\n\nbegin\n    # GetChatMessagesPaginatedResponse\
          \ object\n    result = api.get_chat_messages(id, params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_chat_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n            // Optional, you can pass them as null values to getChatMessages\
          \ method below, default values will be used\n            int page = 1;\n\
          \            int limit = 10;\n            string query = \"sampleValue\"\
          ;\n            int start = 1;\n            int end = 1;\n            string\
          \ direction = \"desc\";\n            int voice = 0;\n\n            try {\n\
          \                // GetChatMessagesPaginatedResponse class object\n    \
          \            var result = apiInstance.GetChatMessages(id, page, limit, query,\
          \ start, end, direction, voice);\n                // ...\n            }\
          \ catch (Exception e) {\n                Console.WriteLine(\"Exception when\
          \ calling getChatMessages: \"+e.Message);\n            }\n        }\n  \
          \  }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n        ' Optional, you can pass them as null values to getChatMessages\
          \ method below, default values will be used\n        Dim page As Integer\
          \ = 1\n        Dim limit As Integer = 10\n        Dim query As String =\
          \ \"sampleValue\"\n        Dim start As Integer = 1\n        Dim end As\
          \ Integer = 1\n        Dim direction As String = \"desc\"\n        Dim voice\
          \ As Integer = 0\n\n        Try\n            ' GetChatMessagesPaginatedResponse\
          \ class object\n            Dim result = apiInstance.GetChatMessages(id,\
          \ page, limit, query, start, end, direction, voice)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getChatMessages: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    opts := tm.GetChatMessagesOpts{\n        // Optional parameters\n \
          \       Page: optional.NewInt32(1),\n        Limit: optional.NewInt32(10),\n\
          \        Query: optional.NewString(\"sampleValue\"),\n        Start: optional.NewInt32(1),\n\
          \        End: optional.NewInt32(1),\n        Direction: optional.NewString(\"\
          desc\"),\n        Voice: optional.NewInt32(0),\n    }\n\n    // tm.GetChatMessagesPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetChatMessages(auth,\
          \ id, &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n    // Optional parameters.\
          \ Important: if you want to use default value then pass boost::none value\n\
          \    int page = 1;\n    int limit = 10;\n    std::string query = \"sampleValue\"\
          ;\n    int start = 1;\n    int end = 1;\n    std::string direction = \"\
          desc\";\n    int voice = 0;\n\n    try {\n        pplx::task<std::shared_ptr<GetChatMessagesPaginatedResponse>>\
          \ result = api.getChatMessages(id, page, limit, query, start, end, direction,\
          \ voice);\n        result.wait();\n        // put operations with result\
          \ here...\n    } catch(const std::exception& e) {\n        std::cout <<\
          \ \"getChatMessages() exception: \" << e.what() << '\\n';\n    }\n\n   \
          \ return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          # Optional params, you can skip them\npage = 1\nlimit = 10\nquery = \"sampleValue\"\
          \nstart = 1\nend = 1\ndirection = \"desc\"\nvoice = 0\n\ntry:\n    # GetChatMessagesPaginatedResponse\
          \ object\n    result = api_instance.get_chat_messages(id=id, page=page,\
          \ limit=limit, query=query, start=start, end=end, direction=direction, voice=voice)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_chat_messages: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          # Optional params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy\
          \ $query = 'sampleValue';\nmy $start = 1;\nmy $end = 1;\nmy $direction =\
          \ 'desc';\nmy $voice = 0;\n\neval {\n    # GetChatMessagesPaginatedResponse\
          \ object\n    my $result = $api_instance->get_chat_messages(id => $id, page\
          \ => $page, limit => $limit, query => $query, start => $start, end => $end,\
          \ direction => $direction, voice => $voice);\n    # ...\n};\n\nif ($@) {\n\
          \    warn \"Exception when calling TextMagicApi->get_chat_messages: $@\\\
          n\";\n}"
  /api/v2/chats/search:
    get:
      tags:
      - "TextMagic"
      summary: "Find chats by message text"
      description: ""
      operationId: "searchChats"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find chats by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchChatsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchChats method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n$query =\
          \ \"sampleValue\";\n\ntry {\n    // SearchChatsPaginatedResponse class object\n\
          \    $result = $api->searchChats($page, $limit, $query);\n    // ...\n}\
          \ catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->searchChats:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchChats method\
          \ below, default values will be used\n        int page = 1;\n        int\
          \ limit = 10;\n        String query = \"sampleValue\";\n\n        try {\n\
          \            // SearchChatsPaginatedResponse class object\n            SearchChatsPaginatedResponse\
          \ obj = apiInstance.searchChats(page, limit, query);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling searchChats\");\n            e.printStackTrace();\n     \
          \   }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    query:\
          \ \"sampleValue\",\n}\n\napi.searchChats().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  query: 'sampleValue',\n}\n\nbegin\n    # SearchChatsPaginatedResponse\
          \ object\n    result = api.search_chats(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->search_chats: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchChats method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string query = \"sampleValue\";\n\n            try\
          \ {\n                // SearchChatsPaginatedResponse class object\n    \
          \            var result = apiInstance.SearchChats(page, limit, query);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling searchChats: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchChats method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim query As String = \"sampleValue\"\n\n   \
          \     Try\n            ' SearchChatsPaginatedResponse class object\n   \
          \         Dim result = apiInstance.SearchChats(page, limit, query)\n   \
          \         ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling searchChats: \" + e.Message)\n        End Try\n \
          \   End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchChatsOpts{\n      \
          \  // Optional parameters\n        Page: optional.NewInt32(1),\n       \
          \ Limit: optional.NewInt32(10),\n        Query: optional.NewString(\"sampleValue\"\
          ),\n    }\n\n    // tm.SearchChatsPaginatedResponse struct\n    result,\
          \ _, err := client.TextMagicApi.SearchChats(auth, &opts)\n\n    if err !=\
          \ nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"%+v\\\
          n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string query = \"sampleValue\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<SearchChatsPaginatedResponse>>\
          \ result = api.searchChats(page, limit, query);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"searchChats() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nquery = \"sampleValue\"\
          \n\ntry:\n    # SearchChatsPaginatedResponse object\n    result = api_instance.search_chats(page=page,\
          \ limit=limit, query=query)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->search_chats: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $query =\
          \ 'sampleValue';\n\neval {\n    # SearchChatsPaginatedResponse object\n\
          \    my $result = $api_instance->search_chats(page => $page, limit => $limit,\
          \ query => $query);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when\
          \ calling TextMagicApi->search_chats: $@\\n\";\n}"
  /api/v2/chats/search/ids:
    get:
      tags:
      - "TextMagic"
      summary: "Find chats (bulk)"
      description: ""
      operationId: "searchChatsByIds"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "ids"
        in: "query"
        description: "Find chats by ID(s)"
        required: false
        type: "string"
        pattern: "[,\\d]+"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchChatsByIdsPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchChatsByIds\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $ids = \"sampleValue\";\n\ntry {\n    // SearchChatsByIdsPaginatedResponse\
          \ class object\n    $result = $api->searchChatsByIds($page, $limit, $ids);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->searchChatsByIds: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchChatsByIds\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String ids = \"sampleValue\";\n\n       \
          \ try {\n            // SearchChatsByIdsPaginatedResponse class object\n\
          \            SearchChatsByIdsPaginatedResponse obj = apiInstance.searchChatsByIds(page,\
          \ limit, ids);\n            // ...\n        } catch (ApiException e) {\n\
          \            System.err.println(\"Exception when calling searchChatsByIds\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    ids: \"\
          sampleValue\",\n}\n\napi.searchChatsByIds().then(function (data) {\n   \
          \ console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  ids: 'sampleValue',\n}\n\nbegin\n    # SearchChatsByIdsPaginatedResponse\
          \ object\n    result = api.search_chats_by_ids(params)\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->search_chats_by_ids:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchChatsByIds method below, default\
          \ values will be used\n            int page = 1;\n            int limit\
          \ = 10;\n            string ids = \"sampleValue\";\n\n            try {\n\
          \                // SearchChatsByIdsPaginatedResponse class object\n   \
          \             var result = apiInstance.SearchChatsByIds(page, limit, ids);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling searchChatsByIds: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchChatsByIds method below, default\
          \ values will be used\n        Dim page As Integer = 1\n        Dim limit\
          \ As Integer = 10\n        Dim ids As String = \"sampleValue\"\n\n     \
          \   Try\n            ' SearchChatsByIdsPaginatedResponse class object\n\
          \            Dim result = apiInstance.SearchChatsByIds(page, limit, ids)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling searchChatsByIds: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchChatsByIdsOpts{\n \
          \       // Optional parameters\n        Page: optional.NewInt32(1),\n  \
          \      Limit: optional.NewInt32(10),\n        Ids: optional.NewString(\"\
          sampleValue\"),\n    }\n\n    // tm.SearchChatsByIdsPaginatedResponse struct\n\
          \    result, _, err := client.TextMagicApi.SearchChatsByIds(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string ids = \"sampleValue\"\
          ;\n\n    try {\n        pplx::task<std::shared_ptr<SearchChatsByIdsPaginatedResponse>>\
          \ result = api.searchChatsByIds(page, limit, ids);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"searchChatsByIds() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nids = \"sampleValue\"\
          \n\ntry:\n    # SearchChatsByIdsPaginatedResponse object\n    result = api_instance.search_chats_by_ids(page=page,\
          \ limit=limit, ids=ids)\n    # ...\nexcept ApiException as e:\n    print(\"\
          Exception when calling TextMagicApi->search_chats_by_ids: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $ids = 'sampleValue';\n\
          \neval {\n    # SearchChatsByIdsPaginatedResponse object\n    my $result\
          \ = $api_instance->search_chats_by_ids(page => $page, limit => $limit, ids\
          \ => $ids);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->search_chats_by_ids: $@\\n\";\n}"
  /api/v2/chats/search/recipients:
    get:
      tags:
      - "TextMagic"
      summary: "Find chats by recipient"
      description: "Find chats by recipient (contact, list name or phone number)."
      operationId: "searchChatsByReceipent"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "Find chats by specified search query"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        description: "Order results by some field. Default is id"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "unread"
        - "messageTime"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SearchChatsByReceipentPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to searchChatsByReceipent\
          \ method below, default values will be used\n$page = 1;\n$limit = 10;\n\
          $query = \"sampleValue\";\n$orderBy = \"id\";\n\ntry {\n    // SearchChatsByReceipentPaginatedResponse\
          \ class object\n    $result = $api->searchChatsByReceipent($page, $limit,\
          \ $query, $orderBy);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception\
          \ when calling TextMagicApi->searchChatsByReceipent: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to searchChatsByReceipent\
          \ method below, default values will be used\n        int page = 1;\n   \
          \     int limit = 10;\n        String query = \"sampleValue\";\n       \
          \ String orderBy = \"id\";\n\n        try {\n            // SearchChatsByReceipentPaginatedResponse\
          \ class object\n            SearchChatsByReceipentPaginatedResponse obj\
          \ = apiInstance.searchChatsByReceipent(page, limit, query, orderBy);\n \
          \           // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling searchChatsByReceipent\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n    query:\
          \ \"sampleValue\",\n    orderBy: \"id\",\n}\n\napi.searchChatsByReceipent().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n  query: 'sampleValue',\n  order_by: 'id',\n\
          }\n\nbegin\n    # SearchChatsByReceipentPaginatedResponse object\n    result\
          \ = api.search_chats_by_receipent(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->search_chats_by_receipent:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to searchChatsByReceipent method below,\
          \ default values will be used\n            int page = 1;\n            int\
          \ limit = 10;\n            string query = \"sampleValue\";\n           \
          \ string orderBy = \"id\";\n\n            try {\n                // SearchChatsByReceipentPaginatedResponse\
          \ class object\n                var result = apiInstance.SearchChatsByReceipent(page,\
          \ limit, query, orderBy);\n                // ...\n            } catch (Exception\
          \ e) {\n                Console.WriteLine(\"Exception when calling searchChatsByReceipent:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to searchChatsByReceipent method below,\
          \ default values will be used\n        Dim page As Integer = 1\n       \
          \ Dim limit As Integer = 10\n        Dim query As String = \"sampleValue\"\
          \n        Dim orderBy As String = \"id\"\n\n        Try\n            ' SearchChatsByReceipentPaginatedResponse\
          \ class object\n            Dim result = apiInstance.SearchChatsByReceipent(page,\
          \ limit, query, orderBy)\n            ' ...\n        Catch e As Exception\n\
          \            Console.WriteLine(\"Exception when calling searchChatsByReceipent:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.SearchChatsByReceipentOpts{\n\
          \        // Optional parameters\n        Page: optional.NewInt32(1),\n \
          \       Limit: optional.NewInt32(10),\n        Query: optional.NewString(\"\
          sampleValue\"),\n        OrderBy: optional.NewString(\"id\"),\n    }\n\n\
          \    // tm.SearchChatsByReceipentPaginatedResponse struct\n    result, _,\
          \ err := client.TextMagicApi.SearchChatsByReceipent(auth, &opts)\n\n   \
          \ if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n    std::string query = \"sampleValue\"\
          ;\n    std::string orderBy = \"id\";\n\n    try {\n        pplx::task<std::shared_ptr<SearchChatsByReceipentPaginatedResponse>>\
          \ result = api.searchChatsByReceipent(page, limit, query, orderBy);\n  \
          \      result.wait();\n        // put operations with result here...\n \
          \   } catch(const std::exception& e) {\n        std::cout << \"searchChatsByReceipent()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\nquery = \"sampleValue\"\
          \norder_by = \"id\"\n\ntry:\n    # SearchChatsByReceipentPaginatedResponse\
          \ object\n    result = api_instance.search_chats_by_receipent(page=page,\
          \ limit=limit, query=query, order_by=order_by)\n    # ...\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->search_chats_by_receipent:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\nmy $query =\
          \ 'sampleValue';\nmy $orderBy = 'id';\n\neval {\n    # SearchChatsByReceipentPaginatedResponse\
          \ object\n    my $result = $api_instance->search_chats_by_receipent(page\
          \ => $page, limit => $limit, query => $query, orderBy => $orderBy);\n  \
          \  # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->search_chats_by_receipent:\
          \ $@\\n\";\n}"
  /api/v2/chats/{phone}/by/phone:
    get:
      tags:
      - "TextMagic"
      summary: "Find chats by phone"
      description: ""
      operationId: "getChatByPhone"
      parameters:
      - name: "upsert"
        in: "query"
        description: "Create a new chat if not found"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Upsert"
        x-optionalDataType: "Int32"
      - name: "reopen"
        in: "query"
        description: "Reopen chat if found or do not change status"
        required: false
        type: "integer"
        default: 0
        enum:
        - 0
        - 1
        x-exportParamName: "Reopen"
        x-optionalDataType: "Int32"
      - name: "phone"
        in: "path"
        required: true
        type: "string"
        default: "19998887766"
        x-exportParamName: "Phone"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/Chat"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$phone = \"19998887766\";\n// Optional, you can pass them as null\
          \ values to getChatByPhone method below, default values will be used\n$upsert\
          \ = 0;\n$reopen = 0;\n\ntry {\n    // Chat class object\n    $result = $api->getChatByPhone($phone,\
          \ $upsert, $reopen);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception\
          \ when calling TextMagicApi->getChatByPhone: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String phone = \"19998887766\";\n        // Optional, you can\
          \ pass them as null values to getChatByPhone method below, default values\
          \ will be used\n        int upsert = 0;\n        int reopen = 0;\n\n   \
          \     try {\n            // Chat class object\n            Chat obj = apiInstance.getChatByPhone(phone,\
          \ upsert, reopen);\n            // ...\n        } catch (ApiException e)\
          \ {\n            System.err.println(\"Exception when calling getChatByPhone\"\
          );\n            e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ phone = \"19998887766\";\nparams = {\n// Optional parameters\n    upsert:\
          \ 0,\n    reopen: 0,\n}\n\napi.getChatByPhone(phone, ).then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nphone = '19998887766'\nparams\
          \ = {\n  # Optional parameters\n  upsert: 0,\n  reopen: 0,\n}\n\nbegin\n\
          \    # Chat object\n    result = api.get_chat_by_phone(phone, params)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->get_chat_by_phone: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ phone = \"19998887766\";\n            // Optional, you can pass them as\
          \ null values to getChatByPhone method below, default values will be used\n\
          \            int upsert = 0;\n            int reopen = 0;\n\n          \
          \  try {\n                // Chat class object\n                var result\
          \ = apiInstance.GetChatByPhone(phone, upsert, reopen);\n               \
          \ // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getChatByPhone: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim phone As\
          \ String = \"19998887766\"\n        ' Optional, you can pass them as null\
          \ values to getChatByPhone method below, default values will be used\n \
          \       Dim upsert As Integer = 0\n        Dim reopen As Integer = 0\n\n\
          \        Try\n            ' Chat class object\n            Dim result =\
          \ apiInstance.GetChatByPhone(phone, upsert, reopen)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getChatByPhone: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var phone string = \"\
          19998887766\"\n\n    opts := tm.GetChatByPhoneOpts{\n        // Optional\
          \ parameters\n        Upsert: optional.NewInt32(0),\n        Reopen: optional.NewInt32(0),\n\
          \    }\n\n    // tm.Chat struct\n    result, _, err := client.TextMagicApi.GetChatByPhone(auth,\
          \ phone, &opts)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string phone = \"19998887766\"\
          ;\n    // Optional parameters. Important: if you want to use default value\
          \ then pass boost::none value\n    int upsert = 0;\n    int reopen = 0;\n\
          \n    try {\n        pplx::task<std::shared_ptr<Chat>> result = api.getChatByPhone(phone,\
          \ upsert, reopen);\n        result.wait();\n        // put operations with\
          \ result here...\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"getChatByPhone() exception: \" << e.what() << '\\n';\n    }\n\n \
          \   return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nphone\
          \ = \"19998887766\"\n# Optional params, you can skip them\nupsert = 0\n\
          reopen = 0\n\ntry:\n    # Chat object\n    result = api_instance.get_chat_by_phone(phone=phone,\
          \ upsert=upsert, reopen=reopen)\n    # ...\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->get_chat_by_phone: %s\\\
          n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $phone\
          \ = '19998887766';\n# Optional params, you can skip them\nmy $upsert = 0;\n\
          my $reopen = 0;\n\neval {\n    # Chat object\n    my $result = $api_instance->get_chat_by_phone(phone\
          \ => $phone, upsert => $upsert, reopen => $reopen);\n    # ...\n};\n\nif\
          \ ($@) {\n    warn \"Exception when calling TextMagicApi->get_chat_by_phone:\
          \ $@\\n\";\n}"
  /api/v2/chats/unread/count:
    get:
      tags:
      - "TextMagic"
      summary: "Get unread messages number"
      description: "Get total amount of unread messages in the current user chats."
      operationId: "getUnreadMessagesTotal"
      parameters: []
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetUnreadMessagesTotalResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n\ntry {\n    // GetUnreadMessagesTotalResponse class object\n    $result\
          \ = $api->getUnreadMessagesTotal();\n    // ...\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->getUnreadMessagesTotal:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n\n        try {\n            // GetUnreadMessagesTotalResponse class object\n\
          \            GetUnreadMessagesTotalResponse obj = apiInstance.getUnreadMessagesTotal();\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getUnreadMessagesTotal\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\n\n\
          api.getUnreadMessagesTotal().then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\n\nbegin\n    # GetUnreadMessagesTotalResponse\
          \ object\n    result = api.get_unread_messages_total()\n    # ...\nrescue\
          \ TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->get_unread_messages_total:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n\n            try\
          \ {\n                // GetUnreadMessagesTotalResponse class object\n  \
          \              var result = apiInstance.GetUnreadMessagesTotal();\n    \
          \            // ...\n            } catch (Exception e) {\n             \
          \   Console.WriteLine(\"Exception when calling getUnreadMessagesTotal: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n\n        Try\n    \
          \        ' GetUnreadMessagesTotalResponse class object\n            Dim\
          \ result = apiInstance.GetUnreadMessagesTotal()\n            ' ...\n   \
          \     Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling getUnreadMessagesTotal: \" + e.Message)\n        End Try\n   \
          \ End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    // tm.GetUnreadMessagesTotalResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetUnreadMessagesTotal(auth,\
          \ )\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n     \
          \   fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    try {\n        pplx::task<std::shared_ptr<GetUnreadMessagesTotalResponse>>\
          \ result = api.getUnreadMessagesTotal();\n        result.wait();\n     \
          \   // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getUnreadMessagesTotal() exception: \" <<\
          \ e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n\ntry:\n\
          \    # GetUnreadMessagesTotalResponse object\n    result = api_instance.get_unread_messages_total()\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_unread_messages_total: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n\neval {\n\
          \    # GetUnreadMessagesTotalResponse object\n    my $result = $api_instance->get_unread_messages_total();\n\
          \    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->get_unread_messages_total:\
          \ $@\\n\";\n}"
  /api/v2/chats/status:
    post:
      tags:
      - "TextMagic"
      summary: "Change chat status"
      description: "Set status of the chat given by ID."
      operationId: "setChatStatus"
      parameters:
      - in: "body"
        name: "SetChatStatusInputObject"
        required: true
        schema:
          $ref: "#/definitions/SetChatStatusInputObject"
        x-exportParamName: "SetChatStatusInputObject"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new SetChatStatusInputObject();\n\
          \n// Required parameters\n$input->setId(1);\n$input->setStatus(\"a\");\n\
          \ntry {\n    // ResourceLinkResponse class object\n    $result = $api->setChatStatus($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->setChatStatus: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        SetChatStatusInputObject input = new SetChatStatusInputObject();\n\
          \n        // Required parameters\n        input.setId(1);\n        input.setStatus(\"\
          a\");\n\n        try {\n            // ResourceLinkResponse class object\n\
          \            ResourceLinkResponse obj = apiInstance.setChatStatus(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling setChatStatus\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    id: 1,\n    status: \"a\",\n}\n\napi.setChatStatus(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::SetChatStatusInputObject.new\n\
          \n# Required parameters\nobj.id = 1\nobj.status = \"a\"\n\nbegin\n    #\
          \ ResourceLinkResponse object\n    result = api.set_chat_status(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->set_chat_status: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new SetChatStatusInputObject();\n\n            // Required parameters\n\
          \            obj.Id = 1;\n            obj.Status = \"a\";\n\n          \
          \  try {\n                // ResourceLinkResponse class object\n       \
          \         var result = apiInstance.SetChatStatus(obj);\n               \
          \ // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling setChatStatus: \"+e.Message);\n            }\n  \
          \      }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ SetChatStatusInputObject With {\n            .Id = 1,\n            .Status\
          \ = \"a\"\n        }\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.SetChatStatus(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling setChatStatus: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Id: 1,\n        Status: \"a\",\n\
          \    }\n\n    // tm.ResourceLinkResponse struct\n    result, _, err := client.TextMagicApi.SetChatStatus(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<SetChatStatusInputObject>\
          \ input(new SetChatStatusInputObject);\n    // Required parameters\n   \
          \ input->setId(1);\n    input->setStatus(\"a\");\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.setChatStatus(input);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"setChatStatus() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.SetChatStatusInputObject()\n\n# Required parameters\ninput.id\
          \ = 1\ninput.status = \"a\"\n\ntry:\n    # ResourceLinkResponse object\n\
          \    result = api_instance.set_chat_status(set_chat_status_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->set_chat_status: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::SetChatStatusInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::SetChatStatusInputObject->new(\n\
          \    # Required parameters\n    id => 1,\n    status => 'a',\n);\n\neval\
          \ {\n    # ResourceLinkResponse object\n    my $result = $api_instance->set_chat_status(set_chat_status_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->set_chat_status: $@\\n\";\n}"
  /api/v2/chats/mute:
    post:
      tags:
      - "TextMagic"
      summary: "Mute chat sounds"
      description: ""
      operationId: "muteChat"
      parameters:
      - in: "body"
        name: "MuteChatInputObject"
        required: true
        schema:
          $ref: "#/definitions/MuteChatInputObject"
        x-exportParamName: "MuteChatInputObject"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new MuteChatInputObject();\n\
          \n// Required parameters\n$input->setId(1);\n$input->setMute(true);\n\n\
          // Optional parameters, you can skip these setters calls\n$input->setFor(1);\n\
          \ntry {\n    // ResourceLinkResponse class object\n    $result = $api->muteChat($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->muteChat: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        MuteChatInputObject input = new MuteChatInputObject();\n\n   \
          \     // Required parameters\n        input.setId(1);\n        input.setMute(true);\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setFor(1);\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.muteChat(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling muteChat\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    id: 1,\n    mute: true,\n    // Optional parameters\n \
          \   for: 1,\n}\n\napi.muteChat(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::MuteChatInputObject.new\n\
          \n# Required parameters\nobj.id = 1\nobj.mute = true\n# Optional parameters,\
          \ you can skip them\nobj.for = 1\n\nbegin\n    # ResourceLinkResponse object\n\
          \    result = api.mute_chat(input)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->mute_chat: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new MuteChatInputObject();\n\n            // Required parameters\n \
          \           obj.Id = 1;\n            obj.Mute = true;\n\n            //\
          \ Optional parameters, you can skip these setters calls\n            obj.For\
          \ = 1;\n\n            try {\n                // ResourceLinkResponse class\
          \ object\n                var result = apiInstance.MuteChat(obj);\n    \
          \            // ...\n            } catch (Exception e) {\n             \
          \   Console.WriteLine(\"Exception when calling muteChat: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ MuteChatInputObject With {\n            .Id = 1,\n            .Mute =\
          \ true,\n            .For = 1\n        }\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.MuteChat(obj)\n   \
          \         ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling muteChat: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Id: 1,\n        Mute: true,\n \
          \       // Optional parameters, you can skip them\n        For: 1,\n   \
          \ }\n\n    // tm.ResourceLinkResponse struct\n    result, _, err := client.TextMagicApi.MuteChat(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<MuteChatInputObject>\
          \ input(new MuteChatInputObject);\n    // Required parameters\n    input->setId(1);\n\
          \    input->setMute(true);\n    // Optional parameters, you can skip them\n\
          \    input->setFor(1);\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.muteChat(input);\n        result.wait();\n        // put\
          \ operations with result here...\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"muteChat() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.MuteChatInputObject()\n\n# Required parameters\ninput.id =\
          \ 1\ninput.mute = true\n# Optional parameters, you can skip them\ninput.for\
          \ = 1\n\ntry:\n    # ResourceLinkResponse object\n    result = api_instance.mute_chat(mute_chat_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->mute_chat: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::MuteChatInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::MuteChatInputObject->new(\n\
          \    # Required parameters\n    id => 1,\n    mute => 1,\n    # Optional\
          \ parameters, you can skip them\n    for => 1,\n);\n\neval {\n    # ResourceLinkResponse\
          \ object\n    my $result = $api_instance->mute_chat(mute_chat_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->mute_chat: $@\\n\";\n}"
  /api/v2/chats/mute/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Mute chats (bulk)"
      description: "Mute several chats by chat ids or mute all chats"
      operationId: "muteChatsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "MuteChatsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/MuteChatsBulkInputObject"
        x-exportParamName: "MuteChatsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new MuteChatsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n$input->setFor(1);\n\ntry {\n    $api->muteChatsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->muteChatsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        MuteChatsBulkInputObject input = new MuteChatsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n        input.setFor(1);\n\
          \n        try {\n            apiInstance.muteChatsBulk(input);\n       \
          \ } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling muteChatsBulk\");\n            e.printStackTrace();\n   \
          \     }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          \    for: 1,\n}\n\napi.muteChatsBulk(input).then(function (data) {\n   \
          \ console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::MuteChatsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\nobj.for = 1\n\nbegin\n    api.mute_chats_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->mute_chats_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new MuteChatsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n            obj.For = 1;\n\n            try\
          \ {\n                apiInstance.MuteChatsBulk(obj);\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ muteChatsBulk: \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ MuteChatsBulkInputObject With {\n            .Ids = \"1,2,3\",\n     \
          \       .All = false,\n            .For = 1\n        }\n\n        Try\n\
          \            apiInstance.MuteChatsBulk(obj)\n            ' ...\n       \
          \ Catch e As Exception\n            Console.WriteLine(\"Exception when calling\
          \ muteChatsBulk: \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n        For: 1,\n    }\n\n    client.TextMagicApi.MuteChatsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<MuteChatsBulkInputObject>\
          \ input(new MuteChatsBulkInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \    input->setFor(1);\n\n    try {\n        pplx::task result = api.muteChatsBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"muteChatsBulk() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.MuteChatsBulkInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.ids = \"1,2,3\"\ninput.all = false\ninput.for = 1\n\n\
          try:\n    api_instance.mute_chats_bulk(mute_chats_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->mute_chats_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::MuteChatsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::MuteChatsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n    for => 1,\n);\n\neval {\n    $api_instance->mute_chats_bulk(mute_chats_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->mute_chats_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/unmute/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Unmute chats (bulk)"
      description: "Unmute several chats by chat ids or unmute all chats"
      operationId: "unmuteChatsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "UnmuteChatsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/UnmuteChatsBulkInputObject"
        x-exportParamName: "UnmuteChatsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UnmuteChatsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n\ntry {\n    $api->unmuteChatsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->unmuteChatsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UnmuteChatsBulkInputObject input = new UnmuteChatsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n\n       \
          \ try {\n            apiInstance.unmuteChatsBulk(input);\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ unmuteChatsBulk\");\n            e.printStackTrace();\n        }\n   \
          \ }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          }\n\napi.unmuteChatsBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UnmuteChatsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\n\nbegin\n    api.unmute_chats_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->unmute_chats_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UnmuteChatsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n\n            try {\n                apiInstance.UnmuteChatsBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling unmuteChatsBulk: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UnmuteChatsBulkInputObject With {\n            .Ids = \"1,2,3\",\n   \
          \         .All = false\n        }\n\n        Try\n            apiInstance.UnmuteChatsBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling unmuteChatsBulk: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n    }\n\n    client.TextMagicApi.UnmuteChatsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UnmuteChatsBulkInputObject>\
          \ input(new UnmuteChatsBulkInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \n    try {\n        pplx::task result = api.unmuteChatsBulk(input);\n \
          \       result.wait();\n    } catch(const std::exception& e) {\n       \
          \ std::cout << \"unmuteChatsBulk() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UnmuteChatsBulkInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.ids = \"1,2,3\"\ninput.all = false\n\ntry:\n    api_instance.unmute_chats_bulk(unmute_chats_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->unmute_chats_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UnmuteChatsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UnmuteChatsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->unmute_chats_bulk(unmute_chats_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->unmute_chats_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/unread/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Mark chats as unread (bulk)"
      description: "Mark several chats as UNread by chat ids or mark all chats as\
        \ UNread"
      operationId: "markChatsUnreadBulk"
      produces: []
      parameters:
      - in: "body"
        name: "MarkChatsUnreadBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/MarkChatsUnreadBulkInputObject"
        x-exportParamName: "MarkChatsUnreadBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new MarkChatsUnreadBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n\ntry {\n    $api->markChatsUnreadBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->markChatsUnreadBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        MarkChatsUnreadBulkInputObject input = new MarkChatsUnreadBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n\n       \
          \ try {\n            apiInstance.markChatsUnreadBulk(input);\n        }\
          \ catch (ApiException e) {\n            System.err.println(\"Exception when\
          \ calling markChatsUnreadBulk\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          }\n\napi.markChatsUnreadBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::MarkChatsUnreadBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\n\nbegin\n    api.mark_chats_unread_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->mark_chats_unread_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new MarkChatsUnreadBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n\n            try {\n                apiInstance.MarkChatsUnreadBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling markChatsUnreadBulk: \"+e.Message);\n           \
          \ }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ MarkChatsUnreadBulkInputObject With {\n            .Ids = \"1,2,3\",\n\
          \            .All = false\n        }\n\n        Try\n            apiInstance.MarkChatsUnreadBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling markChatsUnreadBulk: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n    }\n\n    client.TextMagicApi.MarkChatsUnreadBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<MarkChatsUnreadBulkInputObject>\
          \ input(new MarkChatsUnreadBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \n    try {\n        pplx::task result = api.markChatsUnreadBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"markChatsUnreadBulk() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.MarkChatsUnreadBulkInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.ids = \"1,2,3\"\ninput.all = false\n\ntry:\n    api_instance.mark_chats_unread_bulk(mark_chats_unread_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->mark_chats_unread_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::MarkChatsUnreadBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::MarkChatsUnreadBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->mark_chats_unread_bulk(mark_chats_unread_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->mark_chats_unread_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/read/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Mark chats as read (bulk)"
      description: "Mark several chats as read by chat ids or mark all chats as read"
      operationId: "markChatsReadBulk"
      produces: []
      parameters:
      - in: "body"
        name: "MarkChatsReadBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/MarkChatsReadBulkInputObject"
        x-exportParamName: "MarkChatsReadBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new MarkChatsReadBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n\ntry {\n    $api->markChatsReadBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->markChatsReadBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        MarkChatsReadBulkInputObject input = new MarkChatsReadBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n\n       \
          \ try {\n            apiInstance.markChatsReadBulk(input);\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ markChatsReadBulk\");\n            e.printStackTrace();\n        }\n \
          \   }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          }\n\napi.markChatsReadBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::MarkChatsReadBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\n\nbegin\n    api.mark_chats_read_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->mark_chats_read_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new MarkChatsReadBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n\n            try {\n                apiInstance.MarkChatsReadBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling markChatsReadBulk: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ MarkChatsReadBulkInputObject With {\n            .Ids = \"1,2,3\",\n \
          \           .All = false\n        }\n\n        Try\n            apiInstance.MarkChatsReadBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling markChatsReadBulk: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n    }\n\n    client.TextMagicApi.MarkChatsReadBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<MarkChatsReadBulkInputObject>\
          \ input(new MarkChatsReadBulkInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \n    try {\n        pplx::task result = api.markChatsReadBulk(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"markChatsReadBulk() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.MarkChatsReadBulkInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.ids = \"1,2,3\"\ninput.all = false\n\ntry:\n    api_instance.mark_chats_read_bulk(mark_chats_read_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->mark_chats_read_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::MarkChatsReadBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::MarkChatsReadBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->mark_chats_read_bulk(mark_chats_read_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->mark_chats_read_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/close/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Close chats (bulk)"
      description: "Close chats by chat ids or close all chats"
      operationId: "closeChatsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "CloseChatsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/CloseChatsBulkInputObject"
        x-exportParamName: "CloseChatsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CloseChatsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n\ntry {\n    $api->closeChatsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->closeChatsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CloseChatsBulkInputObject input = new CloseChatsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n\n       \
          \ try {\n            apiInstance.closeChatsBulk(input);\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ closeChatsBulk\");\n            e.printStackTrace();\n        }\n    }\n\
          }"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          }\n\napi.closeChatsBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CloseChatsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\n\nbegin\n    api.close_chats_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->close_chats_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CloseChatsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n\n            try {\n                apiInstance.CloseChatsBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling closeChatsBulk: \"+e.Message);\n            }\n \
          \       }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CloseChatsBulkInputObject With {\n            .Ids = \"1,2,3\",\n    \
          \        .All = false\n        }\n\n        Try\n            apiInstance.CloseChatsBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling closeChatsBulk: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n    }\n\n    client.TextMagicApi.CloseChatsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CloseChatsBulkInputObject>\
          \ input(new CloseChatsBulkInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \n    try {\n        pplx::task result = api.closeChatsBulk(input);\n  \
          \      result.wait();\n    } catch(const std::exception& e) {\n        std::cout\
          \ << \"closeChatsBulk() exception: \" << e.what() << '\\n';\n    }\n\n \
          \   return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CloseChatsBulkInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.ids = \"1,2,3\"\ninput.all = false\n\ntry:\n    api_instance.close_chats_bulk(close_chats_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->close_chats_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CloseChatsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CloseChatsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->close_chats_bulk(close_chats_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->close_chats_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/close/read:
    post:
      tags:
      - "TextMagic"
      summary: "Close read chats"
      description: "Close all chats that have no unread messages."
      operationId: "closeReadChats"
      produces: []
      parameters: []
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CloseReadChatsInputObject();\n\
          \ntry {\n    $api->closeReadChats($input);\n} catch (Exception $e) {\n \
          \   echo 'Exception when calling TextMagicApi->closeReadChats: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CloseReadChatsInputObject input = new CloseReadChatsInputObject();\n\
          \n        try {\n            apiInstance.closeReadChats(input);\n      \
          \  } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling closeReadChats\");\n            e.printStackTrace();\n  \
          \      }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n}\n\napi.closeReadChats(input).then(function (data) {\n   \
          \ console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CloseReadChatsInputObject.new\n\
          \nbegin\n    api.close_read_chats(input)\nrescue TextMagic::ApiError =>\
          \ e\n    puts \"Exception when calling TextMagicApi->close_read_chats: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CloseReadChatsInputObject();\n\n            try {\n            \
          \    apiInstance.CloseReadChats(obj);\n            } catch (Exception e)\
          \ {\n                Console.WriteLine(\"Exception when calling closeReadChats:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CloseReadChatsInputObject With {\n        }\n\n        Try\n         \
          \   apiInstance.CloseReadChats(obj)\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling closeReadChats:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \    }\n\n    client.TextMagicApi.CloseReadChats(auth, input)\n\n    if\
          \ err != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n \
          \   }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CloseReadChatsInputObject>\
          \ input(new CloseReadChatsInputObject);\n\n    try {\n        pplx::task\
          \ result = api.closeReadChats(input);\n        result.wait();\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"closeReadChats() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CloseReadChatsInputObject()\n\ntry:\n    api_instance.close_read_chats(close_read_chats_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->close_read_chats:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CloseReadChatsInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CloseReadChatsInputObject->new(\n\
          );\n\neval {\n    $api_instance->close_read_chats(close_read_chats_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->close_read_chats:\
          \ $@\\n\";\n}"
  /api/v2/chats/reopen/bulk:
    post:
      tags:
      - "TextMagic"
      summary: "Reopen chats (bulk)"
      description: "Reopen chats by chat ids or reopen all chats"
      operationId: "reopenChatsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "ReopenChatsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/ReopenChatsBulkInputObject"
        x-exportParamName: "ReopenChatsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new ReopenChatsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n\ntry {\n    $api->reopenChatsBulk($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->reopenChatsBulk:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        ReopenChatsBulkInputObject input = new ReopenChatsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n\n       \
          \ try {\n            apiInstance.reopenChatsBulk(input);\n        } catch\
          \ (ApiException e) {\n            System.err.println(\"Exception when calling\
          \ reopenChatsBulk\");\n            e.printStackTrace();\n        }\n   \
          \ }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          }\n\napi.reopenChatsBulk(input).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::ReopenChatsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\n\nbegin\n    api.reopen_chats_bulk(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->reopen_chats_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new ReopenChatsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n\n            try {\n                apiInstance.ReopenChatsBulk(obj);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling reopenChatsBulk: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ ReopenChatsBulkInputObject With {\n            .Ids = \"1,2,3\",\n   \
          \         .All = false\n        }\n\n        Try\n            apiInstance.ReopenChatsBulk(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling reopenChatsBulk: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n    }\n\n    client.TextMagicApi.ReopenChatsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<ReopenChatsBulkInputObject>\
          \ input(new ReopenChatsBulkInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \n    try {\n        pplx::task result = api.reopenChatsBulk(input);\n \
          \       result.wait();\n    } catch(const std::exception& e) {\n       \
          \ std::cout << \"reopenChatsBulk() exception: \" << e.what() << '\\n';\n\
          \    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.ReopenChatsBulkInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.ids = \"1,2,3\"\ninput.all = false\n\ntry:\n    api_instance.reopen_chats_bulk(reopen_chats_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->reopen_chats_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::ReopenChatsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::ReopenChatsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n);\n\neval {\n    $api_instance->reopen_chats_bulk(reopen_chats_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->reopen_chats_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete chats (bulk)"
      description: "Delete chats by given ID(s) or delete all chats."
      operationId: "deleteChatsBulk"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteChatsBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteChatsBulkInputObject"
        x-exportParamName: "DeleteChatsBulkInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteChatsBulkInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setIds(\"\
          1,2,3\");\n$input->setAll(false);\n$input->setStatus(\"a\");\n\ntry {\n\
          \    $api->deleteChatsBulk($input);\n} catch (Exception $e) {\n    echo\
          \ 'Exception when calling TextMagicApi->deleteChatsBulk: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteChatsBulkInputObject input = new DeleteChatsBulkInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setIds(\"1,2,3\");\n        input.setAll(false);\n        input.setStatus(\"\
          a\");\n\n        try {\n            apiInstance.deleteChatsBulk(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteChatsBulk\");\n            e.printStackTrace();\n \
          \       }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    ids: \"1,2,3\",\n    all: false,\n\
          \    status: \"a\",\n}\n\napi.deleteChatsBulk(input).then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteChatsBulkInputObject.new\n\
          # Optional parameters, you can skip them\nobj.ids = \"1,2,3\"\nobj.all =\
          \ false\nobj.status = \"a\"\n\nbegin\n    api.delete_chats_bulk(input)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_chats_bulk:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteChatsBulkInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Ids = \"1,2,3\";\n \
          \           obj.All = false;\n            obj.Status = \"a\";\n\n      \
          \      try {\n                apiInstance.DeleteChatsBulk(obj);\n      \
          \      } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling deleteChatsBulk: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteChatsBulkInputObject With {\n            .Ids = \"1,2,3\",\n   \
          \         .All = false,\n            .Status = \"a\"\n        }\n\n    \
          \    Try\n            apiInstance.DeleteChatsBulk(obj)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling deleteChatsBulk: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Ids: \"1,2,3\"\
          ,\n        All: false,\n        Status: \"a\",\n    }\n\n    client.TextMagicApi.DeleteChatsBulk(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteChatsBulkInputObject>\
          \ input(new DeleteChatsBulkInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setIds(\"1,2,3\");\n    input->setAll(false);\n\
          \    input->setStatus(\"a\");\n\n    try {\n        pplx::task result =\
          \ api.deleteChatsBulk(input);\n        result.wait();\n    } catch(const\
          \ std::exception& e) {\n        std::cout << \"deleteChatsBulk() exception:\
          \ \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteChatsBulkInputObject()\n# Optional parameters, you can\
          \ skip them\ninput.ids = \"1,2,3\"\ninput.all = false\ninput.status = \"\
          a\"\n\ntry:\n    api_instance.delete_chats_bulk(delete_chats_bulk_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->delete_chats_bulk:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteChatsBulkInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteChatsBulkInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    ids => '1,2,3',\n   \
          \ all => 0,\n    status => 'a',\n);\n\neval {\n    $api_instance->delete_chats_bulk(delete_chats_bulk_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->delete_chats_bulk:\
          \ $@\\n\";\n}"
  /api/v2/chats/{id}/messages/delete:
    post:
      tags:
      - "TextMagic"
      summary: "Delete chat messages by ID(s)"
      description: "Delete messages from chat by given messages ID(s)."
      operationId: "deleteChatMessages"
      produces: []
      parameters:
      - in: "body"
        name: "DeleteChatMessagesBulkInputObject"
        required: true
        schema:
          $ref: "#/definitions/DeleteChatMessagesBulkInputObject"
        x-exportParamName: "DeleteChatMessagesBulkInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DeleteChatMessagesInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setInbound_ids(\"\
          1,2,3,4\");\n$input->setSent_ids(\"1,2,3,4\");\n$input->setCalls_ids(\"\
          1,2,3,4\");\n$input->setAll(false);\n$id = 1;\n\ntry {\n    $api->deleteChatMessages($input$id);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->deleteChatMessages:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DeleteChatMessagesInputObject input = new DeleteChatMessagesInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setInbound_ids(\"1,2,3,4\");\n        input.setSent_ids(\"1,2,3,4\"\
          );\n        input.setCalls_ids(\"1,2,3,4\");\n        input.setAll(false);\n\
          \        int id = 1;\n\n        try {\n            apiInstance.deleteChatMessages(inputid);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteChatMessages\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    inbound_ids: \"1,2,3,4\",\n\
          \    sent_ids: \"1,2,3,4\",\n    calls_ids: \"1,2,3,4\",\n    all: false,\n\
          }\nconst id = 1;\n\napi.deleteChatMessages(input, id).then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DeleteChatMessagesInputObject.new\n\
          # Optional parameters, you can skip them\nobj.inbound_ids = \"1,2,3,4\"\n\
          obj.sent_ids = \"1,2,3,4\"\nobj.calls_ids = \"1,2,3,4\"\nobj.all = false\n\
          id = 1\n\nbegin\n    api.delete_chat_messages(input, id)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->delete_chat_messages:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DeleteChatMessagesInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Inbound_ids = \"1,2,3,4\"\
          ;\n            obj.Sent_ids = \"1,2,3,4\";\n            obj.Calls_ids =\
          \ \"1,2,3,4\";\n            obj.All = false;\n            int id = 1;\n\n\
          \            try {\n                apiInstance.DeleteChatMessages(objid);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteChatMessages: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DeleteChatMessagesInputObject With {\n            .Inbound_ids = \"1,2,3,4\"\
          ,\n            .Sent_ids = \"1,2,3,4\",\n            .Calls_ids = \"1,2,3,4\"\
          ,\n            .All = false\n        }\n        Dim id As Integer = 1\n\n\
          \        Try\n            apiInstance.DeleteChatMessages(objid)\n      \
          \      ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteChatMessages: \" + e.Message)\n        End\
          \ Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Inbound_ids:\
          \ \"1,2,3,4\",\n        Sent_ids: \"1,2,3,4\",\n        Calls_ids: \"1,2,3,4\"\
          ,\n        All: false,\n    }\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteChatMessages(auth, input, id)\n\n    if err\
          \ != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n\
          }\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DeleteChatMessagesInputObject>\
          \ input(new DeleteChatMessagesInputObject);\n    // Optional parameters,\
          \ you can skip them\n    input->setInbound_ids(\"1,2,3,4\");\n    input->setSent_ids(\"\
          1,2,3,4\");\n    input->setCalls_ids(\"1,2,3,4\");\n    input->setAll(false);\n\
          \n    int id = 1;\n\n    try {\n        pplx::task result = api.deleteChatMessages(input,\
          \ id);\n        result.wait();\n    } catch(const std::exception& e) {\n\
          \        std::cout << \"deleteChatMessages() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DeleteChatMessagesInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.inbound_ids = \"1,2,3,4\"\ninput.sent_ids = \"1,2,3,4\"\
          \ninput.calls_ids = \"1,2,3,4\"\ninput.all = false\nid = 1\n\ntry:\n   \
          \ api_instance.delete_chat_messages(delete_chat_messages_input_object=input,\
          \ id=id)\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->delete_chat_messages: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DeleteChatMessagesInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DeleteChatMessagesInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    inbound_ids => '1,2,3,4',\n\
          \    sent_ids => '1,2,3,4',\n    calls_ids => '1,2,3,4',\n    all => 0,\n\
          );\nmy $id = 1;\n\neval {\n    $api_instance->delete_chat_messages(delete_chat_messages_input_object\
          \ => $input, id => $id);\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->delete_chat_messages: $@\\n\";\n}"
  /api/v2/surveys/{id}/start:
    put:
      tags:
      - "TextMagic"
      summary: "Start a survey."
      description: ""
      operationId: "startSurvey"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
        422:
          description: "Returned when survey is in unprocessable status (only DRAFT\
            \ surveys are accepted) or has no recipients"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new StartSurveyInputObject();\n\
          $id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result\
          \ = $api->startSurvey($input$id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->startSurvey: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        StartSurveyInputObject input = new StartSurveyInputObject();\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.startSurvey(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling startSurvey\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n}\nconst id = 1;\n\napi.startSurvey(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::StartSurveyInputObject.new\n\
          id = 1\n\nbegin\n    # ResourceLinkResponse object\n    result = api.start_survey(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->start_survey: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new StartSurveyInputObject();\n            int id = 1;\n\n         \
          \   try {\n                // ResourceLinkResponse class object\n      \
          \          var result = apiInstance.StartSurvey(objid);\n              \
          \  // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling startSurvey: \"+e.Message);\n            }\n    \
          \    }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ StartSurveyInputObject With {\n        }\n        Dim id As Integer =\
          \ 1\n\n        Try\n            ' ResourceLinkResponse class object\n  \
          \          Dim result = apiInstance.StartSurvey(objid)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling startSurvey: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.StartSurvey(auth, input,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<StartSurveyInputObject>\
          \ input(new StartSurveyInputObject);\n\n    int id = 1;\n\n    try {\n \
          \       pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.startSurvey(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"startSurvey()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.StartSurveyInputObject()\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.start_survey(start_survey_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->start_survey: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::StartSurveyInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::StartSurveyInputObject->new(\n\
          );\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result\
          \ = $api_instance->start_survey(start_survey_input_object => $input, id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->start_survey: $@\\n\";\n}"
  /api/v2/surveys/{id}/duplicate:
    put:
      tags:
      - "TextMagic"
      summary: "Duplicate a survey."
      description: ""
      operationId: "duplicateSurvey"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
        422:
          description: "Returned when survey is in unprocessable status"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new DuplicateSurveyInputObject();\n\
          $id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result\
          \ = $api->duplicateSurvey($input$id);\n    // ...\n} catch (Exception $e)\
          \ {\n    echo 'Exception when calling TextMagicApi->duplicateSurvey: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        DuplicateSurveyInputObject input = new DuplicateSurveyInputObject();\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.duplicateSurvey(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling duplicateSurvey\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n}\nconst id = 1;\n\napi.duplicateSurvey(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::DuplicateSurveyInputObject.new\n\
          id = 1\n\nbegin\n    # ResourceLinkResponse object\n    result = api.duplicate_survey(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->duplicate_survey: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new DuplicateSurveyInputObject();\n            int id = 1;\n\n     \
          \       try {\n                // ResourceLinkResponse class object\n  \
          \              var result = apiInstance.DuplicateSurvey(objid);\n      \
          \          // ...\n            } catch (Exception e) {\n               \
          \ Console.WriteLine(\"Exception when calling duplicateSurvey: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ DuplicateSurveyInputObject With {\n        }\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' ResourceLinkResponse class object\n\
          \            Dim result = apiInstance.DuplicateSurvey(objid)\n         \
          \   ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling duplicateSurvey: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.DuplicateSurvey(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<DuplicateSurveyInputObject>\
          \ input(new DuplicateSurveyInputObject);\n\n    int id = 1;\n\n    try {\n\
          \        pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.duplicateSurvey(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"duplicateSurvey()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.DuplicateSurveyInputObject()\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.duplicate_survey(duplicate_survey_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->duplicate_survey: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::DuplicateSurveyInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::DuplicateSurveyInputObject->new(\n\
          );\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result\
          \ = $api_instance->duplicate_survey(duplicate_survey_input_object => $input,\
          \ id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->duplicate_survey: $@\\n\";\n}"
  /api/v2/surveys/{id}/cancel:
    put:
      tags:
      - "TextMagic"
      summary: "Cancel a survey."
      description: ""
      operationId: "cancelSurvey"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
        422:
          description: "Returned when survey is in unprocessable status (only ACTIVE\
            \ surveys are accepted)"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CancelSurveyInputObject();\n\
          $id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result\
          \ = $api->cancelSurvey($input$id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->cancelSurvey: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CancelSurveyInputObject input = new CancelSurveyInputObject();\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.cancelSurvey(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling cancelSurvey\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n}\nconst id = 1;\n\napi.cancelSurvey(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CancelSurveyInputObject.new\n\
          id = 1\n\nbegin\n    # ResourceLinkResponse object\n    result = api.cancel_survey(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->cancel_survey: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CancelSurveyInputObject();\n            int id = 1;\n\n        \
          \    try {\n                // ResourceLinkResponse class object\n     \
          \           var result = apiInstance.CancelSurvey(objid);\n            \
          \    // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling cancelSurvey: \"+e.Message);\n            }\n   \
          \     }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CancelSurveyInputObject With {\n        }\n        Dim id As Integer =\
          \ 1\n\n        Try\n            ' ResourceLinkResponse class object\n  \
          \          Dim result = apiInstance.CancelSurvey(objid)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling cancelSurvey: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.CancelSurvey(auth, input,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CancelSurveyInputObject>\
          \ input(new CancelSurveyInputObject);\n\n    int id = 1;\n\n    try {\n\
          \        pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.cancelSurvey(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"cancelSurvey()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CancelSurveyInputObject()\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.cancel_survey(cancel_survey_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->cancel_survey: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CancelSurveyInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CancelSurveyInputObject->new(\n\
          );\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result\
          \ = $api_instance->cancel_survey(cancel_survey_input_object => $input, id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->cancel_survey: $@\\n\";\n}"
  /api/v2/surveys/{id}/reset:
    put:
      tags:
      - "TextMagic"
      summary: "Reset a survey flow."
      description: ""
      operationId: "resetSurvey"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
        422:
          description: "Returned when survey is in unprocessable status"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new ResetSurveyInputObject();\n\
          $id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result\
          \ = $api->resetSurvey($input$id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->resetSurvey: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        ResetSurveyInputObject input = new ResetSurveyInputObject();\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.resetSurvey(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling resetSurvey\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n}\nconst id = 1;\n\napi.resetSurvey(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::ResetSurveyInputObject.new\n\
          id = 1\n\nbegin\n    # ResourceLinkResponse object\n    result = api.reset_survey(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->reset_survey: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new ResetSurveyInputObject();\n            int id = 1;\n\n         \
          \   try {\n                // ResourceLinkResponse class object\n      \
          \          var result = apiInstance.ResetSurvey(objid);\n              \
          \  // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling resetSurvey: \"+e.Message);\n            }\n    \
          \    }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ ResetSurveyInputObject With {\n        }\n        Dim id As Integer =\
          \ 1\n\n        Try\n            ' ResourceLinkResponse class object\n  \
          \          Dim result = apiInstance.ResetSurvey(objid)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling resetSurvey: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.ResetSurvey(auth, input,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<ResetSurveyInputObject>\
          \ input(new ResetSurveyInputObject);\n\n    int id = 1;\n\n    try {\n \
          \       pplx::task<std::shared_ptr<ResourceLinkResponse>> result = api.resetSurvey(input,\
          \ id);\n        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"resetSurvey()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.ResetSurveyInputObject()\nid = 1\n\ntry:\n    # ResourceLinkResponse\
          \ object\n    result = api_instance.reset_survey(reset_survey_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->reset_survey: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::ResetSurveyInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::ResetSurveyInputObject->new(\n\
          );\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result\
          \ = $api_instance->reset_survey(reset_survey_input_object => $input, id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->reset_survey: $@\\n\";\n}"
  /api/v2/surveys:
    get:
      tags:
      - "TextMagic"
      summary: "Get all user surveys."
      description: ""
      operationId: "getSurveys"
      parameters:
      - name: "page"
        in: "query"
        description: "Fetch specified results page."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "The number of results per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetSurveysPaginatedResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n// Optional, you can pass them as null values to getSurveys method\
          \ below, default values will be used\n$page = 1;\n$limit = 10;\n\ntry {\n\
          \    // GetSurveysPaginatedResponse class object\n    $result = $api->getSurveys($page,\
          \ $limit);\n    // ...\n} catch (Exception $e) {\n    echo 'Exception when\
          \ calling TextMagicApi->getSurveys: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        // Optional, you can pass them as null values to getSurveys method\
          \ below, default values will be used\n        int page = 1;\n        int\
          \ limit = 10;\n\n        try {\n            // GetSurveysPaginatedResponse\
          \ class object\n            GetSurveysPaginatedResponse obj = apiInstance.getSurveys(page,\
          \ limit);\n            // ...\n        } catch (ApiException e) {\n    \
          \        System.err.println(\"Exception when calling getSurveys\");\n  \
          \          e.printStackTrace();\n        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nparams\
          \ = {\n// Optional parameters\n    page: 1,\n    limit: 10,\n}\n\napi.getSurveys().then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nparams = {\n  # Optional parameters\n\
          \  page: 1,\n  limit: 10,\n}\n\nbegin\n    # GetSurveysPaginatedResponse\
          \ object\n    result = api.get_surveys(params)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_surveys: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            // Optional,\
          \ you can pass them as null values to getSurveys method below, default values\
          \ will be used\n            int page = 1;\n            int limit = 10;\n\
          \n            try {\n                // GetSurveysPaginatedResponse class\
          \ object\n                var result = apiInstance.GetSurveys(page, limit);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getSurveys: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        ' Optional,\
          \ you can pass them as null values to getSurveys method below, default values\
          \ will be used\n        Dim page As Integer = 1\n        Dim limit As Integer\
          \ = 10\n\n        Try\n            ' GetSurveysPaginatedResponse class object\n\
          \            Dim result = apiInstance.GetSurveys(page, limit)\n        \
          \    ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling getSurveys: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    opts := tm.GetSurveysOpts{\n       \
          \ // Optional parameters\n        Page: optional.NewInt32(1),\n        Limit:\
          \ optional.NewInt32(10),\n    }\n\n    // tm.GetSurveysPaginatedResponse\
          \ struct\n    result, _, err := client.TextMagicApi.GetSurveys(auth, &opts)\n\
          \n    if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    // Optional parameters. Important:\
          \ if you want to use default value then pass boost::none value\n    int\
          \ page = 1;\n    int limit = 10;\n\n    try {\n        pplx::task<std::shared_ptr<GetSurveysPaginatedResponse>>\
          \ result = api.getSurveys(page, limit);\n        result.wait();\n      \
          \  // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"getSurveys() exception: \" << e.what() <<\
          \ '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\n# Optional\
          \ params, you can skip them\npage = 1\nlimit = 10\n\ntry:\n    # GetSurveysPaginatedResponse\
          \ object\n    result = api_instance.get_surveys(page=page, limit=limit)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_surveys: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\n# Optional\
          \ params, you can skip them\nmy $page = 1;\nmy $limit = 10;\n\neval {\n\
          \    # GetSurveysPaginatedResponse object\n    my $result = $api_instance->get_surveys(page\
          \ => $page, limit => $limit);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->get_surveys: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a new survey from the submitted data."
      description: ""
      operationId: "createSurvey"
      parameters:
      - in: "body"
        name: "CreateSurveyInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateSurveyInputObject"
        x-exportParamName: "CreateSurveyInputObject"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateSurveyInputObject();\n\
          \n// Required parameters\n$input->setName(\"Test survey\");\n\ntry {\n \
          \   // ResourceLinkResponse class object\n    $result = $api->createSurvey($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->createSurvey: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateSurveyInputObject input = new CreateSurveyInputObject();\n\
          \n        // Required parameters\n        input.setName(\"Test survey\"\
          );\n\n        try {\n            // ResourceLinkResponse class object\n\
          \            ResourceLinkResponse obj = apiInstance.createSurvey(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling createSurvey\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"Test survey\",\n}\n\napi.createSurvey(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateSurveyInputObject.new\n\
          \n# Required parameters\nobj.name = \"Test survey\"\n\nbegin\n    # ResourceLinkResponse\
          \ object\n    result = api.create_survey(input)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->create_survey: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateSurveyInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"Test survey\";\n\n            try {\n        \
          \        // ResourceLinkResponse class object\n                var result\
          \ = apiInstance.CreateSurvey(obj);\n                // ...\n           \
          \ } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling createSurvey: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateSurveyInputObject With {\n            .Name = \"Test survey\"\n\
          \        }\n\n        Try\n            ' ResourceLinkResponse class object\n\
          \            Dim result = apiInstance.CreateSurvey(obj)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling createSurvey: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"Test survey\",\n    }\n\
          \n    // tm.ResourceLinkResponse struct\n    result, _, err := client.TextMagicApi.CreateSurvey(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateSurveyInputObject>\
          \ input(new CreateSurveyInputObject);\n    // Required parameters\n    input->setName(\"\
          Test survey\");\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.createSurvey(input);\n        result.wait();\n        //\
          \ put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"createSurvey() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateSurveyInputObject()\n\n# Required parameters\ninput.name\
          \ = \"Test survey\"\n\ntry:\n    # ResourceLinkResponse object\n    result\
          \ = api_instance.create_survey(create_survey_input_object=input)\n    #\
          \ ...\nexcept ApiException as e:\n    print(\"Exception when calling TextMagicApi->create_survey:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateSurveyInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateSurveyInputObject->new(\n\
          \    # Required parameters\n    name => 'Test survey',\n);\n\neval {\n \
          \   # ResourceLinkResponse object\n    my $result = $api_instance->create_survey(create_survey_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->create_survey: $@\\n\";\n}"
  /api/v2/surveys/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a survey by id."
      description: ""
      operationId: "getSurvey"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/Survey"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // Survey class object\n    $result = $api->getSurvey($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getSurvey: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // Survey class object\n\
          \            Survey obj = apiInstance.getSurvey(id);\n            // ...\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling getSurvey\");\n            e.printStackTrace();\n       \
          \ }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getSurvey(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # Survey\
          \ object\n    result = api.get_survey(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_survey: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // Survey class object\n  \
          \              var result = apiInstance.GetSurvey(id);\n               \
          \ // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getSurvey: \"+e.Message);\n            }\n      \
          \  }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' Survey class object\n            Dim\
          \ result = apiInstance.GetSurvey(id)\n            ' ...\n        Catch e\
          \ As Exception\n            Console.WriteLine(\"Exception when calling getSurvey:\
          \ \" + e.Message)\n        End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.Survey struct\n    result, _, err := client.TextMagicApi.GetSurvey(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<Survey>> result = api.getSurvey(id);\n \
          \       result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getSurvey()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # Survey object\n    result = api_instance.get_survey(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_survey: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # Survey object\n    my $result = $api_instance->get_survey(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_survey: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update existing survey."
      description: ""
      operationId: "updateSurvey"
      parameters:
      - in: "body"
        name: "UpdateSurveyInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateSurveyInputObject"
        x-exportParamName: "UpdateSurveyInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateSurveyInputObject();\n\
          \n// Required parameters\n$input->setName(\"New test name\");\n\n// Optional\
          \ parameters, you can skip these setters calls\n$input->setContacts(\"1,2,3,4\"\
          );\n$input->setLists(\"1,2,3,4\");\n$input->setPhones(\"+19998887766,+19998887755\"\
          );\n$id = 1;\n\ntry {\n    // ResourceLinkResponse class object\n    $result\
          \ = $api->updateSurvey($input$id);\n    // ...\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->updateSurvey: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateSurveyInputObject input = new UpdateSurveyInputObject();\n\
          \n        // Required parameters\n        input.setName(\"New test name\"\
          );\n\n        // Optional parameters, you can skip these setters calls\n\
          \        input.setContacts(\"1,2,3,4\");\n        input.setLists(\"1,2,3,4\"\
          );\n        input.setPhones(\"+19998887766,+19998887755\");\n        int\
          \ id = 1;\n\n        try {\n            // ResourceLinkResponse class object\n\
          \            ResourceLinkResponse obj = apiInstance.updateSurvey(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling updateSurvey\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    name: \"New test name\",\n    // Optional parameters\n\
          \    contacts: \"1,2,3,4\",\n    lists: \"1,2,3,4\",\n    phones: \"+19998887766,+19998887755\"\
          ,\n}\nconst id = 1;\n\napi.updateSurvey(input, id).then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateSurveyInputObject.new\n\
          \n# Required parameters\nobj.name = \"New test name\"\n# Optional parameters,\
          \ you can skip them\nobj.contacts = \"1,2,3,4\"\nobj.lists = \"1,2,3,4\"\
          \nobj.phones = \"+19998887766,+19998887755\"\nid = 1\n\nbegin\n    # ResourceLinkResponse\
          \ object\n    result = api.update_survey(input, id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->update_survey: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateSurveyInputObject();\n\n            // Required parameters\n\
          \            obj.Name = \"New test name\";\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Contacts = \"1,2,3,4\"\
          ;\n            obj.Lists = \"1,2,3,4\";\n            obj.Phones = \"+19998887766,+19998887755\"\
          ;\n            int id = 1;\n\n            try {\n                // ResourceLinkResponse\
          \ class object\n                var result = apiInstance.UpdateSurvey(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling updateSurvey: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateSurveyInputObject With {\n            .Name = \"New test name\"\
          ,\n            .Contacts = \"1,2,3,4\",\n            .Lists = \"1,2,3,4\"\
          ,\n            .Phones = \"+19998887766,+19998887755\"\n        }\n    \
          \    Dim id As Integer = 1\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.UpdateSurvey(objid)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling updateSurvey: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Name: \"New test name\",\n    \
          \    // Optional parameters, you can skip them\n        Contacts: \"1,2,3,4\"\
          ,\n        Lists: \"1,2,3,4\",\n        Phones: \"+19998887766,+19998887755\"\
          ,\n    }\n    // Required\n    var id int32 = 1\n\n    // tm.ResourceLinkResponse\
          \ struct\n    result, _, err := client.TextMagicApi.UpdateSurvey(auth, input,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateSurveyInputObject>\
          \ input(new UpdateSurveyInputObject);\n    // Required parameters\n    input->setName(\"\
          New test name\");\n    // Optional parameters, you can skip them\n    input->setContacts(\"\
          1,2,3,4\");\n    input->setLists(\"1,2,3,4\");\n    input->setPhones(\"\
          +19998887766,+19998887755\");\n\n    int id = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.updateSurvey(input, id);\n        result.wait();\n      \
          \  // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateSurvey() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateSurveyInputObject()\n\n# Required parameters\ninput.name\
          \ = \"New test name\"\n# Optional parameters, you can skip them\ninput.contacts\
          \ = \"1,2,3,4\"\ninput.lists = \"1,2,3,4\"\ninput.phones = \"+19998887766,+19998887755\"\
          \nid = 1\n\ntry:\n    # ResourceLinkResponse object\n    result = api_instance.update_survey(update_survey_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_survey: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateSurveyInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateSurveyInputObject->new(\n\
          \    # Required parameters\n    name => 'New test name',\n    # Optional\
          \ parameters, you can skip them\n    contacts => '1,2,3,4',\n    lists =>\
          \ '1,2,3,4',\n    phones => '+19998887766,+19998887755',\n);\nmy $id = 1;\n\
          \neval {\n    # ResourceLinkResponse object\n    my $result = $api_instance->update_survey(update_survey_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_survey: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a survey."
      description: ""
      operationId: "deleteSurvey"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteSurvey($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteSurvey: ',\
          \ $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteSurvey(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteSurvey\");\n            e.printStackTrace();\n    \
          \    }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteSurvey(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_survey(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_survey:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteSurvey(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteSurvey: \"+e.Message);\n            }\n   \
          \     }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteSurvey(id)\n       \
          \     ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteSurvey: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteSurvey(auth, id)\n\n    if err != nil {\n\
          \        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteSurvey(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteSurvey()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_survey(id=id)\nexcept ApiException as e:\n\
          \    print(\"Exception when calling TextMagicApi->delete_survey: %s\\n\"\
          \ % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_survey(id => $id);\n};\n\nif ($@) {\n\
          \    warn \"Exception when calling TextMagicApi->delete_survey: $@\\n\"\
          ;\n}"
  /api/v2/surveys/{id}/nodes:
    get:
      tags:
      - "TextMagic"
      summary: "Fetch nodes by given survey id."
      description: ""
      operationId: "getSurveyNodes"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/GetSurveyNodesResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // GetSurveyNodesResponse class object\n  \
          \  $result = $api->getSurveyNodes($id);\n    // ...\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->getSurveyNodes:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // GetSurveyNodesResponse\
          \ class object\n            GetSurveyNodesResponse obj = apiInstance.getSurveyNodes(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getSurveyNodes\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getSurveyNodes(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # GetSurveyNodesResponse\
          \ object\n    result = api.get_survey_nodes(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_survey_nodes:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // GetSurveyNodesResponse class\
          \ object\n                var result = apiInstance.GetSurveyNodes(id);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling getSurveyNodes: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' GetSurveyNodesResponse class object\n\
          \            Dim result = apiInstance.GetSurveyNodes(id)\n            '\
          \ ...\n        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling getSurveyNodes: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.GetSurveyNodesResponse struct\n    result, _, err := client.TextMagicApi.GetSurveyNodes(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<GetSurveyNodesResponse>> result = api.getSurveyNodes(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getSurveyNodes()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # GetSurveyNodesResponse object\n    result = api_instance.get_survey_nodes(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_survey_nodes: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # GetSurveyNodesResponse object\n    my $result = $api_instance->get_survey_nodes(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_survey_nodes: $@\\n\";\n}"
    post:
      tags:
      - "TextMagic"
      summary: "Create a new node from the submitted data."
      description: ""
      operationId: "createSurveyNode"
      parameters:
      - in: "body"
        name: "CreateSurveyNodeInputObject"
        required: true
        schema:
          $ref: "#/definitions/CreateSurveyNodeInputObject"
        x-exportParamName: "CreateSurveyNodeInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CreateSurveyNodeInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setNodeType(\"\
          q\");\n$input->setLabel(\"Question 1\");\n$input->setBody(\"Test node body\"\
          );\n$input->setStartNode(1);\n$input->setSendDelay(1);\n$id = 1;\n\ntry\
          \ {\n    // ResourceLinkResponse class object\n    $result = $api->createSurveyNode($input$id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->createSurveyNode: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CreateSurveyNodeInputObject input = new CreateSurveyNodeInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setNodeType(\"q\");\n        input.setLabel(\"Question 1\");\n\
          \        input.setBody(\"Test node body\");\n        input.setStartNode(1);\n\
          \        input.setSendDelay(1);\n        int id = 1;\n\n        try {\n\
          \            // ResourceLinkResponse class object\n            ResourceLinkResponse\
          \ obj = apiInstance.createSurveyNode(inputid);\n            // ...\n   \
          \     } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling createSurveyNode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    nodeType: \"q\",\n    label:\
          \ \"Question 1\",\n    body: \"Test node body\",\n    startNode: 1,\n  \
          \  sendDelay: 1,\n}\nconst id = 1;\n\napi.createSurveyNode(input, id).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CreateSurveyNodeInputObject.new\n\
          # Optional parameters, you can skip them\nobj.node_type = \"q\"\nobj.label\
          \ = \"Question 1\"\nobj.body = \"Test node body\"\nobj.start_node = 1\n\
          obj.send_delay = 1\nid = 1\n\nbegin\n    # ResourceLinkResponse object\n\
          \    result = api.create_survey_node(input, id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->create_survey_node:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CreateSurveyNodeInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.NodeType = \"q\";\n\
          \            obj.Label = \"Question 1\";\n            obj.Body = \"Test\
          \ node body\";\n            obj.StartNode = 1;\n            obj.SendDelay\
          \ = 1;\n            int id = 1;\n\n            try {\n                //\
          \ ResourceLinkResponse class object\n                var result = apiInstance.CreateSurveyNode(objid);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling createSurveyNode: \"\
          +e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CreateSurveyNodeInputObject With {\n            .NodeType = \"q\",\n \
          \           .Label = \"Question 1\",\n            .Body = \"Test node body\"\
          ,\n            .StartNode = 1,\n            .SendDelay = 1\n        }\n\
          \        Dim id As Integer = 1\n\n        Try\n            ' ResourceLinkResponse\
          \ class object\n            Dim result = apiInstance.CreateSurveyNode(objid)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling createSurveyNode: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        NodeType: \"\
          q\",\n        Label: \"Question 1\",\n        Body: \"Test node body\",\n\
          \        StartNode: 1,\n        SendDelay: 1,\n    }\n    // Required\n\
          \    var id int32 = 1\n\n    // tm.ResourceLinkResponse struct\n    result,\
          \ _, err := client.TextMagicApi.CreateSurveyNode(auth, input, id)\n\n  \
          \  if err != nil {\n        log.Fatal(err)\n    } else {\n        fmt.Printf(\"\
          %+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CreateSurveyNodeInputObject>\
          \ input(new CreateSurveyNodeInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setNodeType(\"q\");\n    input->setLabel(\"\
          Question 1\");\n    input->setBody(\"Test node body\");\n    input->setStartNode(1);\n\
          \    input->setSendDelay(1);\n\n    int id = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.createSurveyNode(input, id);\n        result.wait();\n  \
          \      // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"createSurveyNode() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CreateSurveyNodeInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.node_type = \"q\"\ninput.label = \"Question 1\"\n\
          input.body = \"Test node body\"\ninput.start_node = 1\ninput.send_delay\
          \ = 1\nid = 1\n\ntry:\n    # ResourceLinkResponse object\n    result = api_instance.create_survey_node(create_survey_node_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->create_survey_node: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CreateSurveyNodeInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CreateSurveyNodeInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    nodeType => 'q',\n  \
          \  label => 'Question 1',\n    body => 'Test node body',\n    startNode\
          \ => 1,\n    sendDelay => 1,\n);\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse\
          \ object\n    my $result = $api_instance->create_survey_node(create_survey_node_input_object\
          \ => $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->create_survey_node: $@\\n\";\n}"
  /api/v2/surveys/nodes/{id}:
    get:
      tags:
      - "TextMagic"
      summary: "Get a node by id."
      description: ""
      operationId: "getSurveyNode"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SurveyNode"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    // SurveyNode class object\n    $result = $api->getSurveyNode($id);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->getSurveyNode: ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            // SurveyNode class\
          \ object\n            SurveyNode obj = apiInstance.getSurveyNode(id);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling getSurveyNode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.getSurveyNode(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    # SurveyNode\
          \ object\n    result = api.get_survey_node(id)\n    # ...\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->get_survey_node:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                // SurveyNode class object\n\
          \                var result = apiInstance.GetSurveyNode(id);\n         \
          \       // ...\n            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling getSurveyNode: \"+e.Message);\n            }\n  \
          \      }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            ' SurveyNode class object\n          \
          \  Dim result = apiInstance.GetSurveyNode(id)\n            ' ...\n     \
          \   Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling getSurveyNode: \" + e.Message)\n        End Try\n    End Sub\n\
          End Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.SurveyNode struct\n    result, _, err := client.TextMagicApi.GetSurveyNode(auth,\
          \ id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n   \
          \     fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task<std::shared_ptr<SurveyNode>> result = api.getSurveyNode(id);\n\
          \        result.wait();\n        // put operations with result here...\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"getSurveyNode()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    # SurveyNode object\n    result = api_instance.get_survey_node(id=id)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->get_survey_node: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    # SurveyNode object\n    my $result = $api_instance->get_survey_node(id\
          \ => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->get_survey_node: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Update existing node."
      description: ""
      operationId: "updateSurveyNode"
      parameters:
      - in: "body"
        name: "UpdateSurveyNodeInputObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateSurveyNodeInputObject"
        x-exportParamName: "UpdateSurveyNodeInputObject"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        201:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/ResourceLinkResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new UpdateSurveyNodeInputObject();\n\
          \n// Optional parameters, you can skip these setters calls\n$input->setLabel(\"\
          Question 1\");\n$input->setIsEndNode(false);\n$input->setBody(\"Test node\
          \ body\");\n$input->setSendDelay(1);\n$id = 1;\n\ntry {\n    // ResourceLinkResponse\
          \ class object\n    $result = $api->updateSurveyNode($input$id);\n    //\
          \ ...\n} catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->updateSurveyNode:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        UpdateSurveyNodeInputObject input = new UpdateSurveyNodeInputObject();\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setLabel(\"Question 1\");\n        input.setIsEndNode(false);\n\
          \        input.setBody(\"Test node body\");\n        input.setSendDelay(1);\n\
          \        int id = 1;\n\n        try {\n            // ResourceLinkResponse\
          \ class object\n            ResourceLinkResponse obj = apiInstance.updateSurveyNode(inputid);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling updateSurveyNode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    // Optional parameters\n    label: \"Question 1\",\n  \
          \  isEndNode: false,\n    body: \"Test node body\",\n    sendDelay: 1,\n\
          }\nconst id = 1;\n\napi.updateSurveyNode(input, id).then(function (data)\
          \ {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::UpdateSurveyNodeInputObject.new\n\
          # Optional parameters, you can skip them\nobj.label = \"Question 1\"\nobj.is_end_node\
          \ = false\nobj.body = \"Test node body\"\nobj.send_delay = 1\nid = 1\n\n\
          begin\n    # ResourceLinkResponse object\n    result = api.update_survey_node(input,\
          \ id)\n    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception\
          \ when calling TextMagicApi->update_survey_node: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new UpdateSurveyNodeInputObject();\n\n            // Optional parameters,\
          \ you can skip these setters calls\n            obj.Label = \"Question 1\"\
          ;\n            obj.IsEndNode = false;\n            obj.Body = \"Test node\
          \ body\";\n            obj.SendDelay = 1;\n            int id = 1;\n\n \
          \           try {\n                // ResourceLinkResponse class object\n\
          \                var result = apiInstance.UpdateSurveyNode(objid);\n   \
          \             // ...\n            } catch (Exception e) {\n            \
          \    Console.WriteLine(\"Exception when calling updateSurveyNode: \"+e.Message);\n\
          \            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ UpdateSurveyNodeInputObject With {\n            .Label = \"Question 1\"\
          ,\n            .IsEndNode = false,\n            .Body = \"Test node body\"\
          ,\n            .SendDelay = 1\n        }\n        Dim id As Integer = 1\n\
          \n        Try\n            ' ResourceLinkResponse class object\n       \
          \     Dim result = apiInstance.UpdateSurveyNode(objid)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling updateSurveyNode: \" + e.Message)\n        End Try\n    End\
          \ Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Optional parameters, you can skip them\n        Label: \"Question\
          \ 1\",\n        IsEndNode: false,\n        Body: \"Test node body\",\n \
          \       SendDelay: 1,\n    }\n    // Required\n    var id int32 = 1\n\n\
          \    // tm.ResourceLinkResponse struct\n    result, _, err := client.TextMagicApi.UpdateSurveyNode(auth,\
          \ input, id)\n\n    if err != nil {\n        log.Fatal(err)\n    } else\
          \ {\n        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<UpdateSurveyNodeInputObject>\
          \ input(new UpdateSurveyNodeInputObject);\n    // Optional parameters, you\
          \ can skip them\n    input->setLabel(\"Question 1\");\n    input->setIsEndNode(false);\n\
          \    input->setBody(\"Test node body\");\n    input->setSendDelay(1);\n\n\
          \    int id = 1;\n\n    try {\n        pplx::task<std::shared_ptr<ResourceLinkResponse>>\
          \ result = api.updateSurveyNode(input, id);\n        result.wait();\n  \
          \      // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"updateSurveyNode() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.UpdateSurveyNodeInputObject()\n# Optional parameters, you\
          \ can skip them\ninput.label = \"Question 1\"\ninput.is_end_node = false\n\
          input.body = \"Test node body\"\ninput.send_delay = 1\nid = 1\n\ntry:\n\
          \    # ResourceLinkResponse object\n    result = api_instance.update_survey_node(update_survey_node_input_object=input,\
          \ id=id)\n    # ...\nexcept ApiException as e:\n    print(\"Exception when\
          \ calling TextMagicApi->update_survey_node: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::UpdateSurveyNodeInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::UpdateSurveyNodeInputObject->new(\n\
          \    # Optional parameters, you can skip them\n    label => 'Question 1',\n\
          \    isEndNode => 0,\n    body => 'Test node body',\n    sendDelay => 1,\n\
          );\nmy $id = 1;\n\neval {\n    # ResourceLinkResponse object\n    my $result\
          \ = $api_instance->update_survey_node(update_survey_node_input_object =>\
          \ $input, id => $id);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception\
          \ when calling TextMagicApi->update_survey_node: $@\\n\";\n}"
    delete:
      tags:
      - "TextMagic"
      summary: "Delete a node."
      description: ""
      operationId: "deleteSurveyNode"
      produces: []
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1
        x-exportParamName: "Id"
      responses:
        204:
          description: "Returned when successful"
        404:
          description: "Returned when no survey found"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$id = 1;\n\ntry {\n    $api->deleteSurveyNode($id);\n} catch (Exception\
          \ $e) {\n    echo 'Exception when calling TextMagicApi->deleteSurveyNode:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        int id = 1;\n\n        try {\n            apiInstance.deleteSurveyNode(id);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling deleteSurveyNode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ id = 1;\n\napi.deleteSurveyNode(id).then(function (data) {\n    console.log(data);\n\
          }).catch(function(err){\n    console.error(err);\n});"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nid = 1\n\nbegin\n    api.delete_survey_node(id)\n\
          rescue TextMagic::ApiError => e\n    puts \"Exception when calling TextMagicApi->delete_survey_node:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            int id\
          \ = 1;\n\n            try {\n                apiInstance.DeleteSurveyNode(id);\n\
          \            } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling deleteSurveyNode: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim id As Integer\
          \ = 1\n\n        Try\n            apiInstance.DeleteSurveyNode(id)\n   \
          \         ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling deleteSurveyNode: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var id int32 = 1\n\n\
          \    client.TextMagicApi.DeleteSurveyNode(auth, id)\n\n    if err != nil\
          \ {\n        log.Fatal(err)\n    } else {\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    int id = 1;\n\n    try {\n    \
          \    pplx::task result = api.deleteSurveyNode(id);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"deleteSurveyNode()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nid = 1\n\
          \ntry:\n    api_instance.delete_survey_node(id=id)\nexcept ApiException\
          \ as e:\n    print(\"Exception when calling TextMagicApi->delete_survey_node:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $id = 1;\n\
          \neval {\n    $api_instance->delete_survey_node(id => $id);\n};\n\nif ($@)\
          \ {\n    warn \"Exception when calling TextMagicApi->delete_survey_node:\
          \ $@\\n\";\n}"
  /api/v2/surveys/nodes/merge:
    post:
      tags:
      - "TextMagic"
      summary: "Merge two question nodes."
      description: ""
      operationId: "mergeSurveyNodes"
      produces: []
      parameters:
      - in: "body"
        name: "MergeSurveyNodesInputObject"
        required: true
        schema:
          $ref: "#/definitions/MergeSurveyNodesInputObject"
        x-exportParamName: "MergeSurveyNodesInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        404:
          description: "Request data not found"
          schema:
            $ref: "#/definitions/NotFoundResponse"
      deprecated: true
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new MergeSurveyNodesInputObject();\n\
          \n// Required parameters\n$input->setFirstNode(1);\n$input->setSecondNode(2);\n\
          \ntry {\n    $api->mergeSurveyNodes($input);\n} catch (Exception $e) {\n\
          \    echo 'Exception when calling TextMagicApi->mergeSurveyNodes: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        MergeSurveyNodesInputObject input = new MergeSurveyNodesInputObject();\n\
          \n        // Required parameters\n        input.setFirstNode(1);\n     \
          \   input.setSecondNode(2);\n\n        try {\n            apiInstance.mergeSurveyNodes(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling mergeSurveyNodes\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    firstNode: 1,\n    secondNode: 2,\n}\n\napi.mergeSurveyNodes(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::MergeSurveyNodesInputObject.new\n\
          \n# Required parameters\nobj.first_node = 1\nobj.second_node = 2\n\nbegin\n\
          \    api.merge_survey_nodes(input)\nrescue TextMagic::ApiError => e\n  \
          \  puts \"Exception when calling TextMagicApi->merge_survey_nodes: #{e}\"\
          \nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new MergeSurveyNodesInputObject();\n\n            // Required parameters\n\
          \            obj.FirstNode = 1;\n            obj.SecondNode = 2;\n\n   \
          \         try {\n                apiInstance.MergeSurveyNodes(obj);\n  \
          \          } catch (Exception e) {\n                Console.WriteLine(\"\
          Exception when calling mergeSurveyNodes: \"+e.Message);\n            }\n\
          \        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ MergeSurveyNodesInputObject With {\n            .FirstNode = 1,\n    \
          \        .SecondNode = 2\n        }\n\n        Try\n            apiInstance.MergeSurveyNodes(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling mergeSurveyNodes: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        FirstNode: 1,\n        SecondNode:\
          \ 2,\n    }\n\n    client.TextMagicApi.MergeSurveyNodes(auth, input)\n\n\
          \    if err != nil {\n        log.Fatal(err)\n    } else {\n        // ...\n\
          \    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<MergeSurveyNodesInputObject>\
          \ input(new MergeSurveyNodesInputObject);\n    // Required parameters\n\
          \    input->setFirstNode(1);\n    input->setSecondNode(2);\n\n    try {\n\
          \        pplx::task result = api.mergeSurveyNodes(input);\n        result.wait();\n\
          \    } catch(const std::exception& e) {\n        std::cout << \"mergeSurveyNodes()\
          \ exception: \" << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.MergeSurveyNodesInputObject()\n\n# Required parameters\ninput.first_node\
          \ = 1\ninput.second_node = 2\n\ntry:\n    api_instance.merge_survey_nodes(merge_survey_nodes_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->merge_survey_nodes:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::MergeSurveyNodesInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::MergeSurveyNodesInputObject->new(\n\
          \    # Required parameters\n    firstNode => 1,\n    secondNode => 2,\n\
          );\n\neval {\n    $api_instance->merge_survey_nodes(merge_survey_nodes_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->merge_survey_nodes:\
          \ $@\\n\";\n}"
  /api/v2/verify:
    post:
      tags:
      - "TextMagic"
      summary: "Step 1: Send a verification code\n"
      description: "Sends verification code to specified phone number."
      operationId: "sendPhoneVerificationCode"
      parameters:
      - in: "body"
        name: "SendPhoneVerificationCodeInputObject"
        required: true
        schema:
          $ref: "#/definitions/SendPhoneVerificationCodeInputObject"
        x-exportParamName: "SendPhoneVerificationCodeInputObject"
      responses:
        200:
          description: "Returned when successful"
          schema:
            $ref: "#/definitions/SendPhoneVerificationCodeResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        409:
          description: "Submitting another verification request for the same phone\
            \ number before the original code has expired will result in a 409 error\
            \ code. The new verification request can be submitted only once the previous\
            \ code has expired (after 5 minutes) or canceled.\n"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new SendPhoneVerificationCodeInputObject();\n\
          \n// Required parameters\n$input->setPhone(\"447860021130\");\n$input->setBrand(\"\
          TextMagic\");\n$input->setCodeLength(4);\n\n// Optional parameters, you\
          \ can skip these setters calls\n$input->setLanguage(\"en-gb\");\n$input->setSenderId(\"\
          TextMagic\");\n$input->setCountry(\"US\");\n\ntry {\n    // SendPhoneVerificationCodeResponse\
          \ class object\n    $result = $api->sendPhoneVerificationCode($input);\n\
          \    // ...\n} catch (Exception $e) {\n    echo 'Exception when calling\
          \ TextMagicApi->sendPhoneVerificationCode: ', $e->getMessage(), PHP_EOL;\n\
          }"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        SendPhoneVerificationCodeInputObject input = new SendPhoneVerificationCodeInputObject();\n\
          \n        // Required parameters\n        input.setPhone(\"447860021130\"\
          );\n        input.setBrand(\"TextMagic\");\n        input.setCodeLength(4);\n\
          \n        // Optional parameters, you can skip these setters calls\n   \
          \     input.setLanguage(\"en-gb\");\n        input.setSenderId(\"TextMagic\"\
          );\n        input.setCountry(\"US\");\n\n        try {\n            // SendPhoneVerificationCodeResponse\
          \ class object\n            SendPhoneVerificationCodeResponse obj = apiInstance.sendPhoneVerificationCode(input);\n\
          \            // ...\n        } catch (ApiException e) {\n            System.err.println(\"\
          Exception when calling sendPhoneVerificationCode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    phone: \"447860021130\",\n    brand: \"TextMagic\",\n \
          \   codeLength: 4,\n    // Optional parameters\n    language: \"en-gb\"\
          ,\n    senderId: \"TextMagic\",\n    country: \"US\",\n}\n\napi.sendPhoneVerificationCode(input).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::SendPhoneVerificationCodeInputObject.new\n\
          \n# Required parameters\nobj.phone = \"447860021130\"\nobj.brand = \"TextMagic\"\
          \nobj.code_length = 4\n# Optional parameters, you can skip them\nobj.language\
          \ = \"en-gb\"\nobj.sender_id = \"TextMagic\"\nobj.country = \"US\"\n\nbegin\n\
          \    # SendPhoneVerificationCodeResponse object\n    result = api.send_phone_verification_code(input)\n\
          \    # ...\nrescue TextMagic::ApiError => e\n    puts \"Exception when calling\
          \ TextMagicApi->send_phone_verification_code: #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new SendPhoneVerificationCodeInputObject();\n\n            // Required\
          \ parameters\n            obj.Phone = \"447860021130\";\n            obj.Brand\
          \ = \"TextMagic\";\n            obj.CodeLength = 4;\n\n            // Optional\
          \ parameters, you can skip these setters calls\n            obj.Language\
          \ = \"en-gb\";\n            obj.SenderId = \"TextMagic\";\n            obj.Country\
          \ = \"US\";\n\n            try {\n                // SendPhoneVerificationCodeResponse\
          \ class object\n                var result = apiInstance.SendPhoneVerificationCode(obj);\n\
          \                // ...\n            } catch (Exception e) {\n         \
          \       Console.WriteLine(\"Exception when calling sendPhoneVerificationCode:\
          \ \"+e.Message);\n            }\n        }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ SendPhoneVerificationCodeInputObject With {\n            .Phone = \"447860021130\"\
          ,\n            .Brand = \"TextMagic\",\n            .CodeLength = 4,\n \
          \           .Language = \"en-gb\",\n            .SenderId = \"TextMagic\"\
          ,\n            .Country = \"US\"\n        }\n\n        Try\n           \
          \ ' SendPhoneVerificationCodeResponse class object\n            Dim result\
          \ = apiInstance.SendPhoneVerificationCode(obj)\n            ' ...\n    \
          \    Catch e As Exception\n            Console.WriteLine(\"Exception when\
          \ calling sendPhoneVerificationCode: \" + e.Message)\n        End Try\n\
          \    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Phone: \"447860021130\",\n    \
          \    Brand: \"TextMagic\",\n        CodeLength: 4,\n        // Optional\
          \ parameters, you can skip them\n        Language: \"en-gb\",\n        SenderId:\
          \ \"TextMagic\",\n        Country: \"US\",\n    }\n\n    // tm.SendPhoneVerificationCodeResponse\
          \ struct\n    result, _, err := client.TextMagicApi.SendPhoneVerificationCode(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        fmt.Printf(\"%+v\\n\", result)\n        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<SendPhoneVerificationCodeInputObject>\
          \ input(new SendPhoneVerificationCodeInputObject);\n    // Required parameters\n\
          \    input->setPhone(\"447860021130\");\n    input->setBrand(\"TextMagic\"\
          );\n    input->setCodeLength(4);\n    // Optional parameters, you can skip\
          \ them\n    input->setLanguage(\"en-gb\");\n    input->setSenderId(\"TextMagic\"\
          );\n    input->setCountry(\"US\");\n\n    try {\n        pplx::task<std::shared_ptr<SendPhoneVerificationCodeResponse>>\
          \ result = api.sendPhoneVerificationCode(input);\n        result.wait();\n\
          \        // put operations with result here...\n    } catch(const std::exception&\
          \ e) {\n        std::cout << \"sendPhoneVerificationCode() exception: \"\
          \ << e.what() << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.SendPhoneVerificationCodeInputObject()\n\n# Required parameters\n\
          input.phone = \"447860021130\"\ninput.brand = \"TextMagic\"\ninput.code_length\
          \ = 4\n# Optional parameters, you can skip them\ninput.language = \"en-gb\"\
          \ninput.sender_id = \"TextMagic\"\ninput.country = \"US\"\n\ntry:\n    #\
          \ SendPhoneVerificationCodeResponse object\n    result = api_instance.send_phone_verification_code(send_phone_verification_code_input_object=input)\n\
          \    # ...\nexcept ApiException as e:\n    print(\"Exception when calling\
          \ TextMagicApi->send_phone_verification_code: %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::SendPhoneVerificationCodeInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::SendPhoneVerificationCodeInputObject->new(\n\
          \    # Required parameters\n    phone => '447860021130',\n    brand => 'TextMagic',\n\
          \    codeLength => 4,\n    # Optional parameters, you can skip them\n  \
          \  language => 'en-gb',\n    senderId => 'TextMagic',\n    country => 'US',\n\
          );\n\neval {\n    # SendPhoneVerificationCodeResponse object\n    my $result\
          \ = $api_instance->send_phone_verification_code(send_phone_verification_code_input_object\
          \ => $input);\n    # ...\n};\n\nif ($@) {\n    warn \"Exception when calling\
          \ TextMagicApi->send_phone_verification_code: $@\\n\";\n}"
    put:
      tags:
      - "TextMagic"
      summary: "Step 2: Check the verification code\n"
      description: "Check received code from user with the code which was actually\
        \ sent."
      operationId: "checkPhoneVerificationCode"
      parameters:
      - in: "body"
        name: "CheckPhoneVerificationCodeInputObject"
        required: true
        schema:
          $ref: "#/definitions/CheckPhoneVerificationCodeInputObject_1"
        x-exportParamName: "CheckPhoneVerificationCodeInputObject"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Models\\;\nuse TextMagic\\Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\
          \n$config = Configuration::getDefaultConfiguration()\n    ->setUsername('YOUR_USERNAME')\n\
          \    ->setPassword('YOUR_PASSWORD');\n\n$api = new TextMagicApi(\n    new\
          \ GuzzleHttp\\Client(),\n    $config\n);\n\n$input = new CheckPhoneVerificationCodeInputObject();\n\
          \n// Required parameters\n$input->setCode(1234);\n$input->setVerifyId(\"\
          123e4567-e89b-12d3-a456-426655440000\");\n\ntry {\n    $api->checkPhoneVerificationCode($input);\n\
          } catch (Exception $e) {\n    echo 'Exception when calling TextMagicApi->checkPhoneVerificationCode:\
          \ ', $e->getMessage(), PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        CheckPhoneVerificationCodeInputObject input = new CheckPhoneVerificationCodeInputObject();\n\
          \n        // Required parameters\n        input.setCode(1234);\n       \
          \ input.setVerifyId(\"123e4567-e89b-12d3-a456-426655440000\");\n\n     \
          \   try {\n            apiInstance.checkPhoneVerificationCode(input);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling checkPhoneVerificationCode\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ input = {\n    code: 1234,\n    verifyId: \"123e4567-e89b-12d3-a456-426655440000\"\
          ,\n}\n\napi.checkPhoneVerificationCode(input).then(function (data) {\n \
          \   console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nobj = new TextMagic::CheckPhoneVerificationCodeInputObject.new\n\
          \n# Required parameters\nobj.code = 1234\nobj.verify_id = \"123e4567-e89b-12d3-a456-426655440000\"\
          \n\nbegin\n    api.check_phone_verification_code(input)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->check_phone_verification_code:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            var obj\
          \ = new CheckPhoneVerificationCodeInputObject();\n\n            // Required\
          \ parameters\n            obj.Code = 1234;\n            obj.VerifyId = \"\
          123e4567-e89b-12d3-a456-426655440000\";\n\n            try {\n         \
          \       apiInstance.CheckPhoneVerificationCode(obj);\n            } catch\
          \ (Exception e) {\n                Console.WriteLine(\"Exception when calling\
          \ checkPhoneVerificationCode: \"+e.Message);\n            }\n        }\n\
          \    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim obj = New\
          \ CheckPhoneVerificationCodeInputObject With {\n            .Code = 1234,\n\
          \            .VerifyId = \"123e4567-e89b-12d3-a456-426655440000\"\n    \
          \    }\n\n        Try\n            apiInstance.CheckPhoneVerificationCode(obj)\n\
          \            ' ...\n        Catch e As Exception\n            Console.WriteLine(\"\
          Exception when calling checkPhoneVerificationCode: \" + e.Message)\n   \
          \     End Try\n    End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n\n    input := tm.SendMessageInputObject{\n\
          \        // Required parameters\n        Code: 1234,\n        VerifyId:\
          \ \"123e4567-e89b-12d3-a456-426655440000\",\n    }\n\n    client.TextMagicApi.CheckPhoneVerificationCode(auth,\
          \ input)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::shared_ptr<CheckPhoneVerificationCodeInputObject>\
          \ input(new CheckPhoneVerificationCodeInputObject);\n    // Required parameters\n\
          \    input->setCode(1234);\n    input->setVerifyId(\"123e4567-e89b-12d3-a456-426655440000\"\
          );\n\n    try {\n        pplx::task result = api.checkPhoneVerificationCode(input);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"checkPhoneVerificationCode() exception: \" << e.what()\
          \ << '\\n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\ninput\
          \ = TextMagic.CheckPhoneVerificationCodeInputObject()\n\n# Required parameters\n\
          input.code = 1234\ninput.verify_id = \"123e4567-e89b-12d3-a456-426655440000\"\
          \n\ntry:\n    api_instance.check_phone_verification_code(check_phone_verification_code_input_object=input)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->check_phone_verification_code:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\nuse Net::Sms::TextMagicClient::Object::CheckPhoneVerificationCodeInputObject;\n\
          \nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n    username\
          \   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n    base_url\
          \  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance = Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\
          \nmy $input = Net::Sms::TextMagicClient::Object::CheckPhoneVerificationCodeInputObject->new(\n\
          \    # Required parameters\n    code => 1234,\n    verifyId => '123e4567-e89b-12d3-a456-426655440000',\n\
          );\n\neval {\n    $api_instance->check_phone_verification_code(check_phone_verification_code_input_object\
          \ => $input);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->check_phone_verification_code:\
          \ $@\\n\";\n}"
  /api/v2/verify/{verifyId}:
    delete:
      tags:
      - "TextMagic"
      summary: "Cancel verification process"
      description: "You can cancel the verification not earlier than 30 seconds after\
        \ the initial request."
      operationId: "cancelVerification"
      parameters:
      - name: "verifyId"
        in: "path"
        description: "the verifyId that you received in Step 1."
        required: true
        type: "string"
        x-example: "123e4567-e89b-12d3-a456-426655440000"
        x-exportParamName: "VerifyId"
      responses:
        204:
          $ref: "#/definitions/SuccessfulResponse"
        401:
          description: "Unauthorized request"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
      x-code-samples:
      - lang: "PHP"
        source: "require_once(__DIR__ . '/vendor/autoload.php');\n\nuse TextMagic\\\
          Api\\TextMagicApi;\nuse TextMagic\\Configuration;\n\n$config = Configuration::getDefaultConfiguration()\n\
          \    ->setUsername('YOUR_USERNAME')\n    ->setPassword('YOUR_PASSWORD');\n\
          \n$api = new TextMagicApi(\n    new GuzzleHttp\\Client(),\n    $config\n\
          );\n\n$verifyId = \"123e4567-e89b-12d3-a456-426655440000\";\n\ntry {\n \
          \   $api->cancelVerification($verifyId);\n} catch (Exception $e) {\n   \
          \ echo 'Exception when calling TextMagicApi->cancelVerification: ', $e->getMessage(),\
          \ PHP_EOL;\n}"
      - lang: "Java"
        source: "import com.textmagic.sdk.*;\nimport com.textmagic.sdk.api.TextMagicApi;\n\
          import com.textmagic.sdk.auth.*;\nimport com.textmagic.sdk.model.*;\n\n\
          public class App {\n    public static void main(String[] args) {\n     \
          \   ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n \
          \       // Configure HTTP basic authorization: BasicAuth\n        HttpBasicAuth\
          \ BasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"BasicAuth\"\
          );\n        BasicAuth.setUsername(\"YOUR_USERNAME\");\n        BasicAuth.setPassword(\"\
          YOUR_PASSWORD\");\n\n        TextMagicApi apiInstance = new TextMagicApi();\n\
          \n        String verifyId = \"123e4567-e89b-12d3-a456-426655440000\";\n\n\
          \        try {\n            apiInstance.cancelVerification(verifyId);\n\
          \        } catch (ApiException e) {\n            System.err.println(\"Exception\
          \ when calling cancelVerification\");\n            e.printStackTrace();\n\
          \        }\n    }\n}"
      - lang: "JavaScript"
        source: "const textmagicClient = require('textmagic-client');\n\nconst client\
          \ = textmagicClient.ApiClient.instance;\nconst auth = client.authentications['BasicAuth'];\n\
          const api = new textmagicClient.TextMagicApi();\n\n// put your Username\
          \ and API Key from https://my.textmagic.com/online/api/rest-api/keys page.\n\
          auth.username = 'YOUR_USERNAME';\nauth.password = 'YOUR_API_KEY';\n\nconst\
          \ verifyId = \"123e4567-e89b-12d3-a456-426655440000\";\n\napi.cancelVerification(verifyId).then(function\
          \ (data) {\n    console.log(data);\n}).catch(function(err){\n    console.error(err);\n\
          });"
      - lang: "Ruby"
        source: "require 'textmagic_rest_client'\n\n# Setup authorization\nTextMagic.configure\
          \ do |config|\n    # Configure HTTP basic authorization: BasicAuth\n   \
          \ config.username = 'YOUR_USERNAME'\n    config.password = 'YOUR_PASSWORD'\n\
          end\n\napi = TextMagic::TextMagicApi.new\n\nverify_id = '123e4567-e89b-12d3-a456-426655440000'\n\
          \nbegin\n    api.cancel_verification(verifyId)\nrescue TextMagic::ApiError\
          \ => e\n    puts \"Exception when calling TextMagicApi->cancel_verification:\
          \ #{e}\"\nend"
      - lang: "C#"
        source: "using System;\nusing System.IO;\nusing TextMagicClient.Api;\nusing\
          \ TextMagicClient.Client;\nusing TextMagicClient.Model;\n\nnamespace ExampleApp\n\
          {\n    class Program\n    {\n        static void Main(string[] args)\n \
          \       {\n            // Configure HTTP basic authorization: BasicAuth\n\
          \            Configuration.Default.Username = \"YOUR_USERNAME\";\n     \
          \       Configuration.Default.Password = \"YOUR_PASSWORD\";\n          \
          \  Configuration.Default.BasePath = \"https://rest.textmagic.com\";\n\n\
          \            var apiInstance = new TextMagicApi();\n\n            string\
          \ verifyId = \"123e4567-e89b-12d3-a456-426655440000\";\n\n            try\
          \ {\n                apiInstance.CancelVerification(verifyId);\n       \
          \     } catch (Exception e) {\n                Console.WriteLine(\"Exception\
          \ when calling cancelVerification: \"+e.Message);\n            }\n     \
          \   }\n    }\n}"
      - lang: "VB.Net"
        source: "Imports System\nImports System.IO\nImports TextMagicClient.Api\n\
          Imports TextMagicClient.Client\nImports TextMagicClient.Model\n\nModule\
          \ Program\n    Sub Main(args As String())\n        Configuration.Default.Username\
          \ = \"YOUR_USERNAME\"\n        Configuration.Default.Password = \"YOUR_PASSWORD\"\
          \n        Configuration.Default.BasePath = \"https://rest.textmagic.com\"\
          \n\n        Dim apiInstance = New TextMagicApi()\n\n        Dim verifyId\
          \ As String = \"123e4567-e89b-12d3-a456-426655440000\"\n\n        Try\n\
          \            apiInstance.CancelVerification(verifyId)\n            ' ...\n\
          \        Catch e As Exception\n            Console.WriteLine(\"Exception\
          \ when calling cancelVerification: \" + e.Message)\n        End Try\n  \
          \  End Sub\nEnd Module"
      - lang: "Go"
        source: "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/antihax/optional\"\
          \n    // If you're using go.mod use line below to import our module\n  \
          \  // \ttm \"github.com/imissyouso/textmagic-rest-go/v2\"\n    tm \"github.com/imissyouso/textmagic-rest-go\"\
          \n    \"log\"\n)\n\nfunc main() {\n    cfg := tm.NewConfiguration()\n  \
          \  cfg.BasePath = \"https://rest.textmagic.com\"\n    client := tm.NewAPIClient(cfg)\n\
          \n    auth := context.WithValue(context.Background(), tm.ContextBasicAuth,\
          \ tm.BasicAuth{\n        UserName: \"YOUR_USERNAME\",\n        Password:\
          \ \"YOUR_PASSWORD\",\n    })\n    // Required\n    var verifyId string =\
          \ \"123e4567-e89b-12d3-a456-426655440000\"\n\n    client.TextMagicApi.CancelVerification(auth,\
          \ verifyId)\n\n    if err != nil {\n        log.Fatal(err)\n    } else {\n\
          \        // ...\n    }\n}\n"
      - lang: "Cpp"
        source: "#include <iostream>\n#include <fstream>\n// Change paths to directory\
          \ where SDK lib is installed. See C++ SDK installation instructions for\
          \ more details\n#include \"textmagic-rest-cpp/ApiClient.h\"\n#include \"\
          textmagic-rest-cpp/ApiConfiguration.h\"\n#include \"textmagic-rest-cpp/api/TextMagicApi.h\"\
          \n\nusing namespace com::textmagic::client::api;\n\nint main() {\n    std::shared_ptr<ApiClient>\
          \ apiClient(new ApiClient);\n    std::shared_ptr<ApiConfiguration> apiConfig(new\
          \ ApiConfiguration);\n\n    apiConfig->setBaseUrl(\"https://rest.textmagic.com\"\
          );\n    apiConfig->getHttpConfig().set_credentials(web::credentials(\"YOUR_NAME\"\
          , \"YOUR_PASSWORD\"));\n    apiClient->setConfiguration(apiConfig);\n\n\
          \    TextMagicApi api(apiClient);\n\n    std::string verifyId = \"123e4567-e89b-12d3-a456-426655440000\"\
          ;\n\n    try {\n        pplx::task result = api.cancelVerification(verifyId);\n\
          \        result.wait();\n    } catch(const std::exception& e) {\n      \
          \  std::cout << \"cancelVerification() exception: \" << e.what() << '\\\
          n';\n    }\n\n    return 0;\n}"
      - lang: "Python"
        source: "import TextMagic\nfrom TextMagic.rest import ApiException\n\nconfiguration\
          \ = TextMagic.Configuration()\nconfiguration.host = \"https://rest.textmagic.com\"\
          \n# put your Username and API Key from https://my.textmagic.com/online/api/rest-api/keys\
          \ page.\nconfiguration.username = \"YOUR_USERNAME\"\nconfiguration.password\
          \ = \"YOUR_API_KEY\"\n\n# create an instance of the API class\napi_instance\
          \ = TextMagic.TextMagicApi(TextMagic.ApiClient(configuration))\n\nverify_id\
          \ = \"123e4567-e89b-12d3-a456-426655440000\"\n\ntry:\n    api_instance.cancel_verification(verify_id=verify_id)\n\
          except ApiException as e:\n    print(\"Exception when calling TextMagicApi->cancel_verification:\
          \ %s\\n\" % e)\n"
      - lang: "Perl"
        source: "use 5.010;\nuse strict;\nuse warnings;\nuse Net::Sms::TextMagicClient::ApiClient;\n\
          use Net::Sms::TextMagicClient::TextMagicApi;\n\nmy $client = Net::Sms::TextMagicClient::ApiClient::->new(\n\
          \    username   => 'YOUR_USERNAME',\n    password   => 'YOUR_PASSWORD',\n\
          \    base_url  => 'https://rest.textmagic.com'\n);\n\nmy $api_instance =\
          \ Net::Sms::TextMagicClient::TextMagicApi::->new($client);\n\nmy $verifyId\
          \ = '123e4567-e89b-12d3-a456-426655440000';\n\neval {\n    $api_instance->cancel_verification(verifyId\
          \ => $verifyId);\n};\n\nif ($@) {\n    warn \"Exception when calling TextMagicApi->cancel_verification:\
          \ $@\\n\";\n}"
securityDefinitions:
  BasicAuth:
    type: "basic"
definitions:
  ResourceLinkResponse:
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "integer"
        example: 1
      href:
        type: "string"
        example: "/api/v2/entity_name/1"
    example:
      id: 1
      href: "/api/v2/entity_name/1"
  SuccessfulResponse:
    description: "Request executed with success"
  NotFoundResponse:
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 404
      message:
        type: "string"
        example: "Resource does not exist"
  UnauthorizedResponse:
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 401
      message:
        type: "string"
        example: "Wrong username and token combination"
  BadRequestResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 400
      message:
        type: "string"
        example: "Error messages goes here"
      errors:
        $ref: "#/definitions/BadRequestResponse_errors"
    description: "Returned when the form has errors"
  SendPhoneVerificationCodeResponse:
    type: "object"
    required:
    - "price"
    - "verifyId"
    properties:
      verifyId:
        type: "string"
        example: "123e4567-e89b-12d3-a456-426655440000"
        description: "The ID of a verification request. This is required to finish\
          \ the verification request in the next step."
      price:
        type: "number"
        example: 0.05
        description: "Amount of credit which will be deducted from your account balance\
          \ when this verification is successfully completed."
    example:
      verifyId: "123e4567-e89b-12d3-a456-426655440000"
      price: 0.05
  PingResponse:
    type: "object"
    required:
    - "ping"
    - "utcDateTime"
    properties:
      ping:
        type: "string"
        example: "pong"
        description: "Pong."
      utcDateTime:
        type: "string"
        example: "2019-01-01T00:00:00.000Z"
        description: "Current date time"
    example:
      ping: "pong"
      utcDateTime: "2019-01-01T00:00:00.000Z"
  GetContactImportSessionProgressResponse:
    required:
    - "processed"
    - "status"
    properties:
      status:
        type: "integer"
      processed:
        type: "integer"
        example: 67
        description: "How many contacts have been imported"
    example:
      processed: 67
      status: 0
  GetAvailableSenderSettingOptionsResponse:
    type: "object"
    required:
    - "dedicated"
    - "senderIds"
    - "shared"
    - "user"
    properties:
      dedicated:
        type: "array"
        example:
        - 123456780
        - 987654321
        items:
          type: "string"
      user:
        type: "array"
        example:
        - 123456780
        - 987654321
        items:
          type: "string"
      shared:
        type: "array"
        example:
        - 123456780
        - 987654321
        items:
          type: "string"
      senderIds:
        type: "array"
        example:
        - 123456780
        - 987654321
        items:
          type: "string"
    example:
      dedicated:
      - 123456780
      - 987654321
      shared:
      - 123456780
      - 987654321
      senderIds:
      - 123456780
      - 987654321
      user:
      - 123456780
      - 987654321
  GetVersionsResponse:
    type: "object"
    required:
    - "android"
    - "desktop"
    - "ios"
    properties:
      ios:
        type: "integer"
        example: 1
      android:
        type: "integer"
        example: 2
      desktop:
        type: "integer"
        example: 3
    example:
      desktop: 3
      android: 2
      ios: 1
  DoAuthResponse:
    required:
    - "disallowedRules"
    - "expires"
    - "minVersions"
    - "token"
    - "username"
    properties:
      username:
        type: "string"
        example: "test"
      token:
        type: "string"
        example: "fPTUUKQ4Dvaq9l9ZQQgsLO1HfSR0K4"
      expires:
        type: "string"
        format: "date-time"
        x-nullable: true
      minVersions:
        $ref: "#/definitions/DoAuthResponse_minVersions"
      disallowedRules:
        type: "array"
        example:
        - "SEND_MESSAGES"
        - "MAKE_CALLS"
        - "EMAIL_LOOKUP"
        items:
          type: "string"
    example:
      disallowedRules:
      - "SEND_MESSAGES"
      - "MAKE_CALLS"
      - "EMAIL_LOOKUP"
      expires: "2000-01-23T04:56:07.000+00:00"
      minVersions:
        desktop: 0
        android: 0
        ios: 0
      username: "test"
      token: "fPTUUKQ4Dvaq9l9ZQQgsLO1HfSR0K4"
  GetCallbackSettingsResponse:
    required:
    - "format"
    - "inUrl"
    - "outUrl"
    properties:
      outUrl:
        type: "string"
        example: "http://www.mysite.com/delivery-callback.php"
        description: "This URL is used to push message delivery status updates to\
          \ your application."
        x-nullable: true
      inUrl:
        type: "string"
        example: "http://www.mysite.com/incoming-sms-callback.php"
        description: "This URL is used to push incoming SMS to your application."
        x-nullable: true
      format:
        type: "string"
        description: "Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded,\
          \ j - application/json"
        enum:
        - "m"
        - "u"
        - "j"
    example:
      inUrl: "http://www.mysite.com/incoming-sms-callback.php"
      outUrl: "http://www.mysite.com/delivery-callback.php"
      format: "m"
  GetInboundMessagesNotificationSettingsResponse:
    required:
    - "alertEmail1"
    - "alertEmail2"
    - "alertEmail3"
    - "forwardedCallNotification"
    - "inboundMessageNotification"
    - "includeSmsHistory"
    - "sendInHtmlFormat"
    properties:
      inboundMessageNotification:
        type: "boolean"
        example: true
        description: "Should user receive notification about new incoming messages"
      forwardedCallNotification:
        type: "boolean"
        example: true
        description: "Should user receive notification about new forwarded calls"
      includeSmsHistory:
        type: "boolean"
        example: true
        description: "Include SMS history into notification Email"
      sendInHtmlFormat:
        type: "boolean"
        example: true
        description: "Send Email notification in HTML format"
      alertEmail1:
        type: "string"
        example: "test@test.com"
        description: "New message notification email 2"
      alertEmail2:
        type: "string"
        example: "test@test.com"
        description: "New message notification email 2"
      alertEmail3:
        type: "string"
        example: "test@test.com"
        description: "New message notification email 3"
    example:
      sendInHtmlFormat: true
      alertEmail1: "test@test.com"
      forwardedCallNotification: true
      alertEmail2: "test@test.com"
      includeSmsHistory: true
      alertEmail3: "test@test.com"
      inboundMessageNotification: true
  DoCarrierLookupResponse:
    type: "object"
    required:
    - "carrier"
    - "cost"
    - "local"
    - "number164"
    - "type"
    - "valid"
    properties:
      cost:
        type: "number"
        example: 0.04
      country:
        $ref: "#/definitions/Country"
      local:
        type: "string"
        example: "(541) 754-3010"
      type:
        type: "string"
        example: "mobile"
      carrier:
        type: "string"
        example: "Example Messaging Systems"
      number164:
        type: "string"
        example: "+15417543010"
      valid:
        type: "boolean"
        example: true
    example:
      valid: true
      country:
        name: "India"
        id: "US"
      number164: "+15417543010"
      carrier: "Example Messaging Systems"
      cost: 0.04
      type: "mobile"
      local: "(541) 754-3010"
  UpdateCurrentUserResponse:
    properties:
      username:
        type: "string"
        example: "Test"
      firstName:
        type: "string"
        example: "Test"
      lastName:
        type: "string"
        example: "Test"
      email:
        type: "string"
        example: "test@test.com"
      phone:
        type: "string"
        example: "79030011222"
      company:
        type: "string"
        example: "Dummy company"
      timezone:
        type: "integer"
        example: 2
        description: "timezone id"
    example:
      firstName: "Test"
      lastName: "Test"
      phone: "79030011222"
      timezone: 2
      company: "Dummy company"
      email: "test@test.com"
      username: "Test"
  GetContactsAutocompleteResponse:
    type: "array"
    items:
      $ref: "#/definitions/GetContactsAutocompleteResponse"
  DoEmailLookupResponse:
    type: "object"
    required:
    - "address"
    - "addressType"
    - "deliverability"
    - "domainPart"
    - "emailRole"
    - "exchange"
    - "hasAa"
    - "hasAaaa"
    - "hasMx"
    - "isDisposableAddress"
    - "isInBlackList"
    - "isInWhiteList"
    - "localPart"
    - "preference"
    - "reason"
    - "risk"
    - "status"
    - "suggestion"
    properties:
      address:
        type: "string"
        format: "email"
        example: "manager@company.com"
      addressType:
        type: "string"
        example: "corporate"
      emailRole:
        type: "string"
        example: "manager"
        x-nullable: true
      reason:
        type: "string"
        example: "Requested Mailbox does not exist"
        x-nullable: true
      status:
        type: "string"
        enum:
        - "valid"
        - "invalid"
      deliverability:
        type: "string"
        example: "undeliverable"
      isDisposableAddress:
        type: "boolean"
        example: false
      localPart:
        type: "string"
        example: "manager"
      domainPart:
        type: "string"
        example: "test.com"
      exchange:
        type: "string"
        example: "mx01.xworks.net"
      isInWhiteList:
        type: "boolean"
        example: false
      isInBlackList:
        type: "boolean"
        example: false
      hasMx:
        type: "boolean"
        example: true
      hasAa:
        type: "boolean"
        example: true
      hasAaaa:
        type: "boolean"
        example: true
      risk:
        type: "string"
        example: "high"
      preference:
        type: "integer"
        example: 10
      suggestion:
        type: "string"
        example: "account-manager@company.com"
        x-nullable: true
    example:
      deliverability: "undeliverable"
      reason: "Requested Mailbox does not exist"
      hasMx: true
      address: "manager@company.com"
      addressType: "corporate"
      isInBlackList: false
      preference: 10
      suggestion: "account-manager@company.com"
      domainPart: "test.com"
      emailRole: "manager"
      isDisposableAddress: false
      localPart: "manager"
      isInWhiteList: false
      exchange: "mx01.xworks.net"
      risk: "high"
      hasAaaa: true
      hasAa: true
      status: "valid"
  GetMessagingStatResponse: {}
  GetSenderSettingsResponse:
    type: "object"
    required:
    - "other"
    - "special"
    - "user"
    properties:
      user:
        type: "object"
        example:
          GB: "447520633183"
        properties: {}
      special:
        type: "object"
        example:
          US: null
          CA: null
          FR: "Test sender id"
        properties: {}
      other:
        type: "object"
        example:
          AF: "447624800500"
          AL: "447624800500"
          AU: "61428102137"
          AT: "447624800500"
          BE: "447624800500"
          CL: "447624800500"
          CR: "447624800500"
          HR: "447624800500"
          CZ: "447624800500"
          DK: "4592450490"
          EE: "447624800500"
          FI: "3584573950033"
          DE: "491771781422"
          HK: "447624800500"
          HU: "447624800500"
          ID: "447624800500"
          IE: "447624800500"
          IL: "447624800500"
        properties: {}
    example:
      special:
        US: null
        CA: null
        FR: "Test sender id"
      other:
        AF: "447624800500"
        AL: "447624800500"
        AU: "61428102137"
        AT: "447624800500"
        BE: "447624800500"
        CL: "447624800500"
        CR: "447624800500"
        HR: "447624800500"
        CZ: "447624800500"
        DK: "4592450490"
        EE: "447624800500"
        FI: "3584573950033"
        DE: "491771781422"
        HK: "447624800500"
        HU: "447624800500"
        ID: "447624800500"
        IE: "447624800500"
        IL: "447624800500"
      user:
        GB: "447520633183"
  GetAvailableDedicatedNumbersResponse:
    type: "object"
    required:
    - "numbers"
    - "price"
    properties:
      numbers:
        type: "array"
        example:
        - 18887777773
        - 18887777775
        items:
          type: "string"
      price:
        type: "number"
        format: "float"
        example: 2.4
    example:
      price: 2.4
      numbers:
      - 18887777773
      - 18887777775
  GetSubaccountsWithTokensResponse: {}
  GetPushTokensResponse: {}
  GetSurveyNodesResponse:
    required:
    - "nodes"
    - "rows"
    properties:
      nodes: {}
      rows: {}
    example:
      nodes: ""
      rows: ""
  GetBalanceNotificationOptionsResponse:
    required:
    - "1"
    - "10"
    - "100"
    - "1000"
    - "2"
    - "20"
    - "3"
    - "30"
    - "5"
    - "50"
    - "500"
    properties:
      1:
        type: "string"
        example: "£1.00"
        description: "Contains sign of currency in Unicode hex code"
      2:
        type: "string"
        example: "£2.00"
        description: "Contains sign of currency in Unicode hex code"
      3:
        type: "string"
        example: "£3.00"
        description: "Contains sign of currency in Unicode hex code"
      5:
        type: "string"
        example: "£5.00"
        description: "Contains sign of currency in Unicode hex code"
      10:
        type: "string"
        example: "£10.00"
        description: "Contains sign of currency in Unicode hex code"
      20:
        type: "string"
        example: "£20.00"
        description: "Contains sign of currency in Unicode hex code"
      30:
        type: "string"
        example: "£30.00"
        description: "Contains sign of currency in Unicode hex code"
      50:
        type: "string"
        example: "£50.00"
        description: "Contains sign of currency in Unicode hex code"
      100:
        type: "string"
        example: "£100.00"
        description: "Contains sign of currency in Unicode hex code"
      500:
        type: "string"
        example: "£500.00"
        description: "Contains sign of currency in Unicode hex code"
      1000:
        type: "string"
        example: "£1,000.00"
        description: "Contains sign of currency in Unicode hex code"
    example:
      1: "£1.00"
      100: "£100.00"
      2: "£2.00"
      3: "£3.00"
      5: "£5.00"
      500: "£500.00"
      1000: "£1,000.00"
      50: "£50.00"
      30: "£30.00"
      20: "£20.00"
      10: "£10.00"
  GetBalanceNotificationSettingsResponse:
    required:
    - "alertBalance"
    - "alertEmail1"
    - "alertEmail2"
    - "alertEmail3"
    - "alertPhone"
    - "lowBalanceNotification"
    properties:
      lowBalanceNotification:
        type: "boolean"
        example: true
        description: "Should user receive low balance notification"
      alertBalance:
        type: "string"
        example: "50"
        description: "If balance is below this value, user receive low balance notification"
      alertPhone:
        type: "string"
        example: "15417543010"
        description: "Low balance notification phone number"
      alertEmail1:
        type: "string"
        example: "test@test.com"
        description: "Low balance notification email 1"
      alertEmail2:
        type: "string"
        example: "test@test.com"
        description: "Low balance notification email 2"
      alertEmail3:
        type: "string"
        example: "test@test.com"
        description: "Low balance notification email 3"
    example:
      alertBalance: "50"
      alertPhone: "15417543010"
      alertEmail1: "test@test.com"
      alertEmail2: "test@test.com"
      alertEmail3: "test@test.com"
      lowBalanceNotification: true
  GetListContactsIdsResponse: {}
  GetMessagePriceResponse:
    required:
    - "countries"
    - "parts"
    - "total"
    properties:
      total:
        type: "number"
        example: 0.08
      parts:
        type: "integer"
        example: 2
      countries:
        type: "object"
        example:
          GB:
            country: "GB"
            country_name: "United Kingdom"
            allow_dedicated: true
            count: 2
            max: 0.04
            sum: 0.08
            landline: 0
        properties: {}
    example:
      total: 0.08
      parts: 2
      countries:
        GB:
          country: "GB"
          country_name: "United Kingdom"
          allow_dedicated: true
          count: 2
          max: 0.04
          sum: 0.08
          landline: 0
  GetMessagePreviewResponse:
    properties:
      messages:
        type: "array"
        items:
          $ref: "#/definitions/MessageOut"
    example:
      messages:
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
  SendMessageResponse:
    required:
    - "bulkId"
    - "chatId"
    - "href"
    - "id"
    - "messageId"
    - "scheduleId"
    - "sessionId"
    - "type"
    properties:
      id:
        type: "integer"
        example: 10489
      href:
        type: "string"
        example: "/api/v2/sessions/10489"
      type:
        type: "string"
        example: "session"
      sessionId:
        type: "integer"
        example: 10489
        x-nullable: true
      bulkId:
        type: "integer"
        example: "null"
        x-nullable: true
      messageId:
        type: "integer"
        example: "null"
        x-nullable: true
      scheduleId:
        type: "integer"
        example: "null"
        x-nullable: true
      chatId:
        type: "integer"
        example: "null"
        x-nullable: true
    example:
      bulkId: "null"
      chatId: "null"
      messageId: "null"
      id: 10489
      href: "/api/v2/sessions/10489"
      sessionId: 10489
      type: "session"
      scheduleId: "null"
  GetMessageSessionStatResponse:
    required:
    - "accepted"
    - "all"
    - "delivered"
    - "failed"
    - "rejected"
    - "scheduled"
    - "sent"
    properties:
      failed:
        type: "integer"
        example: 1
      delivered:
        type: "integer"
        example: 1
      accepted:
        type: "integer"
        example: 1
      rejected:
        type: "integer"
        example: 1
      scheduled:
        type: "integer"
        example: 1
      all:
        type: "integer"
        example: 1
      sent:
        type: "integer"
        example: 1
    example:
      all: 1
      rejected: 1
      scheduled: 1
      accepted: 1
      delivered: 1
      failed: 1
      sent: 1
  GetMessagingCountersResponse:
    required:
    - "contacts"
    - "received"
    - "sent"
    properties:
      contacts:
        type: "integer"
        example: 10
      sent:
        type: "integer"
        example: 10
      received:
        type: "integer"
        example: 10
    example:
      received: 10
      sent: 10
      contacts: 10
  GetUnreadMessagesTotalResponse:
    required:
    - "total"
    properties:
      total:
        type: "integer"
        example: 1
    example:
      total: 1
  UploadMessageAttachmentResponse:
    required:
    - "chars"
    - "href"
    - "name"
    - "size"
    properties:
      chars:
        type: "integer"
        example: 10
      href:
        type: "string"
        example: "click/So4LP"
      name:
        type: "string"
        example: "test.pdf"
      size:
        type: "integer"
        example: 32640
  GetMessagePricesResponse:
    example:
      VU:
        name: "Vanuatu"
        price: "0.065"
      VE:
        name: "Venezuela"
        price: "0.035"
      VN:
        name: "Vietnam"
        price: "0.045"
      VG:
        name: "Virgin Islands"
        price: "0.04"
      VI:
        name: "Virgin Islands US"
        price: "0.04"
      YE:
        name: "Yemen"
        price: "0.03"
      ZM:
        name: "Zambia"
        price: "0.04"
      ZW:
        name: "Zimbabwe"
        price: "0.04"
  GetStateResponse:
    required:
    - "callFinished"
    - "chatCacheClear"
    - "chatClosed"
    - "chatCreated"
    - "chatDeleted"
    - "chatMarkedAsRead"
    - "chatMuted"
    - "chatReopened"
    - "chatUnmuted"
    - "contactAdded"
    - "contactCacheClear"
    - "contactDeleted"
    - "contactImportEnd"
    - "contactStateChanged"
    - "contactWipeEnd"
    - "customFieldsCacheClear"
    - "listAdded"
    - "listCacheClear"
    - "listDeleted"
    - "listStateChanged"
    - "messageBulkEnd"
    - "messageCacheClear"
    - "messageDeleted"
    - "messageIncoming"
    - "messageIncomingCacheClear"
    - "messageIncomingDeleted"
    - "messageScheduleAdded"
    - "messageScheduleCacheClear"
    - "messageScheduleDeleted"
    - "messageScheduleStateChanged"
    - "messageSent"
    - "messageSessionDeleted"
    - "messageStateChanged"
    - "messageTemplateCacheClear"
    - "messageWipeEnd"
    - "systemAccountStateChanged"
    - "systemAlert"
    - "systemCacheClear"
    - "systemExit"
    properties:
      systemCacheClear:
        type: "integer"
        example: 1
      systemExit:
        type: "integer"
        example: 1
      systemAlert:
        type: "integer"
        example: 1
      systemAccountStateChanged:
        type: "integer"
        example: 1
      messageDeleted:
        type: "integer"
        example: 1
      messageIncoming:
        type: "integer"
        example: 1
      messageIncomingDeleted:
        type: "integer"
        example: 1
      messageStateChanged:
        type: "integer"
        example: 1
      messageBulkEnd:
        type: "integer"
        example: 1
      messageWipeEnd:
        type: "integer"
        example: 1
      messageSent:
        type: "integer"
        example: 1
      messageSessionDeleted:
        type: "integer"
        example: 1
      messageCacheClear:
        type: "integer"
        example: 1
      messageIncomingCacheClear:
        type: "integer"
        example: 1
      messageScheduleAdded:
        type: "integer"
        example: 1
      messageScheduleStateChanged:
        type: "integer"
        example: 1
      messageScheduleDeleted:
        type: "integer"
        example: 1
      messageScheduleCacheClear:
        type: "integer"
        example: 1
      messageTemplateCacheClear:
        type: "integer"
        example: 1
      callFinished:
        type: "integer"
        example: 1
      chatCreated:
        type: "integer"
        example: 1
      chatMarkedAsRead:
        type: "integer"
        example: 1
      chatMuted:
        type: "integer"
        example: 1
      chatUnmuted:
        type: "integer"
        example: 1
      chatDeleted:
        type: "integer"
        example: 1
      chatClosed:
        type: "integer"
        example: 1
      chatReopened:
        type: "integer"
        example: 1
      chatCacheClear:
        type: "integer"
        example: 1
      contactAdded:
        type: "integer"
        example: 1
      contactDeleted:
        type: "integer"
        example: 1
      contactStateChanged:
        type: "integer"
        example: 1
      listAdded:
        type: "integer"
        example: 1
      listDeleted:
        type: "integer"
        example: 1
      listStateChanged:
        type: "integer"
        example: 1
      contactWipeEnd:
        type: "integer"
        example: 1
      contactImportEnd:
        type: "integer"
        example: 1
      contactCacheClear:
        type: "integer"
        example: 1
      listCacheClear:
        type: "integer"
        example: 1
      customFieldsCacheClear:
        type: "integer"
        example: 1
    example:
      chatDeleted: 1
      contactCacheClear: 1
      systemCacheClear: 1
      systemAccountStateChanged: 1
      messageSent: 1
      chatCacheClear: 1
      contactStateChanged: 1
      messageScheduleDeleted: 1
      messageDeleted: 1
      listStateChanged: 1
      messageTemplateCacheClear: 1
      listCacheClear: 1
      callFinished: 1
      listDeleted: 1
      contactDeleted: 1
      listAdded: 1
      messageScheduleAdded: 1
      messageScheduleCacheClear: 1
      messageStateChanged: 1
      chatMuted: 1
      messageIncoming: 1
      messageBulkEnd: 1
      chatUnmuted: 1
      messageIncomingCacheClear: 1
      systemExit: 1
      messageIncomingDeleted: 1
      chatMarkedAsRead: 1
      messageWipeEnd: 1
      messageScheduleStateChanged: 1
      customFieldsCacheClear: 1
      messageSessionDeleted: 1
      chatCreated: 1
      contactImportEnd: 1
      contactWipeEnd: 1
      chatClosed: 1
      systemAlert: 1
      messageCacheClear: 1
      contactAdded: 1
      chatReopened: 1
  User:
    type: "object"
    required:
    - "avatar"
    - "balance"
    - "company"
    - "country"
    - "currency"
    - "email"
    - "emailAccepted"
    - "firstName"
    - "id"
    - "lastName"
    - "phone"
    - "phoneAccepted"
    - "status"
    - "subaccountType"
    - "timezone"
    - "username"
    properties:
      id:
        type: "integer"
        example: 1
      username:
        type: "string"
        example: "Test"
      firstName:
        type: "string"
        example: "Test"
      lastName:
        type: "string"
        example: "Test"
      email:
        type: "string"
        example: "test@test.com"
      status:
        type: "string"
        example: "A"
      balance:
        type: "number"
        example: 100.0
      phone:
        type: "string"
        example: "79030011222"
        x-nullable: true
      company:
        type: "string"
        example: "Dummy company"
        x-nullable: true
      currency:
        $ref: "#/definitions/Currency"
      country:
        $ref: "#/definitions/Country"
      timezone:
        $ref: "#/definitions/Timezone"
      subaccountType:
        type: "string"
        example: "P"
      emailAccepted:
        type: "boolean"
        example: true
      phoneAccepted:
        type: "boolean"
        example: true
      avatar:
        $ref: "#/definitions/UserImage"
    example:
      emailAccepted: true
      lastName: "Test"
      country:
        name: "India"
        id: "US"
      subaccountType: "P"
      timezone:
        area: "Europe"
        dst: 1
        offset: 10800
        timezone: "Europe\\/Tallinn"
        id: 55
      phoneAccepted: true
      avatar:
        href: "https://dummylogos.com/logo.png"
      firstName: "Test"
      balance: 100.0
      phone: "79030011222"
      company: "Dummy company"
      currency:
        htmlSymbol: "&pound;"
        unicodeSymbol: "£"
        id: "GBP"
      id: 1
      email: "test@test.com"
      username: "Test"
      status: "A"
  UsersInbound:
    type: "object"
    required:
    - "country"
    - "expireAt"
    - "id"
    - "purchasedAt"
    - "status"
    - "user"
    properties:
      id:
        type: "integer"
        example: 1
      user:
        $ref: "#/definitions/User"
      purchasedAt:
        type: "string"
        format: "date-time"
      expireAt:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        example: "U"
        description: "A - active, in use (at least one message was sent/received from/to\
          \ this number), U - never used before"
        enum:
        - "U"
        - "A"
      country:
        $ref: "#/definitions/Country"
      phone:
        type: "string"
        example: "79030011222"
    example:
      country:
        name: "India"
        id: "US"
      phone: "79030011222"
      purchasedAt: "2000-01-23T04:56:07.000+00:00"
      id: 1
      expireAt: "2000-01-23T04:56:07.000+00:00"
      user:
        emailAccepted: true
        lastName: "Test"
        country:
          name: "India"
          id: "US"
        subaccountType: "P"
        timezone:
          area: "Europe"
          dst: 1
          offset: 10800
          timezone: "Europe\\/Tallinn"
          id: 55
        phoneAccepted: true
        avatar:
          href: "https://dummylogos.com/logo.png"
        firstName: "Test"
        balance: 100.0
        phone: "79030011222"
        company: "Dummy company"
        currency:
          htmlSymbol: "&pound;"
          unicodeSymbol: "£"
          id: "GBP"
        id: 1
        email: "test@test.com"
        username: "Test"
        status: "A"
      status: "U"
  SenderId:
    type: "object"
    required:
    - "id"
    - "senderId"
    - "status"
    - "user"
    properties:
      id:
        type: "integer"
        example: 332
      senderId:
        type: "string"
        example: "Dummy sender id"
      user:
        $ref: "#/definitions/User"
      status:
        type: "string"
        example: "A"
        description: "A - accepted, R - rejected, P - pending"
        enum:
        - "A"
        - "R"
        - "P"
    example:
      senderId: "Dummy sender id"
      id: 332
      user:
        emailAccepted: true
        lastName: "Test"
        country:
          name: "India"
          id: "US"
        subaccountType: "P"
        timezone:
          area: "Europe"
          dst: 1
          offset: 10800
          timezone: "Europe\\/Tallinn"
          id: 55
        phoneAccepted: true
        avatar:
          href: "https://dummylogos.com/logo.png"
        firstName: "Test"
        balance: 100.0
        phone: "79030011222"
        company: "Dummy company"
        currency:
          htmlSymbol: "&pound;"
          unicodeSymbol: "£"
          id: "GBP"
        id: 1
        email: "test@test.com"
        username: "Test"
        status: "A"
      status: "A"
  Contact:
    type: "object"
    required:
    - "avatar"
    - "blocked"
    - "companyName"
    - "country"
    - "customFields"
    - "email"
    - "favorited"
    - "firstName"
    - "id"
    - "lastName"
    - "lists"
    - "notes"
    - "phone"
    - "phoneType"
    - "user"
    properties:
      id:
        type: "integer"
        example: 224
      favorited:
        type: "boolean"
        example: true
      blocked:
        type: "boolean"
        example: true
      firstName:
        type: "string"
        example: "Test first name"
        x-nullable: true
      lastName:
        type: "string"
        example: "Test last name"
        x-nullable: true
      companyName:
        type: "string"
        example: "Test company name"
        x-nullable: true
      phone:
        type: "string"
        example: "79030011222"
        x-nullable: true
      email:
        type: "string"
        format: "email"
        example: "test@test.com"
        x-nullable: true
      country:
        $ref: "#/definitions/Country"
      customFields:
        type: "array"
        items:
          $ref: "#/definitions/ContactCustomField"
      user:
        $ref: "#/definitions/User"
      lists:
        type: "array"
        items:
          $ref: "#/definitions/Group"
      phoneType:
        type: "string"
        x-nullable: true
      avatar:
        $ref: "#/definitions/ContactImage"
      notes:
        type: "array"
        items:
          $ref: "#/definitions/ContactNote"
    example:
      lastName: "Test last name"
      country:
        name: "India"
        id: "US"
      phoneType: "phoneType"
      notes:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        note: "Test note"
        id: 5
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        note: "Test note"
        id: 5
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
      customFields:
      - userCustomField:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "My new custom field"
          id: 23
        value: "value"
      - userCustomField:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "My new custom field"
          id: 23
        value: "value"
      companyName: "Test company name"
      avatar:
        href: "href"
      firstName: "Test first name"
      blocked: true
      phone: "79030011222"
      lists:
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      id: 224
      user:
        emailAccepted: true
        lastName: "Test"
        country:
          name: "India"
          id: "US"
        subaccountType: "P"
        timezone:
          area: "Europe"
          dst: 1
          offset: 10800
          timezone: "Europe\\/Tallinn"
          id: 55
        phoneAccepted: true
        avatar:
          href: "https://dummylogos.com/logo.png"
        firstName: "Test"
        balance: 100.0
        phone: "79030011222"
        company: "Dummy company"
        currency:
          htmlSymbol: "&pound;"
          unicodeSymbol: "£"
          id: "GBP"
        id: 1
        email: "test@test.com"
        username: "Test"
        status: "A"
      email: "test@test.com"
      favorited: true
    x-nullable: true
  UserCustomField:
    type: "object"
    required:
    - "createdAt"
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        example: 23
      name:
        type: "string"
        example: "My new custom field"
      createdAt:
        type: "string"
        format: "date-time"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      name: "My new custom field"
      id: 23
  Group:
    type: "object"
    required:
    - "avatar"
    - "description"
    - "favorited"
    - "id"
    - "isDefault"
    - "membersCount"
    - "name"
    - "service"
    - "shared"
    - "user"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "Test group"
      description:
        type: "string"
        example: "Test group description"
        x-nullable: true
      favorited:
        type: "boolean"
        example: false
      membersCount:
        type: "integer"
        example: 10
      user:
        $ref: "#/definitions/User"
      service:
        type: "boolean"
      shared:
        type: "boolean"
        x-nullable: true
      avatar:
        $ref: "#/definitions/GroupImage"
      isDefault:
        type: "boolean"
        x-nullable: true
    example:
      shared: true
      membersCount: 10
      isDefault: true
      service: true
      name: "Test group"
      description: "Test group description"
      id: 1
      avatar:
        href: "href"
      user:
        emailAccepted: true
        lastName: "Test"
        country:
          name: "India"
          id: "US"
        subaccountType: "P"
        timezone:
          area: "Europe"
          dst: 1
          offset: 10800
          timezone: "Europe\\/Tallinn"
          id: 55
        phoneAccepted: true
        avatar:
          href: "https://dummylogos.com/logo.png"
        firstName: "Test"
        balance: 100.0
        phone: "79030011222"
        company: "Dummy company"
        currency:
          htmlSymbol: "&pound;"
          unicodeSymbol: "£"
          id: "GBP"
        id: 1
        email: "test@test.com"
        username: "Test"
        status: "A"
      favorited: false
  UnsubscribedContact:
    type: "object"
    required:
    - "firstName"
    - "id"
    - "lastName"
    - "phone"
    - "unsubscribeTime"
    properties:
      id:
        type: "integer"
        example: 1
      phone:
        type: "string"
        example: "+1386673549434"
      unsubscribeTime:
        type: "string"
        format: "date-time"
      firstName:
        type: "string"
        example: "Test fist name"
        x-nullable: true
      lastName:
        type: "string"
        example: "Test last name"
        x-nullable: true
    example:
      firstName: "Test fist name"
      lastName: "Test last name"
      phone: "+1386673549434"
      unsubscribeTime: "2000-01-23T04:56:07.000+00:00"
      id: 1
  ContactNote:
    type: "object"
    required:
    - "createdAt"
    - "id"
    - "note"
    - "user"
    properties:
      id:
        type: "integer"
        example: 5
      createdAt:
        type: "string"
        format: "date-time"
      note:
        type: "string"
        example: "Test note"
      user:
        $ref: "#/definitions/User"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      note: "Test note"
      id: 5
      user:
        emailAccepted: true
        lastName: "Test"
        country:
          name: "India"
          id: "US"
        subaccountType: "P"
        timezone:
          area: "Europe"
          dst: 1
          offset: 10800
          timezone: "Europe\\/Tallinn"
          id: 55
        phoneAccepted: true
        avatar:
          href: "https://dummylogos.com/logo.png"
        firstName: "Test"
        balance: 100.0
        phone: "79030011222"
        company: "Dummy company"
        currency:
          htmlSymbol: "&pound;"
          unicodeSymbol: "£"
          id: "GBP"
        id: 1
        email: "test@test.com"
        username: "Test"
        status: "A"
  MessageTemplate:
    type: "object"
    required:
    - "content"
    - "id"
    - "lastModified"
    - "name"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "This is test template name"
      content:
        type: "string"
        example: "This is test template content"
      lastModified:
        type: "string"
        format: "date-time"
        x-nullable: true
    example:
      name: "This is test template name"
      id: 1
      lastModified: "2000-01-23T04:56:07.000+00:00"
      content: "This is test template content"
  MessageOut:
    type: "object"
    required:
    - "avatar"
    - "charset"
    - "charsetLabel"
    - "contactId"
    - "country"
    - "firstName"
    - "id"
    - "lastName"
    - "messageTime"
    - "partsCount"
    - "sessionId"
    - "status"
    - "text"
    properties:
      id:
        type: "integer"
        example: 4991
        description: "Message ID."
      sender:
        type: "string"
        example: "447624800500"
        description: "Message sender (phone number or alphanumeric Sender ID)."
        x-nullable: true
      receiver:
        type: "string"
        example: "447860021130"
        description: "Recipient phone number."
      text:
        type: "string"
        example: "I love TextMagic!"
      status:
        type: "string"
        example: "d"
        description: "Delivery status of the message.\n@TODO: Please see the table\
          \ below to see different delivery statuses.\n"
        enum:
        - "q"
        - "s"
        - "e"
        - "r"
        - "a"
        - "d"
        - "b"
        - "f"
        - "u"
        - "j"
        - "i"
        - "p"
        - "h"
      contactId:
        type: "integer"
        example: 1
        x-nullable: true
      sessionId:
        type: "integer"
        example: 1
        x-nullable: true
      messageTime:
        type: "string"
        format: "date-time"
        example: "2019-08-12T11:43:37+0000"
        description: "Sending time."
      avatar:
        type: "string"
        example: "avatars/dummy_avatar.png"
        x-nullable: true
      deleted:
        type: "boolean"
        example: false
      charset:
        type: "string"
        example: "ISO-8859-1"
        description: "Message charset. Could be:\n*   **ISO-8859-1** for plaintext\
          \ SMS\n*   **UTF-16BE** for Unicode SMS\n"
        x-nullable: true
      charsetLabel:
        type: "string"
        example: "ISO-8859-1"
        x-nullable: true
      firstName:
        type: "string"
        example: "John"
        description: "@TODO: Contact first name. Could be substituted from your [Contacts](/docs/api/contacts/)\
          \ (even if you submitted phone number instead of contact ID).\n"
        x-nullable: true
      lastName:
        type: "string"
        example: "Conway"
        description: "Contact last name."
        x-nullable: true
      country:
        type: "string"
        example: "US"
        description: "Two-letter ISO country code of the recipient phone number.\n"
        x-nullable: true
      phone:
        type: "string"
        example: "447624800500"
        x-nullable: true
      price:
        type: "number"
        format: "float"
        example: 0.025
        x-nullable: true
      partsCount:
        type: "integer"
        example: 1
        description: "Message parts (multiples of 160 characters) count."
        x-nullable: true
      fromEmail:
        type: "string"
        example: "test@email.com"
        x-nullable: true
      fromNumber:
        type: "string"
        example: "447624800500"
        x-nullable: true
      smscId:
        type: "string"
        example: "1"
        x-nullable: true
      contact:
        type: "string"
        x-nullable: true
      source:
        type: "string"
        example: "1"
        x-nullable: true
      deliveredCount:
        type: "integer"
        x-nullable: true
      numbersCount:
        type: "integer"
        x-nullable: true
      userId:
        type: "integer"
        x-nullable: true
      creditsPrice:
        type: "string"
        x-nullable: true
      chars:
        type: "integer"
        x-nullable: true
    example:
      messageTime: "2019-08-12T11:43:37+0000"
      charset: "ISO-8859-1"
      lastName: "Conway"
      country: "US"
      partsCount: 1
      creditsPrice: "creditsPrice"
      source: "1"
      fromEmail: "test@email.com"
      price: 0.025
      smscId: "1"
      contact: "contact"
      id: 4991
      text: "I love TextMagic!"
      receiver: "447860021130"
      contactId: 1
      sessionId: 1
      avatar: "avatars/dummy_avatar.png"
      userId: 1
      fromNumber: "447624800500"
      firstName: "John"
      deleted: false
      numbersCount: 6
      sender: "447624800500"
      phone: "447624800500"
      deliveredCount: 0
      charsetLabel: "ISO-8859-1"
      chars: 5
      status: "d"
  MessagesIcs:
    type: "object"
    required:
    - "avatar"
    - "completed"
    - "contactName"
    - "createdAt"
    - "firstOccurrence"
    - "id"
    - "lastOccurrence"
    - "lastSent"
    - "nextSend"
    - "parameters"
    - "recipientsCount"
    - "rrule"
    - "session"
    - "summary"
    - "textParameters"
    - "timezone"
    - "type"
    properties:
      id:
        type: "integer"
        example: 562
        description: "Schedule ID."
      nextSend:
        type: "string"
        format: "date-time"
        example: "2014-10-13T05:00:00+0000"
        description: "Next send date in [ISO 8601](https://en.wikipedia.org/?title=ISO_8601)\
          \ format.\n"
      rrule:
        type: "string"
        example: "FREQ=DAILY;INTERVAL=2;COUNT=5;"
        description: "[iCal RRULE](http://www.kanzaki.com/docs/ical/rrule.html) string.\n"
        x-nullable: true
      session:
        $ref: "#/definitions/MessageSession"
      lastSent:
        type: "string"
        format: "date-time"
        x-nullable: true
      contactName:
        type: "string"
        example: "Test contact name"
      parameters:
        $ref: "#/definitions/MessagesIcs_parameters"
      type:
        type: "string"
        example: "once"
      summary:
        type: "string"
        example: "once"
      textParameters:
        $ref: "#/definitions/MessagesIcs_textParameters"
      firstOccurrence:
        type: "string"
        format: "date-time"
        example: "2019-08-13T05:48:37.486Z"
        x-nullable: true
      lastOccurrence:
        type: "string"
        format: "date-time"
        example: "2019-09-13T05:48:37.486Z"
        x-nullable: true
      recipientsCount:
        type: "integer"
        example: 2
        x-nullable: true
      timezone:
        type: "string"
        example: "Europe/Tallinn"
      completed:
        type: "boolean"
        example: true
      avatar:
        type: "string"
        example: "avatars/dummy_avatar.png"
        x-nullable: true
      createdAt:
        type: "string"
        format: "date-time"
    example:
      summary: "once"
      session:
        numbersCount: 18
        price: 3.45
        destination: "t"
        startTime: "2015-06-19T09:48:24+0000"
        id: 4991
        text: "Hello {First name}!"
        source: "O"
        referenceId: "my_reference_id_4991"
      contactName: "Test contact name"
      timezone: "Europe/Tallinn"
      completed: true
      avatar: "avatars/dummy_avatar.png"
      lastSent: "2000-01-23T04:56:07.000+00:00"
      type: "once"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      rrule: "FREQ=DAILY;INTERVAL=2;COUNT=5;"
      recipientsCount: 2
      textParameters:
        cost: 0.025
        parts: 6
        countries:
        - "US"
        - "US"
        encoding: "ISO-8859-1"
        charsetLabel: "ISO-8859-1"
        chars: 5
      firstOccurrence: "2019-08-13T05:48:37.486Z"
      lastOccurrence: "2019-09-13T05:48:37.486Z"
      id: 562
      nextSend: "2014-10-13T05:00:00+0000"
      parameters:
        recipients:
          numbers:
          - "19993322111"
          - "19993322111"
          groups:
          - 39318
          - 39318
          contacts:
          - 39318
          - 39318
        text: "Sample text"
  MessageIn:
    type: "object"
    required:
    - "avatar"
    - "id"
    - "messageTime"
    - "receiver"
    - "sender"
    - "text"
    properties:
      id:
        type: "integer"
        example: 1782832
        description: "The ID of the inbound message."
      sender:
        type: "string"
        example: "447860021130"
        description: "The sender’s phone number."
      receiver:
        type: "string"
        example: "447624800500"
        description: "The receiver’s phone number (i.e. your dedicated or shared reply\
          \ number)."
        x-nullable: true
      messageTime:
        type: "string"
        format: "date-time"
        example: "2012-11-28T18:38:28+0000"
        description: "The time when the message reached the TextMagic API endpoint."
      text:
        type: "string"
        example: "Test reply"
        description: "The text from the received message."
      contactId:
        type: "integer"
        example: 1
        x-nullable: true
      firstName:
        type: "string"
        example: "Test first name"
        x-nullable: true
      lastName:
        type: "string"
        example: "Test last name"
        x-nullable: true
      avatar:
        type: "string"
        example: "avatars/dummy_avatar.png"
        x-nullable: true
    example:
      messageTime: "2012-11-28T18:38:28+0000"
      firstName: "Test first name"
      lastName: "Test last name"
      receiver: "447624800500"
      sender: "447860021130"
      contactId: 1
      id: 1782832
      text: "Test reply"
      avatar: "avatars/dummy_avatar.png"
  MessageSession:
    type: "object"
    required:
    - "destination"
    - "id"
    - "numbersCount"
    - "price"
    - "referenceId"
    - "source"
    - "startTime"
    - "text"
    properties:
      id:
        type: "integer"
        example: 4991
        description: "Session ID."
      startTime:
        type: "string"
        example: "2015-06-19T09:48:24+0000"
        description: "Session creation time."
        x-nullable: true
      text:
        type: "string"
        example: "Hello {First name}!"
        description: "Session text. If a template was used for the session text (see\
          \ [Messages: Send](#tag/Outbound-Messages) for details), it may contain\
          \ template tags.\n"
        x-nullable: true
      source:
        type: "string"
        example: "O"
        description: "*   **O** for TextMagic Online\n*   **A** for API\n*   **M**\
          \ for TextMagic Messenger\n*   **E** for [Email to SMS](/docs/api/send-email-to-sms/)\n\
          *   **X** for [Distribution lists](/docs/api/distribution-lists/)\n"
        x-nullable: true
      referenceId:
        type: "string"
        example: "my_reference_id_4991"
        description: "Custom reference ID (see [Messages: Send](/docs/api/send-sms/)\
          \ for details).\n"
        x-nullable: true
      price:
        type: "number"
        example: 3.45
        description: "Session cost (in account currency)."
        x-nullable: true
      numbersCount:
        type: "integer"
        example: 18
        description: "Session recipient count."
        x-nullable: true
      destination:
        type: "string"
        example: "t"
        x-nullable: true
    example:
      numbersCount: 18
      price: 3.45
      destination: "t"
      startTime: "2015-06-19T09:48:24+0000"
      id: 4991
      text: "Hello {First name}!"
      source: "O"
      referenceId: "my_reference_id_4991"
    x-nullable: true
  BulkSession:
    type: "object"
    required:
    - "createdAt"
    - "id"
    - "itemsProcessed"
    - "itemsTotal"
    - "session"
    - "status"
    - "text"
    properties:
      id:
        type: "integer"
        example: 1
      status:
        type: "string"
        example: "n"
      itemsProcessed:
        type: "integer"
        example: 0
        x-nullable: true
      itemsTotal:
        type: "integer"
        example: 2
        x-nullable: true
      createdAt:
        type: "string"
        format: "date-time"
      session:
        $ref: "#/definitions/MessageSession"
      text:
        type: "string"
        example: "Sample text"
        x-nullable: true
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      itemsProcessed: 0
      itemsTotal: 2
      session:
        numbersCount: 18
        price: 3.45
        destination: "t"
        startTime: "2015-06-19T09:48:24+0000"
        id: 4991
        text: "Hello {First name}!"
        source: "O"
        referenceId: "my_reference_id_4991"
      id: 1
      text: "Sample text"
      status: "n"
  UserStatement:
    type: "object"
    required:
    - "balance"
    - "comment"
    - "date"
    - "delta"
    - "id"
    - "type"
    - "userId"
    - "value"
    properties:
      id:
        type: "integer"
        example: 1
      userId:
        type: "integer"
        example: 1
        x-nullable: true
      date:
        type: "string"
        format: "date-time"
      balance:
        type: "number"
        format: "double"
        example: 101.05
        x-nullable: true
      delta:
        type: "number"
        format: "float"
        example: -10.01
        x-nullable: true
      type:
        type: "string"
        example: "sms"
      value:
        type: "string"
        example: "2"
        x-nullable: true
      comment:
        type: "string"
        example: "This is test comment"
        x-nullable: true
    example:
      date: "2000-01-23T04:56:07.000+00:00"
      balance: 101.05
      delta: -10.01
      comment: "This is test comment"
      id: 1
      type: "sms"
      userId: 1
      value: "2"
  Invoice:
    type: "object"
    required:
    - "bundle"
    - "currency"
    - "id"
    - "paymentMethod"
    - "vat"
    properties:
      id:
        type: "integer"
      bundle:
        type: "integer"
      currency:
        type: "string"
      vat:
        type: "number"
        format: "float"
      paymentMethod:
        type: "string"
        x-nullable: true
    example:
      vat: 1.4658129
      paymentMethod: "paymentMethod"
      currency: "currency"
      id: 0
      bundle: 6
  Chat:
    type: "object"
    required:
    - "contact"
    - "country"
    - "direction"
    - "from"
    - "id"
    - "lastMessage"
    - "mute"
    - "mutedUntil"
    - "originalId"
    - "phone"
    - "status"
    - "timeLeftMute"
    - "unread"
    - "unsubscribedContactId"
    - "updatedAt"
    properties:
      id:
        type: "integer"
        example: 43328
        description: "Chat ID."
      originalId:
        type: "integer"
        example: 1
        x-nullable: true
      phone:
        type: "string"
        example: "447860021130"
        description: "Chat partner phone number."
      contact:
        $ref: "#/definitions/Contact"
      unsubscribedContactId:
        type: "integer"
        example: 1
        x-nullable: true
      unread:
        type: "integer"
        example: 5
        description: "Unread incoming messages count."
      updatedAt:
        type: "string"
        format: "date-time"
        example: "2015-01-08T06:13:21+0000"
        description: "Time when last incoming message arrived at this chat."
      status:
        type: "string"
      mute:
        type: "integer"
        example: 0
      lastMessage:
        type: "string"
        example: "This is test message"
        x-nullable: true
      direction:
        type: "string"
        x-nullable: true
      from:
        type: "string"
        x-nullable: true
      mutedUntil:
        type: "string"
        x-nullable: true
      timeLeftMute:
        type: "integer"
      country:
        $ref: "#/definitions/Country"
    example:
      country:
        name: "India"
        id: "US"
      unread: 5
      unsubscribedContactId: 1
      lastMessage: "This is test message"
      mute: 0
      phone: "447860021130"
      contact:
        lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      timeLeftMute: 0
      from: "from"
      id: 43328
      originalId: 1
      mutedUntil: "mutedUntil"
      updatedAt: "2015-01-08T06:13:21+0000"
      status: "status"
      direction: "direction"
  Conversation:
    type: "object"
    required:
    - "direction"
    - "firstName"
    - "id"
    - "lastName"
    - "messageTime"
    - "receiver"
    - "sender"
    - "sessionId"
    - "status"
    - "text"
    properties:
      id:
        type: "integer"
        example: 1
      direction:
        type: "string"
        example: "in"
        description: "Message type: inbound or outbound.\n"
        enum:
        - "in"
        - "out"
      sender:
        type: "string"
        example: "447860021130"
        description: "Sender phone number."
        x-nullable: true
      messageTime:
        type: "string"
        format: "date-time"
        example: "2012-11-28T18:38:28+0000"
        description: "Time when message arrived at TextMagic."
      text:
        type: "string"
        example: "This is a sample message"
        description: "Message text."
      receiver:
        type: "string"
        example: "447624800500"
        description: "Receiver phone number."
      status:
        type: "string"
        example: "d"
        description: "Message status (for chats outbound only). See [message delivery\
          \ statuses](/docs/api/sms-sessions/#message-delivery-statuses) for details."
      firstName:
        type: "string"
        example: "Charles"
        description: "Contact first name."
      lastName:
        type: "string"
        example: "Conway"
        description: "Contact last name."
      sessionId:
        type: "integer"
        x-nullable: true
    example:
      messageTime: "2012-11-28T18:38:28+0000"
      firstName: "Charles"
      lastName: "Conway"
      receiver: "447624800500"
      sender: "447860021130"
      id: 1
      text: "This is a sample message"
      sessionId: 0
      direction: "in"
      status: "d"
  Survey:
    type: "object"
    required:
    - "createdAt"
    - "id"
    - "name"
    - "status"
    - "updatedAt"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "My test survey"
      status:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      receipents:
        type: "array"
        items:
          $ref: "#/definitions/SurveyRecipient"
      countries:
        type: "array"
        items:
          $ref: "#/definitions/SurveySenderCountries"
    example:
      receipents:
      - phone: "phone"
      - phone: "phone"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      name: "My test survey"
      id: 1
      countries:
      - fromNumber: "7587773169425"
        allowDedicated: true
        id: 1
        countryName: "GB"
      - fromNumber: "7587773169425"
        allowDedicated: true
        id: 1
        countryName: "GB"
      status: "status"
      updatedAt: "2000-01-23T04:56:07.000+00:00"
  SurveyRecipient:
    required:
    - "phone"
    properties:
      phone:
        type: "string"
    example:
      phone: "phone"
  SurveySenderCountries:
    required:
    - "allowDedicated"
    - "countryName"
    - "fromNumber"
    - "id"
    properties:
      id:
        type: "integer"
        example: 1
      countryName:
        type: "string"
        example: "GB"
      fromNumber:
        type: "string"
        example: "7587773169425"
      allowDedicated:
        type: "boolean"
        example: true
    example:
      fromNumber: "7587773169425"
      allowDedicated: true
      id: 1
      countryName: "GB"
  Currency:
    type: "object"
    required:
    - "htmlSymbol"
    - "id"
    - "unicodeSymbol"
    properties:
      id:
        type: "string"
        example: "GBP"
      unicodeSymbol:
        type: "string"
        example: "£"
      htmlSymbol:
        type: "string"
        example: "&pound;"
    example:
      htmlSymbol: "&pound;"
      unicodeSymbol: "£"
      id: "GBP"
  Country:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        example: "US"
      name:
        type: "string"
        example: "India"
    example:
      name: "India"
      id: "US"
    x-nullable: true
  Timezone:
    type: "object"
    required:
    - "area"
    - "dst"
    - "id"
    - "offset"
    - "timezone"
    properties:
      id:
        type: "integer"
        example: 55
      area:
        type: "string"
        example: "Europe"
      dst:
        type: "integer"
        example: 1
      offset:
        type: "integer"
        example: 10800
      timezone:
        type: "string"
        example: "Europe\\/Tallinn"
    example:
      area: "Europe"
      dst: 1
      offset: 10800
      timezone: "Europe\\/Tallinn"
      id: 55
  UserImage:
    type: "object"
    required:
    - "href"
    properties:
      href:
        type: "string"
        example: "https://dummylogos.com/logo.png"
    example:
      href: "https://dummylogos.com/logo.png"
    x-nullable: true
  ContactCustomField:
    type: "object"
    properties:
      value:
        type: "string"
      userCustomField:
        $ref: "#/definitions/UserCustomField"
    example:
      userCustomField:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "My new custom field"
        id: 23
      value: "value"
  ContactImage:
    type: "object"
    required:
    - "href"
    properties:
      href:
        type: "string"
    example:
      href: "href"
    x-nullable: true
  GroupImage:
    type: "object"
    required:
    - "href"
    properties:
      href:
        type: "string"
    example:
      href: "href"
    x-nullable: true
  SurveyNode:
    required:
    - "body"
    - "endNodes"
    - "id"
    - "isEndNode"
    - "label"
    - "nodeType"
    - "sendDelay"
    - "startNodes"
    properties:
      id:
        type: "integer"
        example: 1
      label:
        type: "string"
        example: "Question 1"
      body:
        type: "string"
        example: "Hello {First name}! Would you like to participate in a short survey?\
          \ To continue, just reply Yes."
      nodeType:
        type: "string"
        example: "q"
      isEndNode:
        type: "boolean"
        example: false
      sendDelay:
        type: "integer"
        example: 0
      startNodes:
        type: "array"
        items:
          type: "string"
          example: "1"
        x-nullable: true
      endNodes:
        type: "array"
        items:
          type: "string"
          example: "1"
        x-nullable: true
    example:
      isEndNode: false
      endNodes:
      - "1"
      - "1"
      startNodes:
      - "1"
      - "1"
      id: 1
      label: "Question 1"
      body: "Hello {First name}! Would you like to participate in a short survey?\
        \ To continue, just reply Yes."
      nodeType: "q"
      sendDelay: 0
  ForwardedCall:
    required:
    - "callTime"
    - "caller"
    - "id"
    - "receiver"
    - "via"
    properties:
      id:
        type: "integer"
      callTime:
        type: "string"
        format: "date-time"
      caller:
        type: "string"
        example: "19998887766"
      via:
        type: "string"
        example: "1"
        description: "Inbound id"
      receiver:
        type: "string"
        example: "19998887765"
  MessagingStatItem:
    type: "object"
    required:
    - "costs"
    - "date"
    - "deliveryRate"
    - "messagesReceived"
    - "messagesSentAccepted"
    - "messagesSentBuffered"
    - "messagesSentDelivered"
    - "messagesSentFailed"
    - "messagesSentParts"
    - "messagesSentRejected"
    - "replyRate"
    properties:
      replyRate:
        type: "number"
        format: "float"
        example: 55.1
        x-nullable: true
      date:
        type: "string"
        format: "date-time"
        x-nullable: true
      deliveryRate:
        type: "number"
        format: "float"
        example: 99.5
        x-nullable: true
      costs:
        type: "number"
        format: "float"
        example: 10.01
        x-nullable: true
      messagesReceived:
        type: "integer"
        example: 1
        x-nullable: true
      messagesSentDelivered:
        type: "integer"
        example: 1
        x-nullable: true
      messagesSentAccepted:
        type: "integer"
        example: 1
        x-nullable: true
      messagesSentBuffered:
        type: "integer"
        example: 1
        x-nullable: true
      messagesSentFailed:
        type: "integer"
        example: 1
        x-nullable: true
      messagesSentRejected:
        type: "integer"
        example: 1
        x-nullable: true
      messagesSentParts:
        type: "integer"
        example: 1
        x-nullable: true
  PushToken:
    type: "object"
    required:
    - "token"
    - "type"
    properties:
      type:
        type: "string"
        example: "a"
      token:
        type: "string"
        example: "03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2"
  SubaccountWithToken:
    required:
    - "avatar"
    - "balance"
    - "company"
    - "country"
    - "currency"
    - "email"
    - "emailAccepted"
    - "firstName"
    - "id"
    - "lastName"
    - "phone"
    - "phoneAccepted"
    - "status"
    - "subaccountType"
    - "timezone"
    - "token"
    - "username"
    properties:
      id:
        type: "integer"
        example: 1
      username:
        type: "string"
        example: "Test"
      firstName:
        type: "string"
        example: "Test"
      lastName:
        type: "string"
        example: "Test"
      email:
        type: "string"
        example: "test@test.com"
      status:
        type: "string"
        example: "A"
      balance:
        type: "number"
        format: "double"
        example: 1.0
      phone:
        type: "string"
        example: "79030011222"
      company:
        type: "string"
        example: "Dummy company"
      currency:
        $ref: "#/definitions/Currency"
      country:
        $ref: "#/definitions/Country"
      timezone:
        $ref: "#/definitions/Timezone"
      subaccountType:
        type: "string"
        example: "P"
      emailAccepted:
        type: "boolean"
        example: true
      phoneAccepted:
        type: "boolean"
        example: true
      avatar:
        $ref: "#/definitions/UserImage"
      token:
        type: "string"
        example: "TokenOfSubaccountPlacedHere"
  FavoriteContact:
    required:
    - "avatar"
    - "entityId"
    - "entityType"
    - "primaryLabel"
    - "secondaryLabel"
    - "tertiaryLabel"
    properties:
      entityId:
        type: "integer"
        example: 1
      entityType:
        type: "string"
        example: "contact"
        description: ""
        enum:
        - "list"
        - "contact"
      primaryLabel:
        type: "string"
        example: "Test list"
        description: "Contact first name/last name if entityType is \\'contact\\',\
          \ List name if entity type is \\'list\\'"
      secondaryLabel:
        type: "string"
        example: "45"
        description: "Phone number if entityType is \\'contact\\', List contacts number\
          \ if entity type is \\'list\\'"
      tertiaryLabel:
        type: "string"
        example: "Australia"
        description: "Contact country if entityType is \\'contact\\' else null"
      avatar:
        type: "string"
        example: "avatars/dummy_avatar.png"
        x-nullable: true
    example:
      primaryLabel: "Test list"
      entityType: "contact"
      tertiaryLabel: "Australia"
      secondaryLabel: "45"
      entityId: 1
      avatar: "avatars/dummy_avatar.png"
  GetTimezonesResponse:
    type: "object"
    example:
    - id: 3
      name: "(UTC -11:00): Pacific/Samoa"
      offset: -39600
      timezone: "Pacific/Samoa"
    - id: 2
      name: "(UTC -11:00): Pacific/Midway"
      offset: -39600
      timezone: "Pacific/Midway"
    - id: 4
      name: "(UTC -10:00): Pacific/Tahiti"
      offset: -36000
      timezone: "Pacific/Tahiti"
    - id: 5
      name: "(UTC -10:00): Pacific/Honolulu"
      offset: -36000
      timezone: "Pacific/Honolulu"
    - id: 6
      name: "(UTC -09:30): Pacific/Marquesas"
      offset: -34200
      timezone: "Pacific/Marquesas"
  GetDisallowedRulesResponse:
    type: "array"
    items:
      type: "string"
    example:
    - "SEND_MESSAGES"
    - "MAKE_CALLS"
    - "EMAIL_LOOKUP"
  GetCountriesResponse:
    type: "array"
    items:
      $ref: "#/definitions/Country"
  GetUserDedicatedNumbersPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/UsersInbound"
    example:
      pageCount: 10
      limit: 10
      resources:
      - country:
          name: "India"
          id: "US"
        phone: "79030011222"
        purchasedAt: "2000-01-23T04:56:07.000+00:00"
        id: 1
        expireAt: "2000-01-23T04:56:07.000+00:00"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        status: "U"
      - country:
          name: "India"
          id: "US"
        phone: "79030011222"
        purchasedAt: "2000-01-23T04:56:07.000+00:00"
        id: 1
        expireAt: "2000-01-23T04:56:07.000+00:00"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        status: "U"
      page: 1
  GetSenderIdsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/SenderId"
    example:
      pageCount: 10
      limit: 10
      resources:
      - senderId: "Dummy sender id"
        id: 332
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        status: "A"
      - senderId: "Dummy sender id"
        id: 332
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        status: "A"
      page: 1
  GetCallsPricesResponse:
    example:
      GF:
        outbound: "0.197"
        inbound: "0.016388"
        forward: "0.197"
      KN:
        outbound: "0.231"
        inbound: "0.016388"
        forward: "0.231"
      SX:
        outbound: "0.204"
        inbound: "0.016388"
        forward: "0.204"
  GetFavouritesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/FavoriteContact"
    example:
      pageCount: 10
      limit: 10
      resources:
      - primaryLabel: "Test list"
        entityType: "contact"
        tertiaryLabel: "Australia"
        secondaryLabel: "45"
        entityId: 1
        avatar: "avatars/dummy_avatar.png"
      - primaryLabel: "Test list"
        entityType: "contact"
        tertiaryLabel: "Australia"
        secondaryLabel: "45"
        entityId: 1
        avatar: "avatars/dummy_avatar.png"
      page: 1
  SearchContactsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
    example:
      pageCount: 10
      limit: 10
      resources:
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      page: 1
  GetContactsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
    example:
      pageCount: 10
      limit: 10
      resources:
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      page: 1
  GetCustomFieldsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/UserCustomField"
    example:
      pageCount: 10
      limit: 10
      resources:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "My new custom field"
        id: 23
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "My new custom field"
        id: 23
      page: 1
  GetListsOfContactPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Group"
    example:
      pageCount: 10
      limit: 10
      resources:
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      page: 1
  GetUnsubscribersPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/UnsubscribedContact"
    example:
      pageCount: 10
      limit: 10
      resources:
      - firstName: "Test fist name"
        lastName: "Test last name"
        phone: "+1386673549434"
        unsubscribeTime: "2000-01-23T04:56:07.000+00:00"
        id: 1
      - firstName: "Test fist name"
        lastName: "Test last name"
        phone: "+1386673549434"
        unsubscribeTime: "2000-01-23T04:56:07.000+00:00"
        id: 1
      page: 1
  GetContactNotesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/ContactNote"
    example:
      pageCount: 10
      limit: 10
      resources:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        note: "Test note"
        id: 5
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        note: "Test note"
        id: 5
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
      page: 1
  GetBlockedContactsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
    example:
      pageCount: 10
      limit: 10
      resources:
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      page: 1
  SearchListsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Group"
    example:
      pageCount: 10
      limit: 10
      resources:
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      page: 1
  GetUserListsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Group"
    example:
      pageCount: 10
      limit: 10
      resources:
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      - shared: true
        membersCount: 10
        isDefault: true
        service: true
        name: "Test group"
        description: "Test group description"
        id: 1
        avatar:
          href: "href"
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        favorited: false
      page: 1
  GetContactsByListIdPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
    example:
      pageCount: 10
      limit: 10
      resources:
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      - lastName: "Test last name"
        country:
          name: "India"
          id: "US"
        phoneType: "phoneType"
        notes:
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        - createdAt: "2000-01-23T04:56:07.000+00:00"
          note: "Test note"
          id: 5
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
        customFields:
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        - userCustomField:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "My new custom field"
            id: 23
          value: "value"
        companyName: "Test company name"
        avatar:
          href: "href"
        firstName: "Test first name"
        blocked: true
        phone: "79030011222"
        lists:
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        - shared: true
          membersCount: 10
          isDefault: true
          service: true
          name: "Test group"
          description: "Test group description"
          id: 1
          avatar:
            href: "href"
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          favorited: false
        id: 224
        user:
          emailAccepted: true
          lastName: "Test"
          country:
            name: "India"
            id: "US"
          subaccountType: "P"
          timezone:
            area: "Europe"
            dst: 1
            offset: 10800
            timezone: "Europe\\/Tallinn"
            id: 55
          phoneAccepted: true
          avatar:
            href: "https://dummylogos.com/logo.png"
          firstName: "Test"
          balance: 100.0
          phone: "79030011222"
          company: "Dummy company"
          currency:
            htmlSymbol: "&pound;"
            unicodeSymbol: "£"
            id: "GBP"
          id: 1
          email: "test@test.com"
          username: "Test"
          status: "A"
        email: "test@test.com"
        favorited: true
      page: 1
  SearchTemplatesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageTemplate"
    example:
      pageCount: 10
      limit: 10
      resources:
      - name: "This is test template name"
        id: 1
        lastModified: "2000-01-23T04:56:07.000+00:00"
        content: "This is test template content"
      - name: "This is test template name"
        id: 1
        lastModified: "2000-01-23T04:56:07.000+00:00"
        content: "This is test template content"
      page: 1
  GetAllTemplatesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageTemplate"
    example:
      pageCount: 10
      limit: 10
      resources:
      - name: "This is test template name"
        id: 1
        lastModified: "2000-01-23T04:56:07.000+00:00"
        content: "This is test template content"
      - name: "This is test template name"
        id: 1
        lastModified: "2000-01-23T04:56:07.000+00:00"
        content: "This is test template content"
      page: 1
  GetAllOutboundMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageOut"
    example:
      pageCount: 10
      limit: 10
      resources:
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      page: 1
  SearchOutboundMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageOut"
    example:
      pageCount: 10
      limit: 10
      resources:
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      page: 1
  GetOutboundMessagesHistoryPaginatedResponse:
    required:
    - "lastId"
    - "limit"
    - "nextLastId"
    - "resources"
    properties:
      lastId:
        type: "integer"
        example: 1
        x-nullable: true
      nextLastId:
        type: "integer"
        example: 1
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageOut"
    example:
      limit: 10
      lastId: 1
      resources:
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      nextLastId: 1
  GetAllMessageSessionsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageSession"
    example:
      pageCount: 10
      limit: 10
      resources:
      - numbersCount: 18
        price: 3.45
        destination: "t"
        startTime: "2015-06-19T09:48:24+0000"
        id: 4991
        text: "Hello {First name}!"
        source: "O"
        referenceId: "my_reference_id_4991"
      - numbersCount: 18
        price: 3.45
        destination: "t"
        startTime: "2015-06-19T09:48:24+0000"
        id: 4991
        text: "Hello {First name}!"
        source: "O"
        referenceId: "my_reference_id_4991"
      page: 1
  GetAllBulkSessionsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/BulkSession"
    example:
      pageCount: 10
      limit: 10
      resources:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        itemsProcessed: 0
        itemsTotal: 2
        session:
          numbersCount: 18
          price: 3.45
          destination: "t"
          startTime: "2015-06-19T09:48:24+0000"
          id: 4991
          text: "Hello {First name}!"
          source: "O"
          referenceId: "my_reference_id_4991"
        id: 1
        text: "Sample text"
        status: "n"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        itemsProcessed: 0
        itemsTotal: 2
        session:
          numbersCount: 18
          price: 3.45
          destination: "t"
          startTime: "2015-06-19T09:48:24+0000"
          id: 4991
          text: "Hello {First name}!"
          source: "O"
          referenceId: "my_reference_id_4991"
        id: 1
        text: "Sample text"
        status: "n"
      page: 1
  GetMessagesBySessionIdPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageOut"
    example:
      pageCount: 10
      limit: 10
      resources:
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      - messageTime: "2019-08-12T11:43:37+0000"
        charset: "ISO-8859-1"
        lastName: "Conway"
        country: "US"
        partsCount: 1
        creditsPrice: "creditsPrice"
        source: "1"
        fromEmail: "test@email.com"
        price: 0.025
        smscId: "1"
        contact: "contact"
        id: 4991
        text: "I love TextMagic!"
        receiver: "447860021130"
        contactId: 1
        sessionId: 1
        avatar: "avatars/dummy_avatar.png"
        userId: 1
        fromNumber: "447624800500"
        firstName: "John"
        deleted: false
        numbersCount: 6
        sender: "447624800500"
        phone: "447624800500"
        deliveredCount: 0
        charsetLabel: "ISO-8859-1"
        chars: 5
        status: "d"
      page: 1
  GetAllScheduledMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessagesIcs"
    example:
      pageCount: 10
      limit: 10
      resources:
      - summary: "once"
        session:
          numbersCount: 18
          price: 3.45
          destination: "t"
          startTime: "2015-06-19T09:48:24+0000"
          id: 4991
          text: "Hello {First name}!"
          source: "O"
          referenceId: "my_reference_id_4991"
        contactName: "Test contact name"
        timezone: "Europe/Tallinn"
        completed: true
        avatar: "avatars/dummy_avatar.png"
        lastSent: "2000-01-23T04:56:07.000+00:00"
        type: "once"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        rrule: "FREQ=DAILY;INTERVAL=2;COUNT=5;"
        recipientsCount: 2
        textParameters:
          cost: 0.025
          parts: 6
          countries:
          - "US"
          - "US"
          encoding: "ISO-8859-1"
          charsetLabel: "ISO-8859-1"
          chars: 5
        firstOccurrence: "2019-08-13T05:48:37.486Z"
        lastOccurrence: "2019-09-13T05:48:37.486Z"
        id: 562
        nextSend: "2014-10-13T05:00:00+0000"
        parameters:
          recipients:
            numbers:
            - "19993322111"
            - "19993322111"
            groups:
            - 39318
            - 39318
            contacts:
            - 39318
            - 39318
          text: "Sample text"
      - summary: "once"
        session:
          numbersCount: 18
          price: 3.45
          destination: "t"
          startTime: "2015-06-19T09:48:24+0000"
          id: 4991
          text: "Hello {First name}!"
          source: "O"
          referenceId: "my_reference_id_4991"
        contactName: "Test contact name"
        timezone: "Europe/Tallinn"
        completed: true
        avatar: "avatars/dummy_avatar.png"
        lastSent: "2000-01-23T04:56:07.000+00:00"
        type: "once"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        rrule: "FREQ=DAILY;INTERVAL=2;COUNT=5;"
        recipientsCount: 2
        textParameters:
          cost: 0.025
          parts: 6
          countries:
          - "US"
          - "US"
          encoding: "ISO-8859-1"
          charsetLabel: "ISO-8859-1"
          chars: 5
        firstOccurrence: "2019-08-13T05:48:37.486Z"
        lastOccurrence: "2019-09-13T05:48:37.486Z"
        id: 562
        nextSend: "2014-10-13T05:00:00+0000"
        parameters:
          recipients:
            numbers:
            - "19993322111"
            - "19993322111"
            groups:
            - 39318
            - 39318
            contacts:
            - 39318
            - 39318
          text: "Sample text"
      page: 1
  SearchScheduledMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessagesIcs"
    example:
      pageCount: 10
      limit: 10
      resources:
      - summary: "once"
        session:
          numbersCount: 18
          price: 3.45
          destination: "t"
          startTime: "2015-06-19T09:48:24+0000"
          id: 4991
          text: "Hello {First name}!"
          source: "O"
          referenceId: "my_reference_id_4991"
        contactName: "Test contact name"
        timezone: "Europe/Tallinn"
        completed: true
        avatar: "avatars/dummy_avatar.png"
        lastSent: "2000-01-23T04:56:07.000+00:00"
        type: "once"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        rrule: "FREQ=DAILY;INTERVAL=2;COUNT=5;"
        recipientsCount: 2
        textParameters:
          cost: 0.025
          parts: 6
          countries:
          - "US"
          - "US"
          encoding: "ISO-8859-1"
          charsetLabel: "ISO-8859-1"
          chars: 5
        firstOccurrence: "2019-08-13T05:48:37.486Z"
        lastOccurrence: "2019-09-13T05:48:37.486Z"
        id: 562
        nextSend: "2014-10-13T05:00:00+0000"
        parameters:
          recipients:
            numbers:
            - "19993322111"
            - "19993322111"
            groups:
            - 39318
            - 39318
            contacts:
            - 39318
            - 39318
          text: "Sample text"
      - summary: "once"
        session:
          numbersCount: 18
          price: 3.45
          destination: "t"
          startTime: "2015-06-19T09:48:24+0000"
          id: 4991
          text: "Hello {First name}!"
          source: "O"
          referenceId: "my_reference_id_4991"
        contactName: "Test contact name"
        timezone: "Europe/Tallinn"
        completed: true
        avatar: "avatars/dummy_avatar.png"
        lastSent: "2000-01-23T04:56:07.000+00:00"
        type: "once"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        rrule: "FREQ=DAILY;INTERVAL=2;COUNT=5;"
        recipientsCount: 2
        textParameters:
          cost: 0.025
          parts: 6
          countries:
          - "US"
          - "US"
          encoding: "ISO-8859-1"
          charsetLabel: "ISO-8859-1"
          chars: 5
        firstOccurrence: "2019-08-13T05:48:37.486Z"
        lastOccurrence: "2019-09-13T05:48:37.486Z"
        id: 562
        nextSend: "2014-10-13T05:00:00+0000"
        parameters:
          recipients:
            numbers:
            - "19993322111"
            - "19993322111"
            groups:
            - 39318
            - 39318
            contacts:
            - 39318
            - 39318
          text: "Sample text"
      page: 1
  GetAllInboundMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageIn"
    example:
      pageCount: 10
      limit: 10
      resources:
      - messageTime: "2012-11-28T18:38:28+0000"
        firstName: "Test first name"
        lastName: "Test last name"
        receiver: "447624800500"
        sender: "447860021130"
        contactId: 1
        id: 1782832
        text: "Test reply"
        avatar: "avatars/dummy_avatar.png"
      - messageTime: "2012-11-28T18:38:28+0000"
        firstName: "Test first name"
        lastName: "Test last name"
        receiver: "447624800500"
        sender: "447860021130"
        contactId: 1
        id: 1782832
        text: "Test reply"
        avatar: "avatars/dummy_avatar.png"
      page: 1
  SearchInboundMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/MessageIn"
    example:
      pageCount: 10
      limit: 10
      resources:
      - messageTime: "2012-11-28T18:38:28+0000"
        firstName: "Test first name"
        lastName: "Test last name"
        receiver: "447624800500"
        sender: "447860021130"
        contactId: 1
        id: 1782832
        text: "Test reply"
        avatar: "avatars/dummy_avatar.png"
      - messageTime: "2012-11-28T18:38:28+0000"
        firstName: "Test first name"
        lastName: "Test last name"
        receiver: "447624800500"
        sender: "447860021130"
        contactId: 1
        id: 1782832
        text: "Test reply"
        avatar: "avatars/dummy_avatar.png"
      page: 1
  GetSpendingStatPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/UserStatement"
    example:
      pageCount: 10
      limit: 10
      resources:
      - date: "2000-01-23T04:56:07.000+00:00"
        balance: 101.05
        delta: -10.01
        comment: "This is test comment"
        id: 1
        type: "sms"
        userId: 1
        value: "2"
      - date: "2000-01-23T04:56:07.000+00:00"
        balance: 101.05
        delta: -10.01
        comment: "This is test comment"
        id: 1
        type: "sms"
        userId: 1
        value: "2"
      page: 1
  GetInvoicesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Invoice"
    example:
      pageCount: 10
      limit: 10
      resources:
      - vat: 1.4658129
        paymentMethod: "paymentMethod"
        currency: "currency"
        id: 0
        bundle: 6
      - vat: 1.4658129
        paymentMethod: "paymentMethod"
        currency: "currency"
        id: 0
        bundle: 6
      page: 1
  GetAllChatsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Chat"
    example:
      pageCount: 10
      limit: 10
      resources:
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      page: 1
  GetChatMessagesPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Conversation"
    example:
      pageCount: 10
      limit: 10
      resources:
      - messageTime: "2012-11-28T18:38:28+0000"
        firstName: "Charles"
        lastName: "Conway"
        receiver: "447624800500"
        sender: "447860021130"
        id: 1
        text: "This is a sample message"
        sessionId: 0
        direction: "in"
        status: "d"
      - messageTime: "2012-11-28T18:38:28+0000"
        firstName: "Charles"
        lastName: "Conway"
        receiver: "447624800500"
        sender: "447860021130"
        id: 1
        text: "This is a sample message"
        sessionId: 0
        direction: "in"
        status: "d"
      page: 1
  SearchChatsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Chat"
    example:
      pageCount: 10
      limit: 10
      resources:
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      page: 1
  SearchChatsByIdsPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Chat"
    example:
      pageCount: 10
      limit: 10
      resources:
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      page: 1
  SearchChatsByReceipentPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Chat"
    example:
      pageCount: 10
      limit: 10
      resources:
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      - country:
          name: "India"
          id: "US"
        unread: 5
        unsubscribedContactId: 1
        lastMessage: "This is test message"
        mute: 0
        phone: "447860021130"
        contact:
          lastName: "Test last name"
          country:
            name: "India"
            id: "US"
          phoneType: "phoneType"
          notes:
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          - createdAt: "2000-01-23T04:56:07.000+00:00"
            note: "Test note"
            id: 5
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
          customFields:
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          - userCustomField:
              createdAt: "2000-01-23T04:56:07.000+00:00"
              name: "My new custom field"
              id: 23
            value: "value"
          companyName: "Test company name"
          avatar:
            href: "href"
          firstName: "Test first name"
          blocked: true
          phone: "79030011222"
          lists:
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          - shared: true
            membersCount: 10
            isDefault: true
            service: true
            name: "Test group"
            description: "Test group description"
            id: 1
            avatar:
              href: "href"
            user:
              emailAccepted: true
              lastName: "Test"
              country:
                name: "India"
                id: "US"
              subaccountType: "P"
              timezone:
                area: "Europe"
                dst: 1
                offset: 10800
                timezone: "Europe\\/Tallinn"
                id: 55
              phoneAccepted: true
              avatar:
                href: "https://dummylogos.com/logo.png"
              firstName: "Test"
              balance: 100.0
              phone: "79030011222"
              company: "Dummy company"
              currency:
                htmlSymbol: "&pound;"
                unicodeSymbol: "£"
                id: "GBP"
              id: 1
              email: "test@test.com"
              username: "Test"
              status: "A"
            favorited: false
          id: 224
          user:
            emailAccepted: true
            lastName: "Test"
            country:
              name: "India"
              id: "US"
            subaccountType: "P"
            timezone:
              area: "Europe"
              dst: 1
              offset: 10800
              timezone: "Europe\\/Tallinn"
              id: 55
            phoneAccepted: true
            avatar:
              href: "https://dummylogos.com/logo.png"
            firstName: "Test"
            balance: 100.0
            phone: "79030011222"
            company: "Dummy company"
            currency:
              htmlSymbol: "&pound;"
              unicodeSymbol: "£"
              id: "GBP"
            id: 1
            email: "test@test.com"
            username: "Test"
            status: "A"
          email: "test@test.com"
          favorited: true
        timeLeftMute: 0
        from: "from"
        id: 43328
        originalId: 1
        mutedUntil: "mutedUntil"
        updatedAt: "2015-01-08T06:13:21+0000"
        status: "status"
        direction: "direction"
      page: 1
  GetSurveysPaginatedResponse:
    required:
    - "limit"
    - "page"
    - "pageCount"
    - "resources"
    properties:
      page:
        type: "integer"
        example: 1
      pageCount:
        type: "integer"
        example: 10
        description: "The total number of pages."
      limit:
        type: "integer"
        example: 10
        description: "The number of results per page."
      resources:
        type: "array"
        items:
          $ref: "#/definitions/Survey"
    example:
      pageCount: 10
      limit: 10
      resources:
      - receipents:
        - phone: "phone"
        - phone: "phone"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "My test survey"
        id: 1
        countries:
        - fromNumber: "7587773169425"
          allowDedicated: true
          id: 1
          countryName: "GB"
        - fromNumber: "7587773169425"
          allowDedicated: true
          id: 1
          countryName: "GB"
        status: "status"
        updatedAt: "2000-01-23T04:56:07.000+00:00"
      - receipents:
        - phone: "phone"
        - phone: "phone"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "My test survey"
        id: 1
        countries:
        - fromNumber: "7587773169425"
          allowDedicated: true
          id: 1
          countryName: "GB"
        - fromNumber: "7587773169425"
          allowDedicated: true
          id: 1
          countryName: "GB"
        status: "status"
        updatedAt: "2000-01-23T04:56:07.000+00:00"
      page: 1
  DoAuthInputObject:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
        example: "test@test.com"
        description: "Account username or email"
      password:
        type: "string"
        example: "test"
        description: "Account password"
      appName:
        type: "string"
        example: "My application"
        description: "Application name"
        x-nullable: false
      appVersion:
        type: "string"
        example: "1.0.0 beta"
        description: "Application version"
        x-nullable: false
      deviceId:
        type: "string"
        example: "03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2"
        description: "Device ID for push notification service"
        x-nullable: false
      pushServiceType:
        type: "string"
        example: "a"
        description: "required when deviceId provided. Push notification service type:\
          \ a for Apple Push Notifications, g for Google Cloud Messaging"
        x-nullable: false
      tfaCode:
        type: "string"
        example: "12345"
        description: "required when 2FA enabled on account. 2FA challenge response\
          \ (SMS code or security question answer)"
        x-nullable: false
      tfaId:
        type: "string"
        example: "12345"
        description: "required when 2FA enabled on account. 2FA challenge response\
          \ (SMS code or security question answer)"
        x-nullable: false
    example:
      password: "test"
      appVersion: "1.0.0 beta"
      tfaCode: "12345"
      appName: "My application"
      tfaId: "12345"
      deviceId: "03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2"
      pushServiceType: "a"
      username: "test@test.com"
  CreatePushTokenInputObject:
    type: "object"
    required:
    - "deviceId"
    - "pushServiceType"
    properties:
      deviceId:
        type: "string"
        example: "123"
        description: "Device ID for push notification service"
      pushServiceType:
        type: "string"
        example: "a"
        description: "Push notification service type: a for Apple Push Notifications,\
          \ g for Google Cloud Messaging"
    example:
      deviceId: "123"
      pushServiceType: "a"
  UpdateCurrentUserInputObject:
    properties:
      username:
        type: "string"
        example: "Test"
      firstName:
        type: "string"
        example: "Test"
      lastName:
        type: "string"
        example: "Test"
      email:
        type: "string"
        example: "test@test.com"
      phone:
        type: "string"
        example: "79030011222"
      company:
        type: "string"
        example: "Dummy company"
      timezone:
        type: "integer"
        example: 2
        description: "timezone id"
    example:
      firstName: "Test"
      lastName: "Test"
      phone: "79030011222"
      timezone: 2
      company: "Dummy company"
      email: "test@test.com"
      username: "Test"
  CheckPhoneVerificationCodeInputObject:
    required:
    - "code"
    properties:
      code:
        type: "integer"
        example: 1111
    description: "Confirmation code to check"
    example:
      code: 1111
  UpdatePasswordInputObject:
    type: "object"
    required:
    - "newPassword"
    - "oldPassword"
    properties:
      oldPassword:
        type: "string"
        example: "myOldPassword"
        description: "Current password"
      newPassword:
        type: "string"
        example: "myNewPassword"
        description: "New password"
    example:
      oldPassword: "myOldPassword"
      newPassword: "myNewPassword"
  UpdateSenderSettingInputObject:
    type: "object"
    required:
    - "country"
    - "value"
    properties:
      value:
        type: "string"
        example: "447624800500"
        description: "Available phone number in international E.164 format or senderid."
      country:
        type: "string"
        example: "AF"
        description: "Country for which the setting will be set."
      chatId:
        type: "integer"
        example: 344
        description: "Set sender setting for specified chat only."
    example:
      country: "AF"
      chatId: 344
      value: "447624800500"
  BuyDedicatedNumberInputObject:
    type: "object"
    required:
    - "country"
    - "phone"
    - "userId"
    properties:
      phone:
        type: "string"
        example: "123456780"
        description: "Desired dedicated phone number in international E.164 format"
      country:
        type: "string"
        example: "AU"
        description: "Dedicated number country. Two charactes in upper case."
      userId:
        type: "integer"
        description: "User ID this number will be assigned to"
    example:
      country: "AU"
      phone: "123456780"
      userId: 0
  RequestSenderIdInputObject:
    required:
    - "explanation"
    - "senderId"
    properties:
      senderId:
        type: "string"
        example: "Testid1"
        description: "Alphanumeric Sender ID (maximum 11 characters)"
      explanation:
        type: "string"
        example: "Test description"
        description: "Explain why do you need this Sender ID"
    example:
      senderId: "Testid1"
      explanation: "Test description"
  InviteSubaccountInputObject:
    required:
    - "email"
    - "role"
    properties:
      email:
        type: "string"
        format: "email"
        example: "user-example@example.com"
        description: "Subaccount email"
      role:
        type: "string"
        format: "email"
        example: "U"
        description: "Subaccount role: A for administrator or U for regular user"
        enum:
        - "A"
        - "U"
    example:
      role: "U"
      email: "user-example@example.com"
  RequestNewSubaccountTokenInputObject:
    required:
    - "password"
    - "userId"
    properties:
      userId:
        type: "integer"
        example: 1
        description: "Subaccount ID"
      password:
        type: "string"
        example: "strongPassword"
        description: "Your account password"
      appName:
        type: "string"
        example: "sample app"
        description: "Application name"
    example:
      password: "strongPassword"
      appName: "sample app"
      userId: 1
  GetSubaccountsWithTokensInputObject:
    required:
    - "appName"
    - "password"
    properties:
      appName:
        type: "string"
        example: "sample app"
        description: "Application name"
      password:
        type: "string"
        example: "strongPassword"
        description: "Your account password"
    example:
      password: "strongPassword"
      appName: "sample app"
  UpdateBalanceNotificationSettingsInputObject:
    required:
    - "alertBalance"
    properties:
      lowBalanceNotification:
        type: "boolean"
        example: true
        description: "Should user receive low balance notification"
      alertBalance:
        type: "string"
        example: "50"
        description: "If balance is below this value, user receive low balance notification"
      alertPhone:
        type: "string"
        example: "15417543010"
        description: "Low balance notification phone number"
      alertEmail1:
        type: "string"
        example: "test@test.com"
        description: "Low balance notification email 1"
      alertEmail2:
        type: "string"
        example: "test@test.com"
        description: "Low balance notification email 2"
      alertEmail3:
        type: "string"
        example: "test@test.com"
        description: "Low balance notification email 3"
    example:
      alertBalance: "50"
      alertPhone: "15417543010"
      alertEmail1: "test@test.com"
      alertEmail2: "test@test.com"
      alertEmail3: "test@test.com"
      lowBalanceNotification: true
  UpdateInboundMessagesNotificationSettingsInputObject:
    required:
    - "inboundMessageNotification"
    - "includeSmsHistory"
    - "sendInHtmlFormat"
    properties:
      inboundMessageNotification:
        type: "boolean"
        example: true
        description: "Should user receive notification about new incoming messages"
      includeSmsHistory:
        type: "boolean"
        example: true
        description: "Include SMS history into notification Email"
      sendInHtmlFormat:
        type: "boolean"
        example: true
        description: "Send Email notification in HTML format"
      alertEmail1:
        type: "string"
        format: "email"
        example: "test@test.com"
        description: "New message notification email 2"
      alertEmail2:
        type: "string"
        format: "email"
        example: "test@test.com"
        description: "New message notification email 2"
      alertEmail3:
        type: "string"
        format: "email"
        example: "test@test.com"
        description: "New message notification email 3"
    example:
      sendInHtmlFormat: true
      alertEmail1: "test@test.com"
      alertEmail2: "test@test.com"
      includeSmsHistory: true
      alertEmail3: "test@test.com"
      inboundMessageNotification: true
  UpdateChatDesktopNotificationSettingsInputObject:
    type: "object"
    required:
    - "playSound"
    - "showNotifications"
    properties:
      playSound:
        type: "boolean"
        example: false
        description: "Notification sound is enable/disabled"
      showNotifications:
        type: "boolean"
        example: false
        description: "Show desktop notifications about new messages"
      showText:
        type: "boolean"
        example: true
        description: "Incoming message text will be displayed in desktop notifications."
      soundId:
        type: "integer"
        example: 1
        description: "Sound Id of a notification"
    example:
      soundId: 1
      playSound: false
      showText: true
      showNotifications: false
  UpdateCallbackSettingsInputObject:
    required:
    - "format"
    - "inUrl"
    - "outUrl"
    properties:
      outUrl:
        type: "string"
        example: "http://www.mysite.com/delivery-callback.php"
        description: "This URL is used to push message delivery status updates to\
          \ your application."
        x-nullable: true
      inUrl:
        type: "string"
        example: "http://www.mysite.com/incoming-sms-callback.php"
        description: "This URL is used to push incoming SMS to your application."
        x-nullable: true
      format:
        type: "string"
        description: "Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded,\
          \ j - application/json"
        enum:
        - "m"
        - "u"
        - "j"
    example:
      inUrl: "http://www.mysite.com/incoming-sms-callback.php"
      outUrl: "http://www.mysite.com/delivery-callback.php"
      format: "m"
  CreateContactInputObject:
    required:
    - "lists"
    - "phone"
    properties:
      firstName:
        type: "string"
        example: "Example first name"
        description: "Contact first name"
      lastName:
        type: "string"
        example: "Example first name"
        description: "Contact last name"
      phone:
        type: "string"
        example: "+23058300573"
        description: "Contact phone number in E.164 (international) format without\
          \ leading + or zeroes"
      email:
        type: "string"
        format: "email"
        example: "test@test.com"
        description: "Contact email"
      companyName:
        type: "string"
        example: "My pretty company"
        description: "Contact company name"
      lists:
        type: "string"
        example: "1,2,3,4"
        description: "Array of list resources id contact will be assigned to"
      favorited:
        type: "boolean"
        example: false
        description: "Is contact favorited"
      blocked:
        type: "boolean"
        example: false
        description: "Is contact blocked for outgoing and incoming messaging"
      type:
        type: "integer"
        example: 1
        description: "Force type of phone. Possible values: 0 - landline, 1 - mobile.\
          \ Default is -1 (auto detection)"
      customFieldValues:
        type: "object"
        example:
          2: "My test custom value for custom field with id 2"
          5: "My test custom value for custom field with id 5"
        properties: {}
      local:
        type: "integer"
        example: 0
        description: "Treat phone number passed in request body as local"
      country:
        type: "string"
        example: "US"
        description: "2-letter ISO country code for local phone numbers, used when\
          \ local is  set to true. Default is account country"
    example:
      firstName: "Example first name"
      lastName: "Example first name"
      country: "US"
      blocked: false
      customFieldValues:
        2: "My test custom value for custom field with id 2"
        5: "My test custom value for custom field with id 5"
      phone: "+23058300573"
      lists: "1,2,3,4"
      companyName: "My pretty company"
      type: 1
      email: "test@test.com"
      local: 0
      favorited: false
  UpdateContactInputObject:
    required:
    - "lists"
    - "phone"
    properties:
      firstName:
        type: "string"
        example: "Example first name"
        description: "Contact first name"
      lastName:
        type: "string"
        example: "Example first name"
        description: "Contact last name"
      phone:
        type: "string"
        example: "+23058300573"
        description: "Contact phone number in E.164 (international) format without\
          \ leading + or zeroes"
      email:
        type: "string"
        format: "email"
        example: "test@test.com"
        description: "Contact email"
      companyName:
        type: "string"
        example: "My pretty company"
        description: "Contact company name"
      lists:
        type: "string"
        example: "1,2,3,4"
        description: "Array of list resources id contact will be assigned to"
      favorited:
        type: "boolean"
        example: false
        description: "Is contact favorited"
      blocked:
        type: "boolean"
        example: false
        description: "Is contact blocked for outgoing and incoming messaging"
      type:
        type: "integer"
        example: 1
        description: "Force type of phone. Possible values: 0 - landline, 1 - mobile.\
          \ Default is -1 (auto detection)"
      customFieldValues:
        type: "object"
        example:
          2: "My test custom value for custom field with id 2"
          5: "My test custom value for custom field with id 5"
        properties: {}
      local:
        type: "integer"
        example: 0
        description: "Treat phone number passed in request body as local"
      country:
        type: "string"
        example: "US"
        description: "2-letter ISO country code for local phone numbers, used when\
          \ local is  set to true. Default is account country"
    example:
      firstName: "Example first name"
      lastName: "Example first name"
      country: "US"
      blocked: false
      customFieldValues:
        2: "My test custom value for custom field with id 2"
        5: "My test custom value for custom field with id 5"
      phone: "+23058300573"
      lists: "1,2,3,4"
      companyName: "My pretty company"
      type: 1
      email: "test@test.com"
      local: 0
      favorited: false
  DeleteContactsByIdsInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
    example:
      all: false
      ids: "1,2,3"
  CreateCustomFieldInputObject:
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Test custom field"
        description: "Custom field name"
    example:
      name: "Test custom field"
  UpdateCustomFieldInputObject:
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Test custom field"
        description: "Custom field name"
    example:
      name: "Test custom field"
  UpdateCustomFieldValueInputObject:
    properties:
      contactId:
        type: "integer"
        example: 5
      value:
        type: "string"
        example: "Test custom field value"
    example:
      contactId: 5
      value: "Test custom field value"
  UnsubscribeContactInputObject:
    properties:
      phone:
        type: "string"
        example: "+14153288240"
        description: "Contact phone number"
      blockIncoming:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 incoming messages from this\
          \ number will be blocked."
    example:
      blockIncoming: 0
      phone: "+14153288240"
  BlockContactInputObject:
    properties:
      phone:
        type: "string"
        example: "+14153288240"
        description: "Contact phone number"
    example:
      phone: "+14153288240"
  UnblockContactInputObject:
    properties:
      phone:
        type: "string"
        example: "+14153288240"
        description: "Contact phone number"
    example:
      phone: "+14153288240"
  UnblockContactsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      all: 0
      ids: "1,2,3"
  CreateContactNoteInputObject:
    properties:
      note:
        type: "string"
        example: "My new note"
    example:
      note: "My new note"
  UpdateContactNoteInputObject:
    required:
    - "note"
    properties:
      note:
        type: "string"
        example: "My new note"
    example:
      note: "My new note"
  DeleteContactNotesBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: true
        description: "Entity ID(s), separated by comma"
    example:
      all: true
      ids: "1,2,3"
  CreateListInputObject:
    required:
    - "name"
    - "shared"
    properties:
      name:
        type: "string"
        example: "New test list"
        description: "List name"
      shared:
        type: "boolean"
        example: true
        description: "Should this list be shared with sub-accounts"
      favorited:
        type: "boolean"
        example: true
        description: "Is list favorited. Default is false"
        default: false
      isDefault:
        type: "boolean"
        example: true
        description: "Is list default for new contacts (web only)."
        default: false
    example:
      shared: true
      isDefault: true
      name: "New test list"
      favorited: true
  AssignContactsToListInputObject:
    required:
    - "contacts"
    properties:
      contacts:
        type: "string"
        example: "1,2"
    example:
      contacts: "1,2"
  ClearAndAssignContactsToListInputObject:
    required:
    - "contacts"
    properties:
      contacts:
        type: "string"
        example: "1,2"
    example:
      contacts: "1,2"
  deleteContacsFromListObject:
    required:
    - "contacts"
    properties:
      contacts:
        type: "string"
        example: "1,2"
  updateListObject:
    required:
    - "name"
    - "shared"
    properties:
      name:
        type: "string"
        example: "New test list"
        description: "List name"
      shared:
        type: "boolean"
        example: true
        description: "Should this list be shared with sub-accounts"
      favorited:
        type: "boolean"
        example: true
        description: "Is list favorited. Default is false"
        default: false
      isDefault:
        type: "boolean"
        example: true
        description: "Is list default for new contacts (web only)."
        default: false
  DeleteListsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      all: 0
      ids: "1,2,3"
  DeleteListContactsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      all: 0
      ids: "1,2,3"
  CreateTemplateInputObject:
    required:
    - "content"
    - "name"
    properties:
      name:
        type: "string"
        example: "New template name"
        description: "Template name"
      content:
        type: "string"
        example: "New template content"
        description: "Template text. May contain tags inside braces"
    example:
      name: "New template name"
      content: "New template content"
  UpdateTemplateInputObject:
    required:
    - "content"
    - "name"
    properties:
      name:
        type: "string"
        example: "New template name"
        description: "Template name"
      content:
        type: "string"
        example: "New template content"
        description: "Template text. May contain tags inside braces"
    example:
      name: "New template name"
      content: "New template content"
  DeleteTemplatesBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: true
        description: "Entity ID(s), separated by comma"
    example:
      all: true
      ids: "1,2,3"
  SendMessageInputObject:
    required:
    - "phones"
    - "text"
    properties:
      text:
        type: "string"
        example: "Test message test"
        description: "Message text. Required if template_id is not set"
      templateId:
        type: "integer"
        example: 1
        description: "Template used instead of message text. Required if text is not\
          \ set"
      sendingTime:
        type: "integer"
        example: 1565606455
        description: "DEPRECATED, consider using sendingDateTime and sendingTimezone\
          \ parameters instead: Optional (required with rrule set). Message sending\
          \ time in unix timestamp format. Default is now"
      sendingDateTime:
        type: "string"
        example: "2020-05-27 13:02:33"
        description: "Sending time in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33).\
          \ This time is relative to sendingTimezone"
      sendingTimezone:
        type: "string"
        example: "America/Buenos_Aires"
        description: "ID or ISO-name of timezone used for sending when sendingDateTime\
          \ parameter is set. E.g. if you specify sendingDateTime = \\\"2016-05-27\
          \ 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your\
          \ message will be sent at May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33\
          \ UTC. Default is account timezone"
      contacts:
        type: "string"
        example: "1,2,3,4"
        description: "Comma separated array of contact resources id message will be\
          \ sent to"
      lists:
        type: "string"
        example: "1,2,3,4"
        description: "Comma separated array of list resources id message will be sent\
          \ to"
      phones:
        type: "string"
        example: "+19993322111,+19993322110"
        description: "Comma separated array of E.164 phone numbers message will be\
          \ sent to"
      cutExtra:
        type: "boolean"
        example: true
        description: "Should sending method cut extra characters which not fit supplied\
          \ partsCount or return 400 Bad request response instead. Default is false"
      partsCount:
        type: "integer"
        example: 6
        description: "Maximum message parts count (TextMagic allows sending 1 to 6\
          \ message parts). Default is 6"
      referenceId:
        type: "integer"
        example: 1
        description: "Custom message reference id which can be used in your application\
          \ infrastructure"
      from:
        type: "string"
        example: "Test sender id"
        description: "One of allowed Sender ID (phone number or alphanumeric sender\
          \ ID). If specified Sender ID is not allowed for some destinations, a fallback\
          \ default Sender ID will be used to ensure delivery"
      rule:
        type: "string"
        example: "FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1"
        description: "iCal RRULE parameter to create recurrent scheduled messages.\
          \ When used, sendingTime is mandatory as start point of sending. See https://www.textmagic.com/free-tools/rrule-generator\
          \ for format details"
      createChat:
        type: "boolean"
        example: false
        description: "Should sending method try to create new Chat(if not exist) with\
          \ specified recipients. Default is false"
      tts:
        type: "boolean"
        example: false
        description: "Send Text to Speech message. Default is false"
      local:
        type: "boolean"
        example: false
        description: "Treat phone numbers passed in \\'phones\\' field as local. Default\
          \ is false"
      localCountry:
        type: "string"
        example: "US"
        description: "2-letter ISO country code for local phone numbers, used when\
          \ \\'local\\' is set to true. Default is account country"
    example:
      createChat: false
      partsCount: 6
      sendingDateTime: "2020-05-27 13:02:33"
      phones: "+19993322111,+19993322110"
      rule: "FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=1;COUNT=1"
      cutExtra: true
      templateId: 1
      sendingTime: 1565606455
      referenceId: 1
      local: false
      tts: false
      sendingTimezone: "America/Buenos_Aires"
      localCountry: "US"
      lists: "1,2,3,4"
      from: "Test sender id"
      text: "Test message test"
      contacts: "1,2,3,4"
  DeleteOutboundMessagesBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 1
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      all: 1
      ids: "1,2,3"
  DeleteMessageSessionsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      all: 0
      ids: "1,2,3"
  DeleteScheduledMessagesBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
      status:
        type: "string"
        description: "Default is empty string (false). If set then all entities with\
          \ specified status will be affected."
        default: ""
    example:
      all: 0
      ids: "1,2,3"
      status: "status"
  DeleteInboundMessagesBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "integer"
        example: 0
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      all: 0
      ids: "1,2,3"
  SetChatStatusInputObject:
    required:
    - "id"
    - "status"
    properties:
      id:
        type: "integer"
        example: 1
        description: "Chat ID"
      status:
        type: "string"
        example: "a"
        description: "Status"
        enum:
        - "a"
        - "c"
        - "d"
    example:
      id: 1
      status: "a"
  MuteChatInputObject:
    required:
    - "id"
    - "mute"
    properties:
      id:
        type: "integer"
        example: 1
        description: "Chat ID"
      mute:
        type: "boolean"
        example: true
        description: "Mute value"
      for:
        type: "integer"
        example: 1
        description: "Mute for N hours"
    example:
      for: 1
      mute: true
      id: 1
  MuteChatsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
      for:
        type: "integer"
        example: 1
        description: "Mute for N hours"
    example:
      all: false
      for: 1
      ids: "1,2,3"
  UnmuteChatsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
    example:
      all: false
      ids: "1,2,3"
  MarkChatsUnreadBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
    example:
      all: false
      ids: "1,2,3"
  MarkChatsReadBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
    example:
      all: false
      ids: "1,2,3"
  CloseChatsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
    example:
      all: false
      ids: "1,2,3"
  ReopenChatsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
    example:
      all: false
      ids: "1,2,3"
  DeleteChatsBulkInputObject:
    properties:
      ids:
        type: "string"
        example: "1,2,3"
        description: "Entity ID(s), separated by comma"
      all:
        type: "boolean"
        example: false
        description: "Entity ID(s), separated by comma"
      status:
        type: "string"
        example: "a"
        description: "Default is empty string (false). If set then all entities with\
          \ specified status will be affected."
        enum:
        - "a"
        - "c"
        - "d"
    example:
      all: false
      ids: "1,2,3"
      status: "a"
  DeleteChatMessagesBulkInputObject:
    properties:
      inbound_ids:
        type: "string"
        example: "1,2,3,4"
        description: "Inbound messages ID(s) to delete. Require when \"all\" equal\
          \ to 0 (false)."
      sent_ids:
        type: "string"
        example: "1,2,3,4"
        description: "Sent messages ID(s) to delete. Require when \"all\" equal to\
          \ 0 (false)."
      calls_ids:
        type: "string"
        example: "1,2,3,4"
        description: "Calls ID(s) to delete. Require when \"all\" equal to 0 (false)."
      all:
        type: "boolean"
        example: false
        description: "Default is 0 (false). If set to 1 all the entities will be removed."
    example:
      sent_ids: "1,2,3,4"
      all: false
      calls_ids: "1,2,3,4"
      inbound_ids: "1,2,3,4"
  CreateSurveyInputObject:
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Test survey"
        description: "Survey name"
    example:
      name: "Test survey"
  UpdateSurveyInputObject:
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "New test name"
        description: "Survey name"
      contacts:
        type: "string"
        example: "1,2,3,4"
        description: "Array of contact resources id message will be sent to"
      lists:
        type: "string"
        example: "1,2,3,4"
        description: "Array of list resources id message will be sent to"
      phones:
        type: "string"
        example: "+19998887766,+19998887755"
        description: "Array of E.164 phone numbers message will be sent to"
      country:
        type: "object"
        example:
          GB: 123
          US: 123
        description: "Country values mapping (country => inbound phone id), e.g. country[GB]\
          \ = \"123\", country[US] = \"123\""
        properties: {}
    example:
      country:
        GB: 123
        US: 123
      lists: "1,2,3,4"
      name: "New test name"
      phones: "+19998887766,+19998887755"
      contacts: "1,2,3,4"
  CreateSurveyNodeInputObject:
    properties:
      nodeType:
        type: "string"
        example: "q"
        description: "Node type. \\'a\\' answer; \\'q\\' - question"
        enum:
        - "a"
        - "q"
      label:
        type: "string"
        example: "Question 1"
        description: "Node label"
      body:
        type: "string"
        example: "Test node body"
        description: "Node body"
      startNode:
        type: "integer"
        example: 1
        description: "Start node id"
      sendDelay:
        type: "integer"
        example: 1
        description: "Define delay for sending question to recipients after previous\
          \ answer. Default is 0"
    example:
      startNode: 1
      label: "Question 1"
      nodeType: "q"
      body: "Test node body"
      sendDelay: 1
  UpdateSurveyNodeInputObject:
    properties:
      label:
        type: "string"
        example: "Question 1"
        description: "Node label"
      isEndNode:
        type: "boolean"
        example: false
        description: "Define node is ending for survey. Default is false"
      body:
        type: "string"
        example: "Test node body"
        description: "Node body"
      sendDelay:
        type: "integer"
        example: 1
        description: "Define delay for sending question to recipients after previous\
          \ answer. Default is 0"
    example:
      isEndNode: false
      label: "Question 1"
      body: "Test node body"
      sendDelay: 1
  MergeSurveyNodesInputObject:
    required:
    - "firstNode"
    - "secondNode"
    properties:
      firstNode:
        type: "integer"
        example: 1
        description: "First node id"
      secondNode:
        type: "integer"
        example: 2
        description: "Second node id"
    example:
      secondNode: 2
      firstNode: 1
  CheckPhoneVerificationCodeInputObject_1:
    type: "object"
    required:
    - "code"
    - "verifyId"
    properties:
      code:
        type: "integer"
        example: 1234
        description: "Verification code that was received by the user and entered\
          \ into the form field."
      verifyId:
        type: "string"
        example: "123e4567-e89b-12d3-a456-426655440000"
        description: "VerifyId from Step 1 to match both requests together."
  SendPhoneVerificationCodeInputObject:
    required:
    - "brand"
    - "codeLength"
    - "phone"
    properties:
      phone:
        type: "string"
        example: "447860021130"
        description: "Use the phone number in international E.164 format. If you need\
          \ to pass phone numbers in the local format, please use them with the **country**\
          \ parameter to specify the origin country\nof the phone number.\n"
      brand:
        type: "string"
        example: "TextMagic"
        description: "Alphanumeric string with up to 18 characters you can use to\
          \ personalize the verification text message body, to help users identify\
          \ your company or application name. For example: “Your TextMagic PIN is\
          \ …”\n"
      codeLength:
        type: "integer"
        example: 4
        description: "The length of the verification code. The value can be 4 or 6\
          \ characters.\n"
      language:
        type: "string"
        example: "en-gb"
        description: "By default, the SMS or text-to-speech (TTS) voice message is\
          \ generated in the locale that matches the number. For example, the text\
          \ message or TTS message for\na 33\\* number is sent in French. Use this\
          \ parameter to explicitly control the language, accent, and gender used\
          \ for the verification request.Can be one of\nthe following: `de-de`, `en-au`,\
          \ `en-gb`, `en-us`, `en-in`, `es-es`, `es-mx`, `es-us`, `fr-ca`, `fr-fr`,\
          \ `is-is`, `it-it`, `ja-jp`, `ko-kr`, `nl-nl`, `pl-pl`,\n`pt-pt`, `pt-br`,\
          \ `ro-ro`, `ru-ru`, `sv-se`, `tr-tr`, `zh-cn` or `zh-tw`.\n"
      senderId:
        type: "string"
        example: "TextMagic"
        description: "One of the available [sender settings](https://my.textmagic.com/online/reply-options/)\
          \ on your TextMagic account. If specified sender setting type is not allowed\
          \ for some destinations, a fallback default sender will be used to ensure\
          \ the message delivery. More info about known restrictions can be found\
          \ [here](https://support.textmagic.com/article/how-to-understand-sender-setting-restrictions/).\n"
      country:
        type: "string"
        example: "US"
        description: "2-letter ISO country code for local phone number."
    example:
      country: "US"
      senderId: "TextMagic"
      codeLength: 4
      phone: "447860021130"
      language: "en-gb"
      brand: "TextMagic"
  BadRequestResponse_errors:
    properties:
      common:
        type: "array"
        example:
        - "Common error message 1"
        - "Common error message 2"
        items:
          type: "string"
      fields:
        type: "object"
        example:
          fieldName1:
          - "Error message 1"
          - "Error message 2"
          fieldName2:
          - "Error message 3"
          - "Error message 4"
        properties: {}
  DoAuthResponse_minVersions:
    required:
    - "android"
    - "desktop"
    - "ios"
    properties:
      ios:
        type: "integer"
        example: 0
      android:
        type: "integer"
        example: 0
      desktop:
        type: "integer"
        example: 0
    example:
      desktop: 0
      android: 0
      ios: 0
  MessagesIcs_parameters_recipients:
    required:
    - "contacts"
    - "groups"
    - "numbers"
    properties:
      contacts:
        type: "array"
        items:
          type: "integer"
          example: 39318
      groups:
        type: "array"
        items:
          type: "integer"
          example: 39318
      numbers:
        type: "array"
        items:
          type: "string"
          example: "19993322111"
    example:
      numbers:
      - "19993322111"
      - "19993322111"
      groups:
      - 39318
      - 39318
      contacts:
      - 39318
      - 39318
  MessagesIcs_parameters:
    required:
    - "recipients"
    - "text"
    properties:
      text:
        type: "string"
        example: "Sample text"
      recipients:
        $ref: "#/definitions/MessagesIcs_parameters_recipients"
    example:
      recipients:
        numbers:
        - "19993322111"
        - "19993322111"
        groups:
        - 39318
        - 39318
        contacts:
        - 39318
        - 39318
      text: "Sample text"
  MessagesIcs_textParameters:
    required:
    - "chars"
    - "charsetLabel"
    - "cost"
    - "countries"
    - "encoding"
    - "parts"
    properties:
      cost:
        type: "number"
        example: 0.025
        x-nullable: true
      parts:
        type: "integer"
        example: 6
        x-nullable: true
      chars:
        type: "integer"
        example: 5
        x-nullable: true
      encoding:
        type: "string"
        example: "ISO-8859-1"
        x-nullable: true
      countries:
        type: "array"
        items:
          type: "string"
          example: "US"
        x-nullable: true
      charsetLabel:
        type: "string"
        example: "ISO-8859-1"
        x-nullable: true
    example:
      cost: 0.025
      parts: 6
      countries:
      - "US"
      - "US"
      encoding: "ISO-8859-1"
      charsetLabel: "ISO-8859-1"
      chars: 5
externalDocs:
  description: "Old API documentation"
  url: "http://docs.textmagictesting.com/"
x-ignoredHeaderParameters:
- "X-Ignore-Null-Values"
x-tagGroups:
- name: "Messaging"
  tags:
  - "Outbound Messages"
  - "Inbound Messages"
  - "Scheduled Messages"
  - "Two Factor auth"
  - "Chats"
  - "Outbound Message Sessions"
  - "Templates"
